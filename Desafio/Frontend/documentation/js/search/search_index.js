var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.973,1,2.719]],["body/guards/AdminGuard.html",[1,4.054,2,3.374,3,0.158,4,0.139,5,0.139,6,3.761,7,0.378,8,1.216,9,5.259,10,1.006,11,3.761,12,3.7,13,3.772,14,0.814,15,4.348,16,1.496,17,0.016,18,0.664,19,0.737,20,1.496,21,4.941,22,4.621,23,4.348,24,0.925,25,4.941,26,0.461,27,1.693,28,0.533,29,3.761,30,3.761,31,3.761,32,1.187,33,2.499,34,2.355,35,2.499,36,3.761,37,3.374,38,0.158,39,0.081,40,1.093,41,3.086,42,3.086,43,3.761,44,3.086,45,2.855,46,3.374,47,3.086,48,3.761,49,2.676,50,3.283,51,4.348,52,4.348,53,4.348,54,2.355,55,0.011,56,0.011]],["title/injectables/AlertService.html",[27,1.135,57,1.684]],["body/injectables/AlertService.html",[3,0.086,4,0.075,5,0.075,7,0.205,8,0.782,10,0.545,12,3.131,14,0.925,16,1.701,17,0.016,18,0.756,19,0.838,20,1.701,24,1.345,26,0.362,27,1.089,28,0.289,32,0.643,38,0.086,39,0.044,49,2.652,50,2.594,54,1.276,55,0.007,56,0.007,57,1.615,58,1.207,59,2.038,60,7.53,61,3.673,62,4.288,63,3.673,64,5.854,65,3.673,66,3.673,67,3.673,68,4.514,69,2.356,70,2.761,71,2.356,72,2.111,73,3.673,74,2.58,75,2.356,76,7.466,77,6.323,78,3.673,79,2.356,80,5.471,81,3.673,82,3.956,83,2.356,84,3.673,85,2.356,86,3.673,87,2.356,88,5.854,89,3.673,90,2.356,91,3.673,92,2.356,93,3.673,94,2.356,95,1.207,96,0.728,97,1.145,98,2.038,99,2.356,100,1.829,101,1.829,102,1.672,103,1.088,104,0.902,105,4.338,106,6.323,107,5.288,108,6.323,109,6.323,110,6.323,111,4.514,112,4.514,113,4.514,114,2.356,115,4.514,116,2.356,117,2.765,118,2.765,119,2.356,120,2.356,121,2.356,122,2.356,123,2.356,124,1.672,125,2.356,126,2.356,127,2.356,128,2.038,129,2.356,130,2.356,131,1.829,132,1.207,133,2.356,134,2.356,135,3.177,136,2.356,137,2.356,138,2.356,139,2.356,140,1.829,141,2.356,142,2.356,143,1.354,144,2.356,145,2.356,146,2.356,147,1.354,148,2.356,149,2.356]],["title/components/AppComponent.html",[150,0.6,151,1.234]],["body/components/AppComponent.html",[3,0.128,4,0.112,5,0.112,7,0.306,14,0.501,17,0.016,18,0.575,19,0.454,26,0.231,28,0.432,38,0.128,39,0.066,55,0.01,56,0.01,74,1.183,80,4.44,96,1.087,102,3.511,150,0.896,151,2,152,1.812,153,1.347,154,1.347,155,1.347,156,1.347,157,3.044,158,1.347,159,2.95,160,2.823,161,1.894,162,5.721,163,1.894,164,4.947,165,0.887,166,1.347,167,1.289,168,4.28,169,3.519,170,4.947,171,3.519,172,4.076,173,4.947,174,3.519,175,3.511,176,4.947,177,4.947,178,4.947,179,3.519,180,4.947,181,4.947,182,4.947,183,5.305,184,6.206,185,4.947,186,4.947,187,4.947,188,3.519,189,3.519,190,3.519,191,3.519,192,1.347,193,1.894,194,1.894,195,1.347,196,2.177,197,1.347,198,1.347,199,1.134,200,1.347,201,1.043,202,1.347,203,1.087,204,1.347,205,1.087,206,1.347,207,1.134,208,1.347,209,1.043,210,1.347,211,1.087,212,1.347,213,1.134,214,1.347,215,1.134,216,1.347,217,1.087,218,1.918,219,1.347,220,1.087,221,1.347,222,1.087,223,1.347,224,1.087,225,1.183,226,1.347,227,1.087,228,0.884,229,1.235,230,1.347,231,1.347]],["title/modules/AppModule.html",[232,1.607,233,2.719]],["body/modules/AppModule.html",[3,0.142,4,0.124,5,0.124,17,0.016,26,0.49,28,0.478,38,0.194,39,0.073,54,2.877,55,0.011,56,0.011,95,1.997,132,1.997,151,2.451,233,5.434,234,1.429,235,2.452,236,3.373,237,3.373,238,3.373,239,3.373,240,4.597,241,4.288,242,4.597,243,2.721,244,1.997,245,1.894,246,3.026,247,2.877,248,2.227,249,4.594,250,2.227,251,5.311,252,4.594,253,3.026,254,3.899,255,3.899,256,3.373,257,3.899,258,5.311,259,5.225,260,5.311,261,3.899,262,3.488,263,3.899,264,3.488,265,3.899,266,4.122,267,4.594,268,4.594,269,4.594,270,1.801]],["title/modules/AppRoutingModule.html",[232,1.607,240,2.516]],["body/modules/AppRoutingModule.html",[1,4.335,3,0.145,4,0.127,5,0.127,9,4.183,17,0.016,26,0.487,28,0.489,32,1.088,35,2.29,38,0.145,39,0.074,55,0.011,56,0.011,62,3.093,132,2.041,150,0.956,201,1.181,203,2.022,209,1.181,228,1.002,234,1.46,240,3.54,241,2.441,248,1.671,250,2.261,256,3.447,270,1.84,271,3.985,272,2.489,273,3.308,274,3.985,275,4.335,276,3.985,277,3.447,278,3.985,279,5.39,280,3.985,281,3.093,282,2.617,283,3.093,284,4.627,285,3.447,286,3.985,287,3.985,288,6.544,289,3.985,290,6.544,291,3.985,292,3.985,293,3.985,294,3.447,295,3.985,296,3.985,297,3.985,298,2.828,299,3.447,300,3.985,301,3.985,302,3.985,303,3.985,304,1.752]],["title/interceptors/AuthInterceptor.html",[264,2.516,305,2.973]],["body/interceptors/AuthInterceptor.html",[3,0.139,4,0.122,5,0.122,7,0.333,8,1.116,10,1.213,12,3.651,13,3.566,14,0.747,16,1.373,17,0.016,18,0.61,19,0.772,20,1.373,24,0.814,26,0.456,27,1.554,28,0.469,32,1.044,33,3.437,34,2.072,37,2.969,38,0.139,39,0.071,40,0.961,45,2.512,46,2.969,47,2.715,49,2.199,55,0.011,56,0.011,62,2.969,82,4.069,95,1.96,104,2.007,132,3.064,135,3.31,264,3.443,306,3.31,307,3.31,308,4.535,309,2.969,310,3.826,311,4.535,312,5.565,313,5.173,314,5.565,315,3.826,316,3.31,317,3.31,318,4.535,319,3.31,320,3.31,321,3.31,322,4.535,323,5.243,324,3.826,325,5.243,326,3.826,327,3.927,328,3.826,329,3.826,330,3.826,331,3.826,332,3.826,333,3.826,334,3.826,335,3.31,336,3.826,337,5.243,338,3.826,339,3.31,340,3.826,341,5.243,342,3.31,343,3.826,344,3.31]],["title/modules/AuthModule.html",[232,1.607,345,2.719]],["body/modules/AuthModule.html",[3,0.152,4,0.133,5,0.133,17,0.016,26,0.491,28,0.51,32,1.135,38,0.152,39,0.078,55,0.011,56,0.011,205,2.204,211,2.204,234,1.524,235,2.561,243,2.841,244,2.13,245,2.02,247,3.004,248,2.326,250,2.326,270,2.561,272,2.561,294,3.597,304,1.829,345,5.514,346,3.597,347,3.597,348,3.597,349,3.597,350,4.685,351,4.1,352,3.864,353,4.159,354,3.397,355,2.39,356,3.936,357,3.936,358,2.02,359,3.597,360,3.228,361,3.228,362,3.597,363,2.951]],["title/modules/AuthRoutingModule.html",[232,1.607,350,2.516]],["body/modules/AuthRoutingModule.html",[3,0.187,4,0.164,5,0.164,17,0.016,26,0.472,28,0.629,32,1.4,38,0.187,39,0.096,55,0.013,56,0.013,132,2.628,150,0.803,205,1.962,211,1.585,234,1.879,248,2.152,250,2.662,270,2.369,272,2.931,273,3.734,284,4.169,304,2.256,350,4.169,359,4.438,362,4.438,364,5.13,365,3.982,366,3.641,367,4.438,368,5.13,369,3.641]],["title/injectables/AuthService.html",[27,1.135,351,2.202]],["body/injectables/AuthService.html",[3,0.169,4,0.148,5,0.148,7,0.404,8,1.269,10,1.075,14,0.938,16,1.562,17,0.016,18,0.694,19,0.77,20,1.562,24,0.989,26,0.456,27,1.768,28,0.57,38,0.169,39,0.087,49,1.949,55,0.012,56,0.012,58,2.38,95,2.38,103,2.145,104,2.522,165,1.069,166,1.779,167,1.702,228,1.499,351,3.428,366,4.233,370,4.019,371,4.034,372,3.051,373,4.563,374,5.964,375,3.428,376,5.964,377,3.764,378,4.646,379,5.964,380,2.67,381,3.051,382,3.606,383,4.646]],["title/guards/BaseGuard.html",[0,2.973,275,2.719]],["body/guards/BaseGuard.html",[2,3.467,3,0.163,4,0.142,5,0.142,7,0.388,8,1.237,9,5.314,10,1.034,11,3.864,12,3.728,13,3.796,14,0.828,16,1.523,17,0.016,18,0.676,19,0.75,20,1.523,21,5.03,22,4.662,24,0.951,25,5.03,26,0.449,27,1.723,28,0.548,29,3.864,30,3.864,31,3.864,32,1.219,33,2.567,34,2.42,37,3.467,38,0.163,39,0.083,40,1.123,41,3.171,42,3.171,43,3.864,44,3.171,45,2.934,46,3.467,47,3.171,48,3.864,49,2.439,50,2.567,54,2.42,55,0.012,56,0.012,275,4.127,384,3.864,385,4.468,386,4.468,387,4.468,388,4.468]],["title/modules/ComponentsModule.html",[232,1.607,389,2.516]],["body/modules/ComponentsModule.html",[3,0.171,4,0.15,5,0.15,17,0.016,26,0.473,28,0.576,32,1.283,38,0.171,39,0.088,55,0.012,56,0.012,70,3.254,96,1.856,97,2.283,207,2.52,234,1.722,235,2.774,243,3.078,244,2.408,245,2.283,247,3.254,248,1.971,250,2.52,270,2.17,272,2.774,304,2.642,354,3.68,355,2.701,389,4.924,390,4.066,391,4.066,392,4.066,393,4.7,394,3.648,395,4.7,396,6.008]],["title/injectables/DatatableService.html",[27,1.135,397,2.516]],["body/injectables/DatatableService.html",[3,0.158,4,0.139,5,0.139,7,0.378,8,1.216,10,1.476,14,0.909,17,0.016,24,1.216,26,0.285,27,1.693,28,0.533,38,0.158,39,0.081,54,2.355,55,0.011,56,0.011,58,2.227,101,3.374,102,3.086,143,3.894,183,4.528,196,1.525,397,3.751,398,3.374,399,6.776,400,6.776,401,4.348,402,4.348,403,2.093,404,4.348,405,4.348,406,5.713,407,4.348,408,4.348,409,4.348,410,4.348,411,5.713,412,5.713,413,5.713,414,4.348,415,5.713,416,4.348,417,4.348,418,4.348,419,6.38,420,4.348,421,4.348,422,4.348,423,4.348,424,4.348,425,4.348,426,4.348,427,4.348,428,3.761,429,2.663,430,4.348,431,4.348,432,4.348,433,4.348,434,4.348,435,4.348,436,4.348,437,4.348,438,4.348]],["title/classes/Datetime.html",[39,0.071,439,2.719]],["body/classes/Datetime.html",[3,0.199,4,0.174,5,0.174,7,0.474,8,1.403,14,0.777,16,1.429,17,0.016,18,0.635,19,0.704,20,1.429,24,1.161,38,0.199,39,0.102,49,2.289,55,0.013,56,0.013,439,4.679,440,2.52,441,4.721,442,4.652,443,6.593,444,6.593,445,5.028,446,5.458,447,4.721,448,5.458]],["title/classes/Elo.html",[39,0.071,449,1.769]],["body/classes/Elo.html",[3,0.203,4,0.178,5,0.178,7,0.484,14,0.951,17,0.015,18,0.831,19,0.861,38,0.203,39,0.104,55,0.013,56,0.013,74,2.243,165,1.196,440,2.572,449,3.082,450,4.818,451,2.402,452,2.243,453,5.57,454,5.57]],["title/injectables/EloService.html",[27,1.135,455,1.962]],["body/injectables/EloService.html",[3,0.164,4,0.144,5,0.144,7,0.392,8,1.244,10,1.042,14,0.978,16,1.531,17,0.016,18,0.68,19,0.754,20,1.531,24,1.244,26,0.45,27,1.733,28,0.552,38,0.164,39,0.084,49,2.452,55,0.012,56,0.012,58,2.307,95,2.307,103,2.08,104,2.485,165,1.048,166,1.725,167,1.65,371,3.975,372,2.958,373,4.51,375,3.36,380,2.589,381,2.958,449,2.699,455,2.995,456,3.897,457,3.581,458,6.869,459,5.846,460,5.846,461,3.337,462,4.505,463,4.505,464,5.846,465,3.197,466,3.197,467,3.496]],["title/interceptors/ErrorInterceptor.html",[262,2.516,305,2.973]],["body/interceptors/ErrorInterceptor.html",[3,0.162,4,0.142,5,0.142,7,0.386,8,1.233,10,1.34,14,0.825,16,1.517,17,0.016,18,0.674,19,0.748,20,1.517,24,0.945,26,0.465,27,1.717,28,0.545,33,3.705,34,2.406,38,0.162,39,0.083,40,1.117,49,2.43,55,0.012,56,0.012,57,3.195,82,4.497,95,2.276,104,1.701,262,3.805,306,3.843,308,5.012,311,5.012,312,5.91,313,5.577,314,5.91,316,3.843,317,3.843,318,5.012,319,3.843,320,3.843,321,3.843,322,3.843,335,3.843,344,3.843,468,3.843,469,4.443,470,4.443,471,4.443,472,4.443,473,4.443,474,4.443,475,4.443]],["title/components/FooterComponent.html",[150,0.6,199,1.234]],["body/components/FooterComponent.html",[3,0.139,4,0.122,5,0.122,7,0.333,8,1.116,10,1.384,14,0.747,17,0.016,18,0.61,24,0.814,26,0.251,28,0.469,38,0.139,39,0.071,40,1.317,55,0.011,56,0.011,96,1.182,150,0.936,151,1.233,152,1.921,153,1.465,154,1.465,155,1.465,156,1.465,158,1.465,159,2.981,160,2.853,161,2.007,163,2.007,192,1.465,193,2.007,194,2.007,195,1.465,196,2.257,197,1.465,198,1.465,199,2.073,200,1.465,201,1.134,202,1.465,203,1.182,204,1.465,205,1.182,206,1.465,207,1.233,208,1.465,209,1.134,210,1.465,211,1.182,212,1.465,213,1.233,214,1.465,215,1.233,216,1.465,217,1.182,218,1.988,219,1.465,220,1.182,221,1.465,222,1.182,223,1.465,224,1.182,225,1.286,226,1.465,227,1.182,228,0.961,229,1.342,230,1.465,231,1.465,403,1.921,476,3.31,477,2.395,478,5.243,479,5.981,480,5.243,481,2.577,482,3.826,483,3.826,484,5.243,485,3.826,486,5.243,487,5.243]],["title/components/ForbiddenComponent.html",[150,0.6,201,1.135]],["body/components/ForbiddenComponent.html",[3,0.132,4,0.115,5,0.115,7,0.315,8,1.074,10,1.344,14,0.828,17,0.016,18,0.587,24,0.771,26,0.237,28,0.444,38,0.132,39,0.068,40,1.268,55,0.01,56,0.01,96,1.119,140,3.917,150,0.909,151,1.167,152,1.849,153,1.386,154,1.386,155,1.386,156,1.386,158,1.386,159,2.961,160,2.833,161,1.932,163,1.932,165,0.904,166,1.386,167,1.327,192,1.386,193,1.932,194,1.932,195,1.386,196,2.205,197,1.386,198,1.386,199,1.167,200,1.386,201,1.863,202,1.386,203,1.119,204,1.386,205,1.119,206,1.386,207,1.167,208,1.386,209,1.073,210,1.386,211,1.119,212,1.386,213,1.167,214,1.386,215,1.167,216,1.386,217,1.119,218,1.942,219,1.386,220,1.119,221,1.386,222,1.119,223,1.386,224,1.119,225,1.217,226,1.386,227,1.119,228,0.91,229,1.27,230,1.386,231,1.386,342,4.366,403,1.849,477,2.327,481,2.517,488,4.127,489,3.133,490,5.436,491,5.81,492,5.047,493,5.81,494,5.047,495,3.621,496,3.091,497,5.047,498,3.133,499,4.366,500,4.366,501,3.917]],["title/modules/HttpCodesModule.html",[232,1.607,502,2.516]],["body/modules/HttpCodesModule.html",[3,0.159,4,0.139,5,0.139,17,0.016,26,0.474,28,0.535,32,1.19,38,0.159,39,0.081,55,0.011,56,0.011,201,2.294,209,2.294,234,1.597,235,2.642,243,2.931,244,2.233,245,2.118,247,3.099,248,2.4,250,2.4,272,2.642,282,2.863,283,3.384,298,3.094,304,2.516,354,3.505,355,2.505,375,2.505,488,2.863,502,5.082,503,3.771,504,3.771,505,3.771,506,3.771,507,4.747,508,4.36,509,3.771,510,4.36]],["title/modules/HttpCodesRoutingModule.html",[232,1.607,507,2.516]],["body/modules/HttpCodesRoutingModule.html",[3,0.186,4,0.163,5,0.163,17,0.016,26,0.472,28,0.627,32,1.396,38,0.186,39,0.095,55,0.013,56,0.013,132,2.62,150,0.992,201,1.878,209,1.878,234,1.874,248,2.145,250,2.657,270,2.361,272,2.926,273,3.729,282,3.358,283,3.969,284,4.161,298,3.63,304,2.249,369,3.63,488,3.358,490,4.424,507,4.161,509,4.424,511,5.114,512,5.114]],["title/interfaces/IApiService.html",[513,1.467,514,2.719]],["body/interfaces/IApiService.html",[3,0.161,4,0.141,5,0.141,7,0.385,8,1.231,14,1.009,16,1.787,17,0.016,18,0.794,19,0.881,20,1.787,24,1.507,26,0.29,33,4.43,34,2.4,38,0.161,55,0.012,56,0.012,451,1.944,452,2.441,457,3.543,513,1.696,514,4.105,515,2.4,516,5.636,517,3.833,518,5.003,519,5.003,520,5.003,521,5.003,522,7.262,523,4.431,524,4.105,525,5.003,526,4.431,527,4.431,528,5.003,529,4.431,530,5.003,531,4.431]],["title/interfaces/IElo.html",[461,1.861,513,1.467]],["body/interfaces/IElo.html",[3,0.204,4,0.178,5,0.178,7,0.486,17,0.015,18,0.863,19,0.863,38,0.204,55,0.013,56,0.013,74,2.406,165,1.198,451,2.493,452,2.406,461,3.249,513,2.14,515,3.027,532,4.835]],["title/interfaces/IMatch.html",[513,1.467,533,2.202]],["body/interfaces/IMatch.html",[3,0.189,4,0.165,5,0.165,7,0.45,17,0.016,19,0.933,26,0.34,38,0.189,55,0.013,56,0.013,165,1.144,451,2.327,452,2.146,513,1.983,515,2.805,533,3.67,534,4.48,535,6.252,536,6.252,537,4.746,538,3.624,539,4.02,540,5.179]],["title/interfaces/ITeam.html",[513,1.467,538,1.769]],["body/interfaces/ITeam.html",[3,0.194,4,0.169,5,0.169,7,0.462,17,0.016,18,0.848,19,0.904,26,0.348,38,0.194,55,0.013,56,0.013,74,2.354,165,1.163,377,3.95,451,2.451,452,2.354,513,2.035,515,2.879,538,2.996,541,4.597,542,6.308,543,5.315]],["title/interfaces/ITournament.html",[513,1.467,544,1.962]],["body/interfaces/ITournament.html",[3,0.164,4,0.144,5,0.144,7,0.392,17,0.016,18,0.799,19,0.971,26,0.425,38,0.164,55,0.012,56,0.012,74,2.181,165,1.048,445,5.27,451,2.309,452,2.452,461,3.337,513,1.725,515,2.44,533,3.947,537,4.51,538,3.429,539,3.496,544,2.995,545,3.897,546,4.875,547,5.942,548,5.331,549,5.331,550,3.897,551,4.505]],["title/interfaces/IUser.html",[377,2.075,513,1.467]],["body/interfaces/IUser.html",[3,0.168,4,0.147,5,0.147,7,0.402,17,0.016,18,0.807,19,0.964,26,0.431,35,4.349,38,0.168,55,0.012,56,0.012,74,2.569,165,1.065,377,3.218,449,3.202,451,2.331,452,2.208,461,3.369,513,1.769,515,2.502,538,3.202,539,3.586,550,3.996,552,3.996,553,4.248,554,4.248,555,3.369,556,3.996]],["title/interfaces/IUserForRegister.html",[513,1.467,557,2.516]],["body/interfaces/IUserForRegister.html",[3,0.19,4,0.166,5,0.166,7,0.453,17,0.016,18,0.843,19,0.935,38,0.19,55,0.013,56,0.013,74,2.666,165,1.149,513,1.996,515,2.823,553,4.437,554,4.437,557,4.21,558,3.699,559,4.046,560,4.509,561,5.622]],["title/classes/InfoGeneralUser.html",[39,0.071,562,2.719]],["body/classes/InfoGeneralUser.html",[3,0.175,4,0.153,5,0.153,7,0.417,10,1.11,14,1.002,16,1.256,17,0.016,18,0.558,19,0.863,20,1.256,38,0.175,39,0.09,55,0.012,56,0.012,165,1.091,229,2.546,440,2.215,452,2.493,562,4.32,563,5.633,564,5.633,565,4.15,566,5.784,567,5.784,568,5.784,569,4.797,570,6.686,571,6.686,572,6.087,573,6.087,574,4.797,575,4.797,576,4.797,577,4.15,578,4.15,579,4.15]],["title/injectables/JwtService.html",[13,1.962,27,1.135]],["body/injectables/JwtService.html",[3,0.154,4,0.135,5,0.135,7,0.368,8,1.195,10,1.457,13,2.876,14,0.994,16,1.109,17,0.016,18,0.493,19,0.546,20,1.109,24,1.427,26,0.413,27,1.664,28,0.519,38,0.154,39,0.079,49,2.812,55,0.011,56,0.011,58,2.169,74,2.117,101,3.287,102,3.005,132,2.876,196,1.485,327,4.804,496,2.594,580,3.663,581,6.706,582,6.706,583,6.706,584,5.614,585,4.235,586,4.235,587,4.235,588,4.235,589,5.614,590,4.235,591,4.235,592,3.663,593,3.663,594,4.235,595,4.235,596,4.235,597,4.235,598,4.235,599,5.614,600,4.235,601,4.235,602,4.235,603,4.235,604,4.235,605,4.235,606,4.235,607,4.235,608,4.235]],["title/components/LayoutComponent.html",[150,0.6,203,1.184]],["body/components/LayoutComponent.html",[3,0.142,4,0.124,5,0.124,7,0.339,8,1.13,10,1.397,14,0.756,17,0.016,18,0.618,24,0.83,26,0.256,28,0.478,38,0.142,39,0.073,40,1.335,55,0.011,56,0.011,96,1.205,150,0.945,151,1.256,152,1.946,153,1.493,154,1.493,155,1.493,156,1.493,158,1.493,159,2.988,160,2.859,161,2.033,163,2.033,192,1.493,193,2.033,194,2.033,195,1.493,196,2.275,197,1.493,198,1.493,199,1.256,200,1.493,201,1.156,202,1.493,203,2.004,204,1.493,205,1.205,206,1.493,207,1.256,208,1.493,209,1.156,210,1.493,211,1.205,212,1.493,213,1.256,214,1.493,215,1.256,216,1.493,217,1.205,218,2.004,219,1.493,220,1.205,221,1.493,222,1.205,223,1.493,224,1.205,225,1.311,226,1.493,227,1.205,228,0.98,229,1.368,230,1.493,231,1.493,403,1.946,477,2.419,481,2.597,609,3.373,610,5.311,611,6.04,612,5.311,613,3.899,614,3.899]],["title/modules/LayoutModule.html",[232,1.607,241,2.347]],["body/modules/LayoutModule.html",[3,0.146,4,0.127,5,0.127,17,0.016,26,0.481,28,0.49,32,1.09,38,0.146,39,0.075,55,0.011,56,0.011,199,2.46,203,2.359,213,2.46,215,2.46,234,1.464,235,2.493,241,4.776,243,2.766,244,2.046,245,1.941,247,2.924,248,1.675,250,2.264,270,1.845,272,2.493,304,2.374,354,3.307,355,2.296,356,3.832,357,3.832,358,1.941,615,3.456,616,3.456,617,3.456,618,3.995,619,3.995,620,3.995,621,3.995,622,3.995]],["title/components/LoginComponent.html",[150,0.6,205,1.184]],["body/components/LoginComponent.html",[3,0.097,4,0.085,5,0.085,7,0.231,8,0.857,10,0.615,12,3.268,13,3.268,14,0.875,16,0.696,17,0.016,18,0.566,19,0.52,20,0.696,22,2.645,24,1.035,26,0.431,28,0.326,32,0.725,38,0.097,39,0.05,40,1.012,44,1.885,47,3.453,55,0.008,56,0.008,57,2.805,70,2.94,72,2.796,96,1.244,97,1.29,103,1.227,104,2.351,117,1.627,118,1.627,124,1.885,150,0.762,151,0.856,152,1.476,153,1.017,154,1.017,155,1.017,156,1.017,158,1.017,159,2.832,160,2.71,161,1.542,163,1.542,165,0.722,166,1.017,167,0.973,192,1.017,193,1.542,194,1.542,195,1.017,196,1.904,197,1.017,198,1.017,199,0.856,200,1.017,201,0.787,202,1.017,203,0.821,204,1.017,205,1.677,206,1.017,207,0.856,208,1.017,209,0.787,210,1.017,211,0.821,212,1.017,213,0.856,214,1.017,215,0.856,216,1.017,217,0.821,218,1.677,219,1.017,220,0.821,221,1.017,222,0.821,223,1.017,224,0.821,225,0.893,226,1.017,227,0.821,228,1.364,229,0.932,230,1.017,231,1.017,351,3.667,358,1.29,361,2.062,366,4.664,403,1.989,477,1.948,481,2.174,553,1.627,554,1.627,623,2.298,624,4.865,625,4.028,626,4.865,627,5.429,628,2.657,629,4.213,630,4.19,631,4.028,632,2.657,633,2.657,634,2.657,635,3.195,636,2.657,637,4.028,638,1.439,639,2.062,640,2.298,641,2.657,642,2.657,643,1.885,644,1.744,645,2.657,646,2.657,647,1.527,648,2.657,649,2.298,650,2.298,651,2.062,652,2.298,653,2.657,654,2.657,655,3.126,656,2.657,657,3.484,658,2.657,659,4.028,660,3.484,661,4.028,662,3.126,663,3.126,664,3.484]],["title/classes/Match.html",[39,0.071,665,2.516]],["body/classes/Match.html",[3,0.183,4,0.16,5,0.16,7,0.436,14,1.018,17,0.016,19,0.922,26,0.411,38,0.183,39,0.094,40,1.574,55,0.013,56,0.013,165,1.122,440,2.318,451,2.294,452,2.105,533,3.923,535,5.905,536,5.905,537,4.483,555,3.737,665,4.113,666,4.342,667,5.019,668,5.019,669,5.019,670,5.019,671,4.342]],["title/components/NgxSpinnerComponent.html",[150,0.6,207,1.234]],["body/components/NgxSpinnerComponent.html",[3,0.137,4,0.12,5,0.12,7,0.328,8,1.105,10,1.374,14,0.74,17,0.016,18,0.604,24,0.803,26,0.247,28,0.463,38,0.137,39,0.07,40,1.305,55,0.01,56,0.01,96,2.235,97,2.522,150,0.929,151,1.216,152,1.902,153,1.444,154,1.444,155,1.444,156,1.444,158,1.444,159,2.976,160,2.848,161,1.988,163,1.988,192,1.444,193,1.988,194,1.988,195,1.444,196,2.244,197,1.444,198,1.444,199,1.216,200,1.444,201,1.118,202,1.444,203,1.166,204,1.444,205,1.166,206,1.444,207,2.061,208,1.444,209,1.118,210,1.444,211,1.166,212,1.444,213,1.216,214,1.444,215,1.216,216,1.444,217,1.166,218,1.976,219,1.444,220,1.166,221,1.444,222,1.166,223,1.444,224,1.166,225,1.268,226,1.444,227,1.166,228,0.948,229,1.323,230,1.444,231,1.444,394,4.608,403,1.902,477,2.378,481,2.561,672,5.136,673,3.263,674,5.937,675,5.192,676,3.773,677,3.773,678,5.192]],["title/components/NotFoundComponent.html",[150,0.6,209,1.135]],["body/components/NotFoundComponent.html",[3,0.133,4,0.116,5,0.116,7,0.318,8,1.081,10,1.351,12,1.872,14,0.723,17,0.016,18,0.591,24,0.778,26,0.333,28,0.448,32,0.997,38,0.133,39,0.068,40,1.276,55,0.01,56,0.01,96,1.129,140,3.942,150,0.914,151,1.177,152,1.861,153,1.399,154,1.399,155,1.399,156,1.399,158,1.399,159,2.964,160,2.837,161,1.944,163,1.944,192,1.399,193,1.944,194,1.944,195,1.399,196,2.213,197,1.399,198,1.399,199,1.177,200,1.399,201,1.083,202,1.399,203,1.129,204,1.399,205,1.129,206,1.399,207,1.177,208,1.399,209,1.87,210,1.399,211,1.129,212,1.399,213,1.177,214,1.399,215,1.177,216,1.399,217,1.129,218,1.949,219,1.399,220,1.129,221,1.399,222,1.129,223,1.399,224,1.129,225,1.228,226,1.399,227,1.129,228,0.918,229,1.282,230,1.399,231,1.399,281,4.531,282,3.833,403,1.861,477,2.338,481,2.527,488,3.833,498,3.161,499,4.393,500,4.393,501,3.942,679,3.161,680,6.309,681,5.838,682,5.079,683,3.654,684,3.654,685,5.079]],["title/classes/Properties.html",[39,0.071,165,0.686]],["body/classes/Properties.html",[3,0.16,4,0.14,5,0.14,7,0.382,8,1.224,14,0.819,16,1.507,17,0.016,18,0.669,19,0.742,20,1.507,24,1.224,38,0.16,39,0.082,49,1.843,55,0.012,56,0.012,74,2.435,165,1.369,403,2.108,440,2.029,442,4.758,447,4.976,451,1.477,524,5.142,686,3.802,687,5.753,688,5.753,689,5.753,690,4.395,691,6.804,692,6.804,693,5.753,694,5.753,695,4.395,696,4.976,697,5.753,698,5.753,699,5.753,700,5.753,701,5.753,702,5.753,703,3.802,704,4.395]],["title/components/RegisterComponent.html",[150,0.6,211,1.184]],["body/components/RegisterComponent.html",[3,0.1,4,0.088,5,0.088,7,0.24,8,0.881,10,0.638,12,3.309,14,0.844,16,0.722,17,0.016,18,0.643,19,0.534,20,0.722,24,1.058,26,0.423,28,0.338,32,0.752,38,0.1,39,0.051,40,1.041,45,1.809,55,0.008,56,0.008,57,2.84,70,2.995,72,2.859,96,1.279,97,1.339,103,1.272,104,2.117,131,3.214,147,2.38,150,0.779,151,0.888,152,1.517,153,1.055,154,1.055,155,1.055,156,1.055,158,1.055,159,2.849,160,2.726,161,1.585,163,1.585,165,0.742,192,1.055,193,1.585,194,1.585,195,1.055,196,1.94,197,1.055,198,1.055,199,0.888,200,1.055,201,0.817,202,1.055,203,0.851,204,1.055,205,0.851,206,1.055,207,0.888,208,1.055,209,0.817,210,1.055,211,1.709,212,1.055,213,0.888,214,1.055,215,0.888,216,1.055,217,0.851,218,1.709,219,1.055,220,0.851,221,1.055,222,0.851,223,1.055,224,0.851,225,0.926,226,1.055,227,0.851,228,0.692,229,0.967,230,1.055,231,1.055,352,3.499,358,1.339,363,1.956,366,2.939,367,4.303,403,2.026,477,1.992,481,2.215,553,1.688,554,1.688,558,1.956,561,2.139,630,4.089,635,3.266,638,1.492,643,1.956,647,1.584,655,2.139,657,2.384,662,3.214,663,3.214,664,5.387,705,2.384,706,4.974,707,4.141,708,4.974,709,5.531,710,5.531,711,2.756,712,4.141,713,2.756,714,2.756,715,2.756,716,2.139,717,2.939,718,2.139,719,2.756,720,2.756,721,4.292,722,2.756,723,2.756,724,2.756,725,2.756,726,4.141,727,4.141,728,4.141,729,4.141,730,3.582,731,4.141,732,4.141,733,3.582]],["title/modules/SharedModule.html",[232,1.607,242,2.516]],["body/modules/SharedModule.html",[3,0.18,4,0.157,5,0.157,17,0.016,26,0.444,28,0.604,38,0.18,39,0.092,55,0.012,56,0.012,234,1.805,235,2.859,242,4.977,243,3.171,244,2.524,245,2.394,247,2.669,248,2.596,250,2.596,298,3.497,299,4.263,304,2.722,375,2.832,389,4.445,502,5.17,734,4.263,735,4.263,736,4.928,737,4.928,738,4.928]],["title/components/SidebarComponent.html",[150,0.6,213,1.234]],["body/components/SidebarComponent.html",[3,0.126,4,0.11,5,0.11,7,0.301,8,1.04,10,0.8,13,3.455,14,0.807,16,0.906,17,0.016,18,0.659,19,0.631,20,0.906,24,0.736,26,0.372,28,0.424,35,3.876,36,2.993,38,0.126,39,0.065,40,1.228,55,0.01,56,0.01,96,1.069,103,1.597,150,0.887,151,1.115,152,1.791,153,1.325,154,1.325,155,1.325,156,1.325,158,1.325,159,2.944,160,2.817,161,1.871,163,1.871,165,0.876,166,1.325,167,1.267,192,1.325,193,1.871,194,1.871,195,1.325,196,2.161,197,1.325,198,1.325,199,1.115,200,1.325,201,1.025,202,1.325,203,1.069,204,1.325,205,1.069,206,1.325,207,1.115,208,1.325,209,1.025,210,1.325,211,1.069,212,1.325,213,1.985,214,1.325,215,1.115,216,1.325,217,1.069,218,1.903,219,1.325,220,1.069,221,1.325,222,1.069,223,1.325,224,1.069,225,1.163,226,1.325,227,1.069,228,0.869,229,1.214,230,1.325,231,1.325,309,2.685,403,1.791,477,2.27,481,2.467,639,2.685,739,2.993,740,4.888,741,5.668,742,4.888,743,4.888,744,3.46,745,4.888,746,4.888,747,4.888,748,4.888,749,3.469,750,2.994,751,4.888,752,4.888,753,4.888]],["title/classes/Team.html",[39,0.071,555,1.861]],["body/classes/Team.html",[3,0.189,4,0.165,5,0.165,7,0.45,14,0.986,17,0.016,18,0.805,19,0.893,26,0.419,38,0.189,39,0.097,40,1.605,55,0.013,56,0.013,74,2.146,165,1.144,228,1.816,440,2.392,451,2.327,452,2.146,538,3.197,542,5.989,555,3.102,754,4.48,755,5.179,756,5.179,757,5.179,758,3.676]],["title/injectables/TeamService.html",[27,1.135,759,2.347]],["body/injectables/TeamService.html",[3,0.156,4,0.137,5,0.137,7,0.373,8,1.205,10,0.993,14,0.998,16,1.66,17,0.016,18,0.737,19,0.818,20,1.66,24,1.349,26,0.442,27,1.678,28,0.526,38,0.156,39,0.08,49,2.658,55,0.011,56,0.011,58,2.198,95,2.198,103,1.981,104,2.427,165,1.015,166,1.643,167,1.572,371,3.882,372,2.817,373,4.426,375,3.254,380,2.466,381,2.817,457,3.469,466,3.045,467,3.33,538,3.389,555,3.274,758,3.045,759,3.469,760,3.711,761,4.898,762,5.663,763,5.663,764,4.291,765,5.663,766,4.291,767,4.291,768,5.663,769,3.711]],["title/classes/Token.html",[39,0.071,327,2.516]],["body/classes/Token.html",[3,0.194,4,0.17,5,0.17,7,0.463,14,0.999,17,0.016,18,0.816,19,0.905,26,0.35,35,4.375,38,0.194,39,0.1,55,0.013,56,0.013,74,2.185,165,1.165,277,4.613,327,4.269,440,2.462,451,2.357,452,2.185,770,4.613,771,5.332,772,5.332,773,5.332]],["title/components/TopbarComponent.html",[150,0.6,215,1.234]],["body/components/TopbarComponent.html",[3,0.118,4,0.103,5,0.103,7,0.28,8,0.99,10,0.746,12,3.479,13,3.375,14,0.85,16,0.845,17,0.016,18,0.634,19,0.6,20,0.845,24,0.99,26,0.415,28,0.396,32,0.88,38,0.118,39,0.06,40,1.169,45,2.118,55,0.009,56,0.009,57,2.986,74,1.563,96,0.997,103,1.49,104,1.78,117,1.976,118,1.976,124,2.289,150,0.853,151,1.039,152,1.704,153,1.235,154,1.235,155,1.235,156,1.235,158,1.235,159,2.916,160,2.79,161,1.78,163,1.78,165,0.833,192,1.235,193,1.78,194,1.78,195,1.235,196,2.093,197,1.235,198,1.235,199,1.039,200,1.235,201,0.956,202,1.235,203,0.997,204,1.235,205,0.997,206,1.235,207,1.039,208,1.235,209,0.956,210,1.235,211,0.997,212,1.235,213,1.039,214,1.235,215,1.923,216,1.235,217,0.997,218,1.844,219,1.235,220,0.997,221,1.235,222,0.997,223,1.235,224,0.997,225,1.084,226,1.235,227,0.997,228,0.811,229,1.132,230,1.235,231,1.235,309,2.504,339,2.791,403,1.997,477,2.184,481,2.39,638,1.747,639,2.504,649,2.791,650,2.791,651,2.504,652,2.791,655,2.504,774,2.791,775,4.65,776,5.452,777,4.65,778,6.326,779,6.589,780,4.65,781,3.226,782,3.226,783,3.226,784,2.791,785,3.226,786,3.226,787,3.226,788,3.226]],["title/classes/Tournament.html",[39,0.071,218,1.184]],["body/classes/Tournament.html",[3,0.154,4,0.135,5,0.135,7,0.368,14,1.058,17,0.016,18,0.732,19,0.959,26,0.48,38,0.154,39,0.079,40,1.411,55,0.011,56,0.011,74,1.887,165,1.006,218,1.735,440,1.955,445,4.952,449,3.096,451,2.117,452,2.254,461,2.057,465,3.005,533,2.434,537,4.135,538,2.908,544,3.226,546,4.469,547,5.447,548,4.887,549,4.887,555,3.258,665,4.403,671,3.663,758,3.005,789,3.663,790,4.235,791,4.235,792,4.235,793,4.235,794,4.235,795,4.235,796,4.235,797,4.235,798,3.663]],["title/components/TournamentCreateComponent.html",[150,0.6,217,1.184]],["body/components/TournamentCreateComponent.html",[3,0.07,4,0.061,5,0.061,7,0.166,8,0.661,10,0.442,12,0.978,14,0.969,16,0.814,17,0.016,18,0.621,19,0.757,20,0.814,24,1.248,26,0.418,28,0.234,32,0.521,38,0.07,39,0.036,40,0.781,41,1.356,42,3.534,50,1.786,55,0.006,56,0.006,57,2.474,70,2.451,72,2.257,74,1.044,96,1.214,97,0.928,105,2.205,143,2.601,147,1.786,150,0.615,151,0.615,152,1.138,153,0.731,154,0.731,155,0.731,156,0.731,158,0.731,159,2.662,160,2.547,161,1.19,163,1.19,165,0.704,166,1.19,167,1.138,192,0.731,193,1.19,194,1.19,195,0.731,196,1.588,197,0.731,198,0.731,199,0.615,200,0.731,201,0.566,202,0.731,203,0.59,204,0.731,205,0.59,206,0.731,207,0.615,208,0.731,209,0.566,210,0.731,211,0.59,212,0.731,213,0.615,214,0.731,215,0.615,216,0.731,217,1.398,218,2.075,219,0.731,220,0.59,221,0.731,222,0.59,223,0.731,224,0.59,225,0.642,226,0.731,227,0.59,228,0.48,229,0.67,230,0.731,231,0.731,358,0.928,403,2.221,429,1.903,442,2.041,445,1.356,449,2.708,451,0.642,455,2.882,457,1.903,477,1.573,481,1.812,546,2.205,548,1.483,630,3.694,635,3.27,638,1.035,643,2.205,644,2.041,647,2.601,716,1.483,721,1.483,750,2.772,799,4.215,800,4.518,801,1.652,802,1.254,803,2.041,804,2.688,805,3.398,806,2.688,807,3.534,808,3.398,809,3.398,810,3.398,811,3.398,812,4.308,813,2.412,814,3.512,815,3.915,816,3.915,817,3.915,818,3.915,819,3.915,820,1.652,821,2.972,822,2.598,823,3.107,824,2.412,825,2.412,826,4.143,827,1.91,828,1.483,829,1.91,830,1.91,831,1.91,832,1.91,833,1.91,834,1.91,835,1.91,836,1.91,837,1.91,838,3.049,839,1.483,840,2.688,841,1.91,842,1.91,843,3.107,844,1.91,845,1.652,846,1.254,847,1.652,848,1.652,849,1.483,850,1.254,851,1.098,852,1.91,853,2.688,854,1.91,855,1.91,856,1.652,857,1.652,858,1.91,859,1.91,860,1.91,861,1.91,862,1.91,863,1.91,864,1.652,865,1.652,866,1.91,867,1.91,868,1.91,869,1.652,870,3.212,871,2.205,872,2.205,873,2.688,874,2.688,875,2.688,876,2.688,877,2.688,878,2.205,879,2.205,880,2.688,881,3.512,882,2.412,883,2.412]],["title/components/TournamentEditComponent.html",[150,0.6,220,1.184]],["body/components/TournamentEditComponent.html",[3,0.071,4,0.062,5,0.062,7,0.169,8,0.67,10,0.449,14,0.993,16,0.824,17,0.016,18,0.531,19,0.787,20,0.824,22,2.607,24,1.297,26,0.442,28,0.238,32,0.529,38,0.071,39,0.036,40,0.791,41,1.377,42,3.563,50,1.115,55,0.006,56,0.006,57,2.594,70,2.474,72,2.625,74,1.058,96,1.227,97,0.942,104,0.743,105,1.377,143,2.625,147,1.808,150,0.621,151,0.625,152,1.153,153,0.743,154,0.743,155,0.743,156,0.743,158,0.743,159,2.67,160,2.555,161,1.205,163,1.205,165,0.711,166,1.52,167,1.454,192,0.743,193,1.205,194,1.205,195,0.743,196,1.602,197,0.743,198,0.743,199,0.625,200,0.743,201,0.575,202,0.743,203,0.599,204,0.743,205,0.599,206,0.743,207,0.625,208,0.743,209,0.575,210,0.743,211,0.599,212,0.743,213,0.625,214,0.743,215,0.625,216,0.743,217,2.175,218,2.109,219,0.743,220,1.411,221,0.743,222,0.599,223,0.743,224,0.599,225,0.652,226,0.743,227,0.599,228,0.487,229,0.68,230,0.743,231,0.743,358,0.942,403,2.295,429,1.927,439,1.377,442,1.274,449,1.833,451,1.058,452,1.058,455,3.021,477,1.59,481,1.829,544,1.612,546,2.233,629,3.544,630,3.873,635,2.066,638,1.051,644,1.274,647,1.808,750,2.797,799,2.797,800,3.53,802,1.274,803,2.066,805,3.434,806,2.722,807,3.241,808,2.722,809,2.722,810,2.722,811,2.722,812,4.343,813,2.442,814,3.081,815,3.434,816,3.434,817,3.434,818,3.434,819,3.951,820,1.678,821,2.999,822,2.723,824,2.442,825,1.506,826,3.081,828,1.506,838,1.506,839,1.506,840,1.678,846,1.274,847,1.678,849,1.506,850,1.274,851,1.115,856,1.678,857,1.678,870,3.241,871,2.233,872,2.233,873,2.722,874,2.722,875,2.722,876,2.722,877,2.722,878,2.233,879,2.233,880,2.722,881,3.544,882,2.442,883,2.442,884,3.241,885,1.678,886,3.147,887,3.147,888,3.147,889,3.147,890,3.434,891,3.951,892,1.94,893,6.74,894,1.94,895,3.147,896,1.94,897,1.94,898,1.94,899,1.94,900,1.94,901,1.94,902,3.147,903,1.94,904,2.722,905,1.94,906,1.94,907,1.94,908,1.94,909,1.94,910,1.94,911,2.722,912,1.94,913,1.377,914,1.506,915,1.94,916,1.94,917,1.678,918,1.94,919,1.94,920,1.678,921,1.94,922,1.94,923,1.94]],["title/components/TournamentListComponent.html",[150,0.6,222,1.184]],["body/components/TournamentListComponent.html",[3,0.083,4,0.072,5,0.072,7,0.435,8,0.76,10,0.826,14,0.821,16,1.155,17,0.016,18,0.632,19,0.645,20,1.155,24,1.064,26,0.378,28,0.279,38,0.083,39,0.042,40,0.898,54,1.231,55,0.007,56,0.007,57,2.652,70,2.708,72,2.535,96,1.104,97,1.105,104,1.914,117,2.188,118,1.393,143,2.873,147,3.314,150,0.691,151,0.733,152,1.309,153,0.871,154,0.871,155,0.871,156,0.871,158,0.871,159,2.756,160,2.637,161,1.368,163,1.368,165,0.64,166,0.871,167,1.309,192,0.871,193,1.368,194,1.368,195,0.871,196,1.754,197,0.871,198,0.871,199,0.733,200,0.871,201,0.674,202,0.871,203,0.703,204,0.871,205,0.703,206,0.871,207,0.733,208,0.871,209,0.674,210,0.871,211,0.703,212,0.871,213,0.733,214,0.871,215,0.733,216,0.871,217,0.703,218,2.105,219,0.871,220,0.703,221,0.871,222,1.545,223,0.871,224,0.703,225,0.764,226,0.871,227,0.703,228,0.571,229,0.798,230,0.871,231,0.871,397,3.961,403,1.99,429,2.188,451,1.483,452,1.938,477,1.767,481,2.002,544,3.09,638,1.231,644,1.493,647,2.873,749,2.535,750,3.826,799,3.695,802,1.493,803,2.346,807,2.535,822,2.663,851,1.307,870,2.535,871,2.535,872,3.548,878,2.535,879,2.535,913,1.614,924,4.281,925,1.967,926,3.09,927,3.09,928,3.09,929,4.324,930,3.09,931,2.772,932,3.09,933,3.572,934,4.7,935,3.572,936,3.572,937,3.572,938,3.572,939,4.411,940,3.572,941,3.816,942,3.572,943,3.09,944,4.324,945,1.967,946,3.572,947,3.572,948,2.274,949,3.572,950,2.274,951,2.274,952,2.274,953,1.967,954,1.967,955,2.274,956,1.967,957,1.967,958,1.967,959,1.967,960,1.967,961,1.967,962,1.967,963,1.967,964,2.274,965,2.274,966,2.274,967,2.274,968,2.274,969,1.967,970,2.274,971,3.572,972,3.09,973,3.09,974,3.572,975,3.572,976,3.09,977,3.09,978,3.09,979,3.09,980,1.967,981,3.09,982,3.09,983,3.572,984,1.967]],["title/components/TournamentManagementMatchesComponent.html",[150,0.6,224,1.184]],["body/components/TournamentManagementMatchesComponent.html",[3,0.078,4,0.069,5,0.069,7,0.422,8,0.728,10,0.792,14,0.841,16,0.896,17,0.016,18,0.564,19,0.626,20,0.896,22,2.796,24,1.032,26,0.414,28,0.264,32,0.588,38,0.078,39,0.04,40,0.86,54,1.166,55,0.007,56,0.007,57,2.597,80,1.671,96,0.665,98,1.863,100,1.671,104,1.63,107,1.863,117,1.319,118,1.319,128,1.863,143,2.787,147,1.966,150,0.666,151,0.694,152,1.253,153,0.824,154,0.824,155,0.824,156,0.824,158,0.824,159,2.728,160,2.61,161,1.31,163,1.31,165,0.613,166,1.31,167,1.253,192,0.824,193,1.31,194,1.31,195,0.824,196,1.701,197,0.824,198,0.824,199,0.694,200,0.824,201,0.638,202,0.824,203,0.665,204,0.824,205,0.665,206,0.824,207,0.694,208,0.824,209,0.638,210,0.824,211,0.665,212,0.824,213,0.694,214,0.824,215,0.694,216,0.824,217,0.665,218,2.201,219,0.824,220,0.665,221,0.824,222,0.665,223,0.824,224,1.498,225,2.5,226,0.824,227,0.665,228,0.541,229,0.755,230,0.824,231,0.824,403,1.939,428,2.96,429,2.096,452,1.779,477,1.705,481,1.942,496,2.608,533,2.787,537,3.185,544,2.484,555,1.662,629,3.764,638,1.166,647,2.787,665,1.414,703,2.96,749,2.428,750,3.451,799,3.754,802,1.414,803,2.247,822,2.601,849,1.671,851,1.237,872,3.442,890,3.683,891,4.195,904,2.96,913,1.528,917,2.96,920,1.863,926,2.96,927,2.96,928,2.96,931,2.655,932,2.96,934,5.109,943,4.195,945,1.863,956,1.863,957,1.863,958,1.863,959,1.863,969,1.863,985,4.35,986,1.863,987,2.96,988,3.421,989,3.421,990,3.421,991,3.421,992,4.85,993,3.421,994,4.257,995,3.421,996,3.421,997,3.421,998,2.153,999,2.153,1000,3.421,1001,2.153,1002,2.153,1003,2.153,1004,2.153,1005,1.863,1006,2.153,1007,4.257,1008,1.863,1009,4.257,1010,2.153,1011,4.257,1012,2.153,1013,4.257,1014,2.153,1015,2.153,1016,3.421,1017,2.153,1018,3.421,1019,2.153,1020,2.153,1021,2.153,1022,2.153,1023,2.153,1024,2.153,1025,2.153,1026,3.421,1027,3.421,1028,3.421,1029,3.421]],["title/modules/TournamentModule.html",[232,1.607,1030,2.719]],["body/modules/TournamentModule.html",[3,0.121,4,0.106,5,0.106,17,0.016,26,0.493,28,0.408,32,0.907,38,0.121,39,0.062,55,0.01,56,0.01,96,1.027,172,2.183,175,2.36,217,2.286,218,1.978,220,2.286,222,2.286,224,2.057,225,1.597,234,1.218,235,2.194,243,2.434,244,1.703,245,1.615,247,2.574,248,1.993,250,1.993,270,2.194,272,2.194,304,2.09,351,3.826,354,2.911,355,1.911,356,3.372,357,3.372,358,1.615,360,2.581,361,2.581,455,3.41,800,2.183,821,3.12,822,3.074,846,2.183,850,2.183,851,1.911,884,2.36,914,2.581,924,2.36,985,2.36,1030,5.546,1031,2.876,1032,2.876,1033,2.876,1034,2.876,1035,2.876,1036,4.371,1037,3.325,1038,4.752,1039,5.545,1040,2.876,1041,2.876,1042,4.111,1043,2.581,1044,3.325,1045,2.876,1046,3.325]],["title/modules/TournamentRoutingModule.html",[232,1.607,1036,2.516]],["body/modules/TournamentRoutingModule.html",[3,0.17,4,0.149,5,0.149,17,0.016,26,0.483,28,0.573,32,1.275,38,0.17,39,0.087,55,0.012,56,0.012,132,2.394,217,1.444,218,2.152,220,1.444,222,1.444,224,1.444,225,2.012,234,1.712,248,1.96,250,2.51,270,2.158,272,2.764,273,3.577,284,4.337,285,4.042,304,2.055,365,3.627,369,3.316,799,2.862,800,3.069,884,3.316,914,3.627,924,3.316,985,3.316,1036,3.931,1040,4.042,1041,4.042,1045,4.042,1047,4.673,1048,4.673,1049,4.673,1050,4.673,1051,4.673,1052,4.673,1053,4.673,1054,4.673,1055,4.673]],["title/injectables/TournamentService.html",[27,1.135,822,1.769]],["body/injectables/TournamentService.html",[3,0.121,4,0.106,5,0.106,7,0.29,8,1.013,10,0.771,14,1.017,16,1.796,17,0.016,18,0.798,19,0.885,20,1.796,24,1.459,26,0.437,27,1.411,28,0.409,33,4.29,34,1.805,38,0.121,39,0.062,40,0.837,49,2.876,55,0.01,56,0.01,58,1.707,95,1.707,103,1.538,104,2.126,165,0.853,166,1.276,167,1.221,371,3.401,372,2.188,373,3.977,375,2.735,380,1.915,381,2.188,451,1.6,452,2.239,457,2.915,466,2.365,467,2.586,514,3.377,516,2.586,518,4.117,519,4.117,520,4.117,521,4.117,524,4.976,525,4.117,528,4.117,530,4.117,544,3.753,761,4.117,769,2.882,798,2.882,822,2.197,1056,2.882,1057,4.759,1058,4.759,1059,3.332,1060,3.332,1061,4.759,1062,3.332,1063,4.759,1064,3.332,1065,3.332,1066,3.332,1067,3.332,1068,4.759,1069,3.332,1070,3.332,1071,3.332,1072,3.332,1073,4.759,1074,3.332]],["title/classes/User.html",[39,0.071,228,0.963]],["body/classes/User.html",[3,0.16,4,0.14,5,0.14,7,0.381,14,1.051,17,0.016,18,0.745,19,0.952,26,0.475,35,4.161,38,0.16,39,0.082,40,1.443,55,0.012,56,0.012,74,2.433,165,1.029,228,1.443,377,3.469,382,3.402,440,2.024,449,3.406,451,2.153,452,1.93,461,2.129,465,3.111,538,2.024,553,3.923,554,3.923,555,3.584,556,3.792,758,3.111,1075,3.792,1076,4.383,1077,4.383,1078,4.383,1079,4.383,1080,4.383,1081,4.383,1082,4.383]],["title/classes/UserForRegister.html",[39,0.071,717,2.719]],["body/classes/UserForRegister.html",[3,0.18,4,0.158,5,0.158,7,0.43,14,1.013,17,0.016,18,0.789,19,0.917,26,0.324,38,0.18,39,0.092,40,1.559,55,0.012,56,0.012,74,2.578,165,1.112,440,2.282,553,4.152,554,4.152,557,4.452,558,5.197,561,5.261,717,4.402,718,5.683,1083,4.276,1084,4.943,1085,4.943,1086,4.943,1087,4.943,1088,4.943,1089,4.276]],["title/components/UserGeneralComponent.html",[150,0.6,227,1.184]],["body/components/UserGeneralComponent.html",[3,0.041,4,0.036,5,0.036,7,0.099,8,0.426,10,0.263,14,0.985,16,0.845,17,0.016,18,0.509,19,0.795,20,0.845,24,1.27,26,0.404,28,0.139,38,0.041,39,0.021,40,0.503,44,0.807,50,1.855,55,0.004,56,0.004,57,1.924,70,1.748,72,1.54,96,0.828,97,0.553,103,0.525,104,1.781,105,2.29,117,0.697,118,0.697,124,1.42,131,1.553,143,1.855,147,1.855,150,0.42,151,0.366,152,0.733,153,0.435,154,0.435,155,0.435,156,0.435,158,0.435,159,2.324,160,2.223,161,0.766,163,0.766,165,0.359,166,1.675,167,1.792,183,2.878,192,0.435,193,0.766,194,0.766,195,0.435,196,1.132,197,0.435,198,0.435,199,0.366,200,0.435,201,0.337,202,0.435,203,0.351,204,0.435,205,0.351,206,0.435,207,0.366,208,0.435,209,0.337,210,0.435,211,0.351,212,0.435,213,0.366,214,0.435,215,0.366,216,0.435,217,0.351,218,1.136,219,0.435,220,0.351,221,0.435,222,0.351,223,0.435,224,0.351,225,0.382,226,0.435,227,0.997,228,1.472,229,1.132,230,0.435,231,0.435,352,2.196,358,0.553,363,0.807,377,1.748,397,2.873,403,2.223,429,1.226,442,2.119,449,2.518,451,0.901,452,1.777,455,2.241,461,1.568,477,1.073,481,1.292,496,1.642,538,1.49,544,2.241,549,2.08,555,1.786,562,1.42,563,0.883,564,0.883,566,2.318,567,2.318,568,2.318,577,0.984,578,0.984,579,0.984,630,2.873,635,2.415,638,0.616,640,0.984,643,1.42,644,3.054,647,3.297,651,3.61,660,0.984,662,1.553,663,0.883,716,0.883,721,0.883,730,1.731,733,4.023,750,1.642,759,2.68,802,0.747,803,1.314,804,1.731,807,2.61,813,1.553,814,2.505,821,2.119,822,2.02,824,2.08,825,1.553,826,3.61,828,0.883,838,2.854,839,1.553,845,0.984,846,0.747,848,0.984,850,0.747,851,0.654,853,0.984,864,0.984,865,0.984,869,0.984,870,3.471,871,1.42,878,1.42,879,2.29,881,1.553,882,1.553,883,2.505,913,0.807,929,4.023,930,1.731,931,1.553,941,2.318,944,2.791,953,0.984,954,1.731,960,0.984,961,0.984,962,0.984,963,1.731,972,1.731,973,1.731,976,1.731,977,1.731,978,2.318,979,1.731,980,0.984,981,1.731,982,2.791,984,0.984,987,2.791,1005,0.984,1008,2.318,1090,5.396,1091,4.934,1092,0.984,1093,2.001,1094,4.055,1095,2.001,1096,4.375,1097,2.001,1098,2.001,1099,3.227,1100,2.68,1101,2.001,1102,2.68,1103,2.68,1104,2.68,1105,2.68,1106,2.68,1107,2.68,1108,2.001,1109,3.227,1110,2.001,1111,3.227,1112,3.227,1113,3.227,1114,3.227,1115,3.227,1116,2.791,1117,3.227,1118,3.227,1119,3.227,1120,1.137,1121,2.001,1122,1.137,1123,2.001,1124,1.137,1125,2.001,1126,1.137,1127,2.001,1128,1.137,1129,1.137,1130,1.137,1131,1.137,1132,1.137,1133,1.137,1134,1.137,1135,1.137,1136,1.137,1137,1.137,1138,1.137,1139,1.137,1140,1.137,1141,1.137,1142,1.137,1143,1.137,1144,2.001,1145,1.137,1146,1.137,1147,2.001,1148,1.137,1149,1.137,1150,1.137,1151,1.137,1152,1.137,1153,1.137,1154,1.137,1155,1.137,1156,1.137,1157,1.137,1158,1.137,1159,0.984,1160,3.227,1161,1.137,1162,1.137,1163,1.137,1164,1.137,1165,1.137,1166,1.137,1167,1.137,1168,1.137,1169,1.137,1170,1.137,1171,1.137,1172,1.137,1173,1.137,1174,1.137,1175,1.137,1176,1.137,1177,1.137,1178,1.137,1179,2.68,1180,1.137,1181,1.137,1182,1.137,1183,2.001,1184,1.137,1185,1.137,1186,2.001,1187,2.001,1188,1.137,1189,1.137,1190,1.137,1191,4.891,1192,3.678,1193,1.137,1194,1.137,1195,1.137,1196,1.137,1197,1.137,1198,1.137,1199,1.137,1200,1.137,1201,1.137,1202,1.137,1203,1.137,1204,1.137,1205,1.137,1206,1.137,1207,1.137,1208,1.137,1209,1.137,1210,1.137,1211,2.001,1212,2.001,1213,2.001,1214,2.001,1215,2.001,1216,2.001,1217,2.001,1218,3.227,1219,4.651,1220,2.001,1221,2.001,1222,2.001,1223,2.001,1224,2.001,1225,2.001,1226,2.001]],["title/modules/UserModule.html",[232,1.607,1227,2.719]],["body/modules/UserModule.html",[3,0.138,4,0.121,5,0.121,17,0.016,26,0.5,28,0.466,32,1.037,38,0.138,39,0.071,55,0.01,56,0.01,96,1.612,172,2.495,175,2.696,227,2.146,228,1.311,234,1.392,235,2.409,243,2.672,244,1.946,245,1.846,247,2.826,248,2.188,250,2.188,270,2.409,272,2.409,304,1.671,352,3.762,354,3.196,355,2.183,356,3.703,357,3.703,358,1.846,360,2.949,363,2.696,455,3.558,759,4.255,821,3.426,822,3.207,846,2.495,850,2.495,851,2.183,1042,4.513,1043,2.949,1091,2.696,1159,3.286,1227,5.499,1228,3.286,1229,3.286,1230,3.286,1231,3.286,1232,4.561,1233,3.799,1234,3.286,1235,5.217,1236,3.286]],["title/modules/UserRoutingModule.html",[232,1.607,1232,2.516]],["body/modules/UserRoutingModule.html",[3,0.191,4,0.167,5,0.167,17,0.016,26,0.456,28,0.643,32,1.432,38,0.191,39,0.098,55,0.013,56,0.013,132,2.687,150,0.821,227,1.989,228,1.318,234,1.922,248,2.2,250,2.699,270,2.422,272,2.972,273,3.771,284,3.445,304,2.307,365,4.072,369,3.723,1090,4.072,1091,3.723,1232,4.227,1234,4.538]],["title/injectables/UserService.html",[27,1.135,352,2.075]],["body/injectables/UserService.html",[3,0.139,4,0.122,5,0.122,7,0.333,8,1.116,10,0.885,14,1.015,16,1.566,17,0.016,18,0.696,19,0.772,20,1.566,24,1.434,26,0.467,27,1.554,28,0.469,33,3.437,34,2.072,38,0.139,39,0.071,49,2.827,55,0.011,56,0.011,58,1.96,95,1.96,103,1.767,104,2.29,165,0.939,166,1.465,167,1.402,228,1.317,352,2.84,371,3.663,372,2.512,373,4.225,375,3.013,377,2.072,380,2.199,381,2.512,382,2.969,449,2.421,457,3.211,461,3.125,465,2.715,466,2.715,557,4.225,559,2.969,1089,3.31,1116,5.565,1237,3.31,1238,6.434,1239,6.434,1240,5.243,1241,5.243,1242,5.243,1243,3.826,1244,3.826,1245,3.826,1246,3.826,1247,5.243,1248,3.826,1249,5.243,1250,3.826,1251,3.826,1252,3.826,1253,3.826,1254,3.826]],["title/coverage.html",[1255,4.539]],["body/coverage.html",[0,3.242,1,1.979,5,0.089,6,2.412,13,1.428,17,0.016,19,0.36,27,1.977,39,0.13,55,0.008,56,0.008,57,1.226,59,2.412,150,1.151,151,0.899,157,2.412,165,0.5,183,5.642,199,0.899,201,0.827,203,0.862,205,0.862,207,0.899,209,0.827,211,0.862,213,0.899,215,0.899,217,0.862,218,0.862,220,0.862,222,0.862,224,0.862,225,1.404,227,0.862,228,0.701,229,0.978,246,2.164,262,1.831,264,1.831,266,2.164,275,1.979,281,2.164,282,1.831,305,3.242,307,2.412,327,1.831,351,1.603,352,1.51,370,2.412,377,1.51,380,2.401,384,2.412,394,2.164,397,1.831,398,3.242,439,1.979,441,2.412,449,1.288,450,2.412,455,1.428,456,2.412,461,1.355,468,2.412,476,2.412,488,2.743,489,2.412,496,1.708,513,2.483,514,1.979,516,2.164,517,2.412,532,2.412,533,1.603,534,2.412,538,1.288,541,2.412,544,1.428,545,2.412,552,2.412,555,1.355,557,1.831,558,2.965,559,2.164,560,2.412,562,1.979,563,2.164,564,2.164,565,2.412,580,2.412,609,2.412,623,2.412,665,1.831,666,2.412,672,2.412,673,2.412,679,2.412,686,2.412,705,2.412,717,1.979,718,2.164,739,2.412,754,2.412,759,1.708,760,2.412,770,2.412,774,2.412,789,2.412,799,3.408,800,1.831,801,2.412,822,1.288,884,1.979,885,2.412,924,1.979,925,2.412,985,1.979,986,2.412,1056,2.412,1075,2.412,1083,2.412,1090,2.164,1091,1.979,1092,2.412,1237,2.412,1255,2.412,1256,2.789,1257,2.789,1258,2.789,1259,4.178,1260,5.564,1261,5.564,1262,2.789,1263,2.789,1264,6.946,1265,5.564,1266,6.486,1267,4.178,1268,6.486,1269,4.178,1270,5.01,1271,2.789,1272,2.789,1273,2.789,1274,2.789,1275,2.789,1276,2.789,1277,2.789,1278,2.789,1279,2.789,1280,2.789,1281,2.789,1282,2.412,1283,2.412,1284,2.789,1285,2.789]],["title/dependencies.html",[235,2.13,1286,2.759]],["body/dependencies.html",[17,0.016,28,0.585,32,1.301,34,2.583,55,0.012,56,0.012,96,2.06,97,2.317,100,3.701,172,3.132,175,3.385,235,2.202,249,5.246,252,5.246,253,4.706,355,2.741,358,2.317,592,4.125,593,4.125,784,4.125,911,4.125,1043,3.701,1236,4.125,1287,4.769,1288,7.615,1289,4.769,1290,4.769,1291,4.769,1292,4.769,1293,4.769,1294,4.769,1295,6.064,1296,4.769,1297,4.769,1298,4.769,1299,4.769,1300,4.769,1301,4.769,1302,4.769,1303,4.769,1304,4.769,1305,4.769,1306,4.769,1307,4.769,1308,4.769,1309,4.769,1310,4.769,1311,4.769]],["title/miscellaneous/enumerations.html",[1312,2.264,1313,3.99]],["body/miscellaneous/enumerations.html",[7,0.514,17,0.015,35,3.975,55,0.014,56,0.014,167,2.534,228,1.738,749,4.908,1312,4.197,1313,5.116,1314,5.915,1315,5.915]],["title/index.html",[7,0.277,1316,3.19,1317,3.19]],["body/index.html",[4,0.143,17,0.012,18,0.523,40,1.129,55,0.012,56,0.012,150,1.015,160,1.646,168,3.886,172,4.873,245,2.182,496,2.752,501,3.486,696,5.607,1286,3.886,1318,5.836,1319,4.492,1320,6.482,1321,4.492,1322,4.492,1323,4.492,1324,5.836,1325,7.112,1326,4.492,1327,4.492,1328,4.492,1329,4.492,1330,4.492,1331,4.492,1332,4.492,1333,4.492,1334,4.492,1335,4.492,1336,6.482,1337,6.482,1338,4.492,1339,6.862,1340,4.492,1341,4.492,1342,4.492,1343,4.492,1344,5.836,1345,5.836,1346,6.862,1347,4.492,1348,5.836,1349,5.836,1350,4.492,1351,7.289,1352,4.492,1353,4.492,1354,4.492,1355,5.836,1356,4.492,1357,4.492,1358,4.492,1359,4.492,1360,4.492,1361,4.492,1362,6.482,1363,4.492,1364,4.492,1365,4.492,1366,3.486,1367,4.492]],["title/modules.html",[234,1.922]],["body/modules.html",[17,0.013,55,0.013,56,0.013,233,3.596,234,1.856,240,3.327,241,3.103,242,3.327,253,5.98,345,3.596,350,3.327,389,3.327,502,3.327,507,3.327,1030,3.596,1036,3.327,1227,3.596,1232,3.327,1368,7.706,1369,7.706,1370,7.933,1371,7.376,1372,7.376]],["title/overview.html",[1366,4.072]],["body/overview.html",[2,2.191,17,0.016,55,0.008,56,0.008,58,1.446,151,2.098,152,1.034,199,2.098,201,1.93,203,2.012,205,1.559,207,2.098,209,1.93,211,1.559,213,2.098,215,2.098,217,2.012,220,2.012,222,2.012,224,1.559,227,1.559,233,5.019,234,1.034,235,1.947,236,2.442,237,2.442,238,2.442,239,2.442,240,3.314,241,4.513,242,4.126,243,2.159,244,1.446,245,1.371,273,1.529,345,5.083,346,2.442,347,2.442,348,2.442,349,2.442,350,3.314,351,3.217,352,3.032,389,3.933,390,2.442,391,2.442,392,2.442,440,1.303,455,2.867,502,4.838,503,2.442,504,2.442,505,2.442,506,2.442,507,3.314,515,1.529,615,2.442,616,2.442,617,2.442,734,2.442,735,2.442,759,3.091,822,2.584,1030,5.406,1031,2.442,1032,2.442,1033,2.442,1034,2.442,1035,2.442,1036,3.314,1227,5.186,1228,2.442,1229,2.442,1230,2.442,1231,2.442,1232,3.314,1366,2.191,1373,2.823,1374,2.823,1375,2.823,1376,2.823,1377,2.823,1378,2.823,1379,2.823]],["title/routes.html",[273,2.842]],["body/routes.html",[17,0.014,55,0.014,56,0.014,273,3.375]],["title/miscellaneous/variables.html",[1312,2.264,1380,3.99]],["body/miscellaneous/variables.html",[7,0.432,17,0.016,19,0.919,50,2.858,54,3.682,55,0.013,56,0.013,166,2.603,167,2.49,246,3.86,259,5.386,262,3.266,264,3.266,266,4.833,267,5.386,268,5.386,269,5.386,371,3.046,380,4.095,398,3.86,524,4.419,1282,4.302,1283,4.302,1312,3.53,1380,4.302,1381,4.973,1382,4.973,1383,4.973,1384,4.973,1385,6.227,1386,4.973]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatatableService.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["0.075",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["0.11.4",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":969,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["1.10.24",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["1.10.25",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["1/16",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["1/32",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1376,"title":{},"body":{"overview.html":{}}}],["11.2.1",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":1322,"title":{},"body":{"index.html":{}}}],["13",{"_index":1373,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1374,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":113,"title":{},"body":{"injectables/AlertService.html":{}}}],["1501",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1600",{"_index":788,"title":{},"body":{"components/TopbarComponent.html":{}}}],["198754",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1377,"title":{},"body":{"overview.html":{}}}],["2.29.1",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":487,"title":{},"body":{"components/FooterComponent.html":{}}}],["24",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["3.1.2",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["3px",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["4.5.3",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["403",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ForbiddenComponent.html":{}}}],["404",{"_index":685,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["5",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["5.15.4",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":138,"title":{},"body":{"injectables/AlertService.html":{}}}],["6",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["7.3.3",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1375,"title":{},"body":{"overview.html":{}}}],["8.1.1",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["_end_",{"_index":417,"title":{},"body":{"injectables/DatatableService.html":{}}}],["_max_",{"_index":423,"title":{},"body":{"injectables/DatatableService.html":{}}}],["_menu_",{"_index":427,"title":{},"body":{"injectables/DatatableService.html":{}}}],["_start_",{"_index":416,"title":{},"body":{"injectables/DatatableService.html":{}}}],["_total_",{"_index":418,"title":{},"body":{"injectables/DatatableService.html":{}}}],["abertos",{"_index":1213,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["accept",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["accepted",{"_index":692,"title":{},"body":{"classes/Properties.html":{}}}],["aconteceu",{"_index":145,"title":{},"body":{"injectables/AlertService.html":{}}}],["activatedroute",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["activatedroutesnapshot",{"_index":388,"title":{},"body":{"guards/BaseGuard.html":{}}}],["actual_component",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["add",{"_index":1358,"title":{},"body":{"index.html":{}}}],["ade6a8",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["adicionar",{"_index":752,"title":{},"body":{"components/SidebarComponent.html":{}}}],["admin",{"_index":749,"title":{},"body":{"components/SidebarComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin/tournament",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["alertservice",{"_index":57,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["algo",{"_index":142,"title":{},"body":{"injectables/AlertService.html":{}}}],["allowedelos",{"_index":546,"title":{},"body":{"interfaces/ITournament.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["alteração",{"_index":119,"title":{},"body":{"injectables/AlertService.html":{}}}],["andamento",{"_index":1214,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["angular",{"_index":696,"title":{},"body":{"classes/Properties.html":{},"index.html":{}}}],["angular/animations",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":784,"title":{},"body":{"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["ao",{"_index":1176,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["api_url",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"index.html":{}}}],["app.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":151,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["appmodule",{"_index":233,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":240,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqui",{"_index":1219,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["artifacts",{"_index":1340,"title":{},"body":{"index.html":{}}}],["async",{"_index":60,"title":{},"body":{"injectables/AlertService.html":{}}}],["atual",{"_index":1215,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["atualizado(a",{"_index":120,"title":{},"body":{"injectables/AlertService.html":{}}}],["auth",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{}}}],["authinterceptor",{"_index":264,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":345,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":350,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":351,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1330,"title":{},"body":{"index.html":{}}}],["auxanyforconvert",{"_index":702,"title":{},"body":{"classes/Properties.html":{}}}],["available",{"_index":1372,"title":{},"body":{"modules.html":{}}}],["avançar",{"_index":1026,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["avançe",{"_index":991,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["await",{"_index":106,"title":{},"body":{"injectables/AlertService.html":{}}}],["ações",{"_index":976,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["back",{"_index":499,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{}}}],["baseguard",{"_index":275,"title":{"guards/BaseGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/BaseGuard.html":{},"coverage.html":{}}}],["bearer",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bem",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["boa",{"_index":1186,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["bootstrap",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/modal",{"_index":846,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["border",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["breve",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["browse",{"_index":1370,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["bs4",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["bsmodalref",{"_index":826,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["bsmodalservice",{"_index":821,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["build",{"_index":1339,"title":{},"body":{"index.html":{}}}],["cadastrado(a",{"_index":116,"title":{},"body":{"injectables/AlertService.html":{}}}],["cadastrar",{"_index":882,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["cadastro",{"_index":843,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["canactivate",{"_index":387,"title":{},"body":{"guards/BaseGuard.html":{}}}],["cancelar",{"_index":880,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["cancelbuttontext",{"_index":130,"title":{},"body":{"injectables/AlertService.html":{}}}],["canload",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/BaseGuard.html":{}}}],["canload(route",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["capabilities",{"_index":1360,"title":{},"body":{"index.html":{}}}],["carregando",{"_index":432,"title":{},"body":{"injectables/DatatableService.html":{}}}],["case",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror",{"_index":320,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":109,"title":{},"body":{"injectables/AlertService.html":{}}}],["certeza",{"_index":126,"title":{},"body":{"injectables/AlertService.html":{}}}],["certo",{"_index":957,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["change",{"_index":1332,"title":{},"body":{"index.html":{}}}],["check",{"_index":1365,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1354,"title":{},"body":{"index.html":{}}}],["class",{"_index":39,"title":{"classes/Datetime.html":{},"classes/Elo.html":{},"classes/InfoGeneralUser.html":{},"classes/Match.html":{},"classes/Properties.html":{},"classes/Team.html":{},"classes/Token.html":{},"classes/Tournament.html":{},"classes/User.html":{},"classes/UserForRegister.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":440,"title":{},"body":{"classes/Datetime.html":{},"classes/Elo.html":{},"classes/InfoGeneralUser.html":{},"classes/Match.html":{},"classes/Properties.html":{},"classes/Team.html":{},"classes/Token.html":{},"classes/Tournament.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"overview.html":{}}}],["cli",{"_index":1320,"title":{},"body":{"index.html":{}}}],["clique",{"_index":1218,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["closemodal",{"_index":813,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["closemodal(modalref",{"_index":825,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["cluster_appmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":390,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":391,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":392,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_httpcodesmodule",{"_index":503,"title":{},"body":{"modules/HttpCodesModule.html":{},"overview.html":{}}}],["cluster_httpcodesmodule_declarations",{"_index":506,"title":{},"body":{"modules/HttpCodesModule.html":{},"overview.html":{}}}],["cluster_httpcodesmodule_exports",{"_index":505,"title":{},"body":{"modules/HttpCodesModule.html":{},"overview.html":{}}}],["cluster_httpcodesmodule_imports",{"_index":504,"title":{},"body":{"modules/HttpCodesModule.html":{},"overview.html":{}}}],["cluster_layoutmodule",{"_index":615,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":617,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_exports",{"_index":616,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":734,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":735,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":736,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tournamentmodule",{"_index":1031,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":1032,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_exports",{"_index":1033,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":1035,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_providers",{"_index":1034,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1228,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1229,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1230,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1231,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1334,"title":{},"body":{"index.html":{}}}],["codes.module",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["codes.module.ts",{"_index":508,"title":{},"body":{"modules/HttpCodesModule.html":{}}}],["codes.routing.module",{"_index":510,"title":{},"body":{"modules/HttpCodesModule.html":{}}}],["codes.routing.module.ts",{"_index":511,"title":{},"body":{"modules/HttpCodesRoutingModule.html":{}}}],["codes/forbidden/forbidden.component",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["codes/forbidden/forbidden.component.ts",{"_index":489,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["codes/forbidden/forbidden.component.ts:10",{"_index":494,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["codes/forbidden/forbidden.component.ts:14",{"_index":495,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["codes/http",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["codes/not",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["color",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["com",{"_index":117,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["command",{"_index":1355,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["competidores",{"_index":973,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["component",{"_index":150,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component:registercomponent",{"_index":368,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["component:tournamentcreatecomponent",{"_index":1051,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["component:tournamenteditcomponent",{"_index":1053,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["component:tournamentlistcomponent",{"_index":1049,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["component:tournamentmanagementmatchescomponent",{"_index":1055,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["component_template",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["components",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"overview.html":{}}}],["components/components.module",{"_index":738,"title":{},"body":{"modules/SharedModule.html":{}}}],["componentsmodule",{"_index":389,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["confirm",{"_index":61,"title":{},"body":{"injectables/AlertService.html":{}}}],["confirm(text",{"_index":73,"title":{},"body":{"injectables/AlertService.html":{}}}],["confirmbuttontext",{"_index":128,"title":{},"body":{"injectables/AlertService.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["confirmpassword",{"_index":561,"title":{},"body":{"interfaces/IUserForRegister.html":{},"components/RegisterComponent.html":{},"classes/UserForRegister.html":{}}}],["const",{"_index":132,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpCodesRoutingModule.html":{},"injectables/JwtService.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["constructor(alertservice",{"_index":469,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(formbuilder",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["constructor(jwtservice",{"_index":309,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(modalservice",{"_index":820,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["constructor(ngxspinner",{"_index":69,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/EloService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["constructor(protected",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["constructor(route",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(router",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["constructor(tournamentservice",{"_index":945,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["constructor(userservice",{"_index":1120,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["constructor(won",{"_index":569,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["constructor(won,open,ongoing",{"_index":576,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["consultar",{"_index":753,"title":{},"body":{"components/SidebarComponent.html":{}}}],["conta",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["container",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["convertarraynumberinarrayobj",{"_index":687,"title":{},"body":{"classes/Properties.html":{}}}],["convertarraynumberinarrayobj(obj",{"_index":689,"title":{},"body":{"classes/Properties.html":{}}}],["convertarrayobjinarraynumber",{"_index":688,"title":{},"body":{"classes/Properties.html":{}}}],["convertarrayobjinarraynumber(obj",{"_index":694,"title":{},"body":{"classes/Properties.html":{}}}],["converttoinputdatetime",{"_index":443,"title":{},"body":{"classes/Datetime.html":{}}}],["converttoinputdatetime(obj",{"_index":444,"title":{},"body":{"classes/Datetime.html":{}}}],["copy",{"_index":485,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":484,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/interceptors/auth.interceptor",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["core/security/admin.guard",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/security/base.guard",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["countup",{"_index":1236,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["countupmodule",{"_index":1235,"title":{},"body":{"modules/UserModule.html":{}}}],["coverage",{"_index":1255,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":457,"title":{},"body":{"injectables/EloService.html":{},"interfaces/IApiService.html":{},"injectables/TeamService.html":{},"components/TournamentCreateComponent.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["create'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["create(elo",{"_index":460,"title":{},"body":{"injectables/EloService.html":{}}}],["create(object",{"_index":521,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["create(team",{"_index":763,"title":{},"body":{"injectables/TeamService.html":{}}}],["create(user",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["create.component",{"_index":914,"title":{},"body":{"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["create.component.html",{"_index":806,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["create.component.scss",{"_index":805,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["create.component.ts",{"_index":801,"title":{},"body":{"components/TournamentCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:104",{"_index":827,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:23",{"_index":837,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:24",{"_index":836,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:26",{"_index":844,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:28",{"_index":841,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:29",{"_index":842,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:31",{"_index":823,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:41",{"_index":832,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:46",{"_index":831,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:56",{"_index":830,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:62",{"_index":835,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:77",{"_index":834,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:91",{"_index":829,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create.component.ts:99",{"_index":833,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["create/tournament",{"_index":800,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{}}}],["criar",{"_index":804,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["criação",{"_index":114,"title":{},"body":{"injectables/AlertService.html":{}}}],["crie",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{}}}],["cujo",{"_index":1193,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["cursor",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["custom_elements_schema",{"_index":1039,"title":{},"body":{"modules/TournamentModule.html":{}}}],["da",{"_index":1008,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["das",{"_index":990,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["dashboard",{"_index":748,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data",{"_index":871,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["datatable').datatable",{"_index":407,"title":{},"body":{"injectables/DatatableService.html":{}}}],["datatable').datatable().destroy",{"_index":438,"title":{},"body":{"injectables/DatatableService.html":{}}}],["datatables.net",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["datatableservice",{"_index":397,"title":{"injectables/DatatableService.html":{}},"body":{"injectables/DatatableService.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["date",{"_index":445,"title":{},"body":{"classes/Datetime.html":{},"interfaces/ITournament.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{}}}],["date().getfullyear",{"_index":497,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":980,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":984,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["datetime",{"_index":439,"title":{"classes/Datetime.html":{}},"body":{"classes/Datetime.html":{},"components/TournamentEditComponent.html":{},"coverage.html":{}}}],["dc3545",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["de",{"_index":143,"title":{},"body":{"injectables/AlertService.html":{},"injectables/DatatableService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["declarations",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["declare",{"_index":405,"title":{},"body":{"injectables/DatatableService.html":{}}}],["decode",{"_index":593,"title":{},"body":{"injectables/JwtService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":599,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodedtoken.id",{"_index":603,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodedtoken.name",{"_index":605,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodedtoken.role",{"_index":607,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodetoken",{"_index":581,"title":{},"body":{"injectables/JwtService.html":{}}}],["decorators",{"_index":839,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["default",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EloService.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"interfaces/IApiService.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["deixe",{"_index":1095,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["deletado(a",{"_index":122,"title":{},"body":{"injectables/AlertService.html":{}}}],["delete",{"_index":518,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["delete(id",{"_index":525,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["deletetournament",{"_index":942,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["deletetournament(id",{"_index":947,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["denybuttontext",{"_index":1012,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["dependencies",{"_index":235,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desafio",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["description",{"_index":802,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["desejamos",{"_index":1185,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["destroy",{"_index":399,"title":{},"body":{"injectables/DatatableService.html":{}}}],["destroytoken",{"_index":582,"title":{},"body":{"injectables/JwtService.html":{}}}],["dev",{"_index":1327,"title":{},"body":{"index.html":{}}}],["development",{"_index":1323,"title":{},"body":{"index.html":{}}}],["directive",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["directives",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1338,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1343,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1342,"title":{},"body":{"index.html":{}}}],["document).ready(function",{"_index":406,"title":{},"body":{"injectables/DatatableService.html":{}}}],["documentation",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["domain/enums/role",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Token.html":{}}}],["durante",{"_index":146,"title":{},"body":{"injectables/AlertService.html":{}}}],["dynamic",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":872,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["e2e",{"_index":1352,"title":{},"body":{"index.html":{}}}],["edit",{"_index":889,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["edit'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["edit.component",{"_index":1041,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["edit.component.ts",{"_index":885,"title":{},"body":{"components/TournamentEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:24",{"_index":905,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["edit.component.ts:26",{"_index":892,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["edit.component.ts:60",{"_index":896,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["edit/:id",{"_index":1052,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["edit/tournament",{"_index":884,"title":{},"body":{"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{}}}],["editar",{"_index":886,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["edite",{"_index":936,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["editelo",{"_index":1108,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["editelo(event",{"_index":1123,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["edição",{"_index":902,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["element",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["elo",{"_index":449,"title":{"classes/Elo.html":{}},"body":{"classes/Elo.html":{},"injectables/EloService.html":{},"interfaces/IUser.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["elo.id",{"_index":1202,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["elo.interface",{"_index":550,"title":{},"body":{"interfaces/ITournament.html":{},"interfaces/IUser.html":{}}}],["elo.name",{"_index":879,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["elos",{"_index":807,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["eloservice",{"_index":455,"title":{"injectables/EloService.html":{}},"body":{"injectables/EloService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["em",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{},"components/UserGeneralComponent.html":{}}}],["email",{"_index":553,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserForRegister.html":{}}}],["encontrado",{"_index":413,"title":{},"body":{"injectables/DatatableService.html":{}}}],["end",{"_index":1351,"title":{},"body":{"index.html":{}}}],["enter",{"_index":761,"title":{},"body":{"injectables/TeamService.html":{},"injectables/TournamentService.html":{}}}],["enter(object",{"_index":1061,"title":{},"body":{"injectables/TournamentService.html":{}}}],["enter(team",{"_index":765,"title":{},"body":{"injectables/TeamService.html":{}}}],["enterteam",{"_index":1109,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["entertournament",{"_index":1110,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["entertournament(tournament",{"_index":1127,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["entity",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{}}}],["entrar",{"_index":1192,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["entre",{"_index":1097,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["enumerations",{"_index":1313,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/role",{"_index":556,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["environment",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url}/auth",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.api_url}/elos",{"_index":464,"title":{},"body":{"injectables/EloService.html":{}}}],["environment.api_url}/teams",{"_index":768,"title":{},"body":{"injectables/TeamService.html":{}}}],["environment.api_url}/tournaments",{"_index":1068,"title":{},"body":{"injectables/TournamentService.html":{}}}],["environment.api_url}/users",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{}}}],["equipe",{"_index":1191,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["equipe?').then",{"_index":1180,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["equipes",{"_index":876,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["errado",{"_index":144,"title":{},"body":{"injectables/AlertService.html":{}}}],["erro",{"_index":134,"title":{},"body":{"injectables/AlertService.html":{}}}],["error",{"_index":62,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["error(title",{"_index":78,"title":{},"body":{"injectables/AlertService.html":{}}}],["error.error.message",{"_index":136,"title":{},"body":{"injectables/AlertService.html":{}}}],["error.message",{"_index":137,"title":{},"body":{"injectables/AlertService.html":{}}}],["error.status",{"_index":135,"title":{},"body":{"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{}}}],["error/notfound",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["errorinterceptor",{"_index":262,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escolha",{"_index":1226,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["especifico",{"_index":988,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["est",{"_index":1216,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["etapa",{"_index":992,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["event",{"_index":1125,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["exclua",{"_index":937,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["exclusão",{"_index":121,"title":{},"body":{"injectables/AlertService.html":{}}}],["exclusão?').then",{"_index":965,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["execute",{"_index":1348,"title":{},"body":{"index.html":{}}}],["existente",{"_index":1221,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["export",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["extends",{"_index":888,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["false",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"guards/BaseGuard.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{},"miscellaneous/variables.html":{}}}],["fde6e8",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["fechar",{"_index":883,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1333,"title":{},"body":{"index.html":{}}}],["fillmatchs",{"_index":1057,"title":{},"body":{"injectables/TournamentService.html":{}}}],["fillmatchs(object",{"_index":1063,"title":{},"body":{"injectables/TournamentService.html":{}}}],["filtrados",{"_index":422,"title":{},"body":{"injectables/DatatableService.html":{}}}],["final",{"_index":1028,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["first",{"_index":1357,"title":{},"body":{"index.html":{}}}],["footer",{"_index":478,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["footer.component.html",{"_index":480,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":479,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":619,"title":{},"body":{"modules/LayoutModule.html":{}}}],["footercomponent",{"_index":199,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":698,"title":{},"body":{"classes/Properties.html":{}}}],["foram",{"_index":958,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["forbidden",{"_index":490,"title":{},"body":{"components/ForbiddenComponent.html":{},"modules/HttpCodesRoutingModule.html":{}}}],["forbidden'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["forbidden.component.html",{"_index":492,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":491,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden/forbidden.component",{"_index":509,"title":{},"body":{"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{}}}],["forbiddencomponent",{"_index":201,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":697,"title":{},"body":{"classes/Properties.html":{}}}],["formbuilder",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["formcreateteam",{"_index":1102,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["formelocreate",{"_index":808,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["formenterteam",{"_index":1103,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["formgroup",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["formregisteruser",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["formtournamentcreate",{"_index":809,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":680,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["found.component",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{}}}],["found.component.html",{"_index":682,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":681,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":679,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:15",{"_index":684,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":683,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["funcionalidades",{"_index":751,"title":{},"body":{"components/SidebarComponent.html":{}}}],["further",{"_index":1361,"title":{},"body":{"index.html":{}}}],["futura",{"_index":1189,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["ganhos",{"_index":1212,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"classes/InfoGeneralUser.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["general.component",{"_index":1234,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["general.component.html",{"_index":1101,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.scss",{"_index":1100,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts",{"_index":1092,"title":{},"body":{"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["general.component.ts:111",{"_index":1132,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:121",{"_index":1126,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:135",{"_index":1136,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:150",{"_index":1128,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:167",{"_index":1130,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:177",{"_index":1124,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:190",{"_index":1129,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:201",{"_index":1139,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:208",{"_index":1138,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:214",{"_index":1122,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:29",{"_index":1155,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:30",{"_index":1151,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:31",{"_index":1150,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:33",{"_index":1154,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:34",{"_index":1152,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:35",{"_index":1153,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:36",{"_index":1142,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:38",{"_index":1141,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:41",{"_index":1145,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:42",{"_index":1146,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:44",{"_index":1143,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:46",{"_index":1148,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:47",{"_index":1149,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:49",{"_index":1121,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:62",{"_index":1137,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:69",{"_index":1134,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:74",{"_index":1135,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:80",{"_index":1133,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:88",{"_index":1131,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general.component.ts:97",{"_index":1140,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["general/user",{"_index":1091,"title":{},"body":{"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["generate",{"_index":1336,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1319,"title":{},"body":{"index.html":{}}}],["generatematchstournaments",{"_index":943,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["generatematchstournaments(tournament",{"_index":949,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["geradas",{"_index":959,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["geral",{"_index":1211,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["gere",{"_index":933,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["gerencie",{"_index":935,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["getbyid",{"_index":519,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["getbyid(id",{"_index":528,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["getbylogged",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["getelos",{"_index":814,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["getgeneral",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["getinfogeneralforuser",{"_index":1111,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["getteams",{"_index":1112,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["getting",{"_index":1316,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":583,"title":{},"body":{"injectables/JwtService.html":{}}}],["gettournaments",{"_index":944,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["getuserbylogged",{"_index":1113,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["go",{"_index":1364,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1371,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{},"overview.html":{}}}],["h:mm",{"_index":981,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["headersconfig",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headersconfig['authorization",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["help",{"_index":1362,"title":{},"body":{"index.html":{}}}],["home",{"_index":500,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{}}}],["hora",{"_index":873,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["html",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["http",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"modules/HttpCodesModule.html":{},"modules/SharedModule.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000/api/v1",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1329,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcodesmodule",{"_index":502,"title":{"modules/HttpCodesModule.html":{}},"body":{"modules/HttpCodesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["httpcodesroutingmodule",{"_index":507,"title":{"modules/HttpCodesRoutingModule.html":{}},"body":{"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["httperror",{"_index":63,"title":{},"body":{"injectables/AlertService.html":{}}}],["httperror(error",{"_index":81,"title":{},"body":{"injectables/AlertService.html":{}}}],["httperrorresponse",{"_index":82,"title":{},"body":{"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":317,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":314,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":318,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["i+1",{"_index":1027,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["iapiservice",{"_index":514,"title":{"interfaces/IApiService.html":{}},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{},"coverage.html":{}}}],["icon",{"_index":110,"title":{},"body":{"injectables/AlertService.html":{}}}],["id",{"_index":451,"title":{},"body":{"classes/Elo.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"classes/Match.html":{},"classes/Properties.html":{},"classes/Team.html":{},"classes/Token.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{}}}],["id:number",{"_index":540,"title":{},"body":{"interfaces/IMatch.html":{}}}],["identifier",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["ielo",{"_index":461,"title":{"interfaces/IElo.html":{}},"body":{"injectables/EloService.html":{},"interfaces/IElo.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"classes/Tournament.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["if(error",{"_index":474,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["if(index",{"_index":1020,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["if(this.jwtservice.decodetoken().role",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{}}}],["if(this.jwtservice.gettoken",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["if(this.returnurl",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(token",{"_index":600,"title":{},"body":{"injectables/JwtService.html":{}}}],["if(value.isconfirmed",{"_index":966,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["iguais",{"_index":728,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imatch",{"_index":533,"title":{"interfaces/IMatch.html":{}},"body":{"interfaces/IMatch.html":{},"interfaces/ITournament.html":{},"classes/Match.html":{},"classes/Tournament.html":{},"components/TournamentManagementMatchesComponent.html":{},"coverage.html":{}}}],["implements",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"index.html":{}}}],["import",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{}}}],["import('../shared/http",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./admin/tournament/tournament.module",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./user/user.module",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{}}}],["infogeneraluser",{"_index":562,"title":{"classes/InfoGeneralUser.html":{}},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["inherited",{"_index":893,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["init",{"_index":400,"title":{},"body":{"injectables/DatatableService.html":{}}}],["initformcreateteam",{"_index":1114,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["initformelocreate",{"_index":815,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["initformenterteam",{"_index":1115,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["initformregisteruser",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["initformtournamentcreate",{"_index":816,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["initloginform",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["injectable",{"_index":27,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"injectables/JwtService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/JwtService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/DatatableService.html":{},"injectables/EloService.html":{},"injectables/JwtService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inset",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["instanceof",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["integrantes",{"_index":1223,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["intercept",{"_index":308,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":311,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":305,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":306,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":513,"title":{"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{}},"body":{"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"coverage.html":{}}}],["interfaces",{"_index":515,"title":{},"body":{"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"overview.html":{}}}],["interfaces/elo.interface",{"_index":465,"title":{},"body":{"injectables/EloService.html":{},"classes/Tournament.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["interfaces/match.interface",{"_index":671,"title":{},"body":{"classes/Match.html":{},"classes/Tournament.html":{}}}],["interfaces/team.interface",{"_index":758,"title":{},"body":{"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Tournament.html":{},"classes/User.html":{}}}],["interfaces/tournament.interface",{"_index":798,"title":{},"body":{"classes/Tournament.html":{},"injectables/TournamentService.html":{}}}],["interfaces/user",{"_index":1088,"title":{},"body":{"classes/UserForRegister.html":{}}}],["interfaces/user.interface",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["invalid",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["invocador",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{}}}],["início",{"_index":874,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["iteam",{"_index":538,"title":{"interfaces/ITeam.html":{}},"body":{"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Tournament.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["itournament",{"_index":544,"title":{"interfaces/ITournament.html":{}},"body":{"interfaces/ITournament.html":{},"classes/Tournament.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["itournament):observable",{"_index":1073,"title":{},"body":{"injectables/TournamentService.html":{}}}],["iuser",{"_index":377,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["iuserforregister",{"_index":557,"title":{"interfaces/IUserForRegister.html":{}},"body":{"interfaces/IUserForRegister.html":{},"classes/UserForRegister.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["j",{"_index":730,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{}}}],["jquery",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":592,"title":{},"body":{"injectables/JwtService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":591,"title":{},"body":{"injectables/JwtService.html":{}}}],["jwtdecode(token",{"_index":602,"title":{},"body":{"injectables/JwtService.html":{}}}],["jwtservice",{"_index":13,"title":{"injectables/JwtService.html":{}},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"injectables/JwtService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["karma",{"_index":1350,"title":{},"body":{"index.html":{}}}],["language",{"_index":409,"title":{},"body":{"injectables/DatatableService.html":{}}}],["larr",{"_index":498,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{}}}],["layout",{"_index":610,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["layout.component",{"_index":622,"title":{},"body":{"modules/LayoutModule.html":{}}}],["layout.component.html",{"_index":612,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":611,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/layout.component",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/layout.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layoutcomponent",{"_index":203,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutmodule",{"_index":241,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["leaveteam",{"_index":1116,"title":{},"body":{"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["list",{"_index":938,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["list.component",{"_index":1040,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["list.component.html",{"_index":940,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.scss",{"_index":939,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.ts",{"_index":925,"title":{},"body":{"components/TournamentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":946,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.ts:26",{"_index":952,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.ts:31",{"_index":950,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.ts:40",{"_index":951,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list.component.ts:51",{"_index":948,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["list/tournament",{"_index":924,"title":{},"body":{"components/TournamentListComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{}}}],["lista",{"_index":972,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["listar",{"_index":926,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["loadchildren",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":678,"title":{},"body":{"components/NgxSpinnerComponent.html":{}}}],["localstorage.getitem('token",{"_index":595,"title":{},"body":{"injectables/JwtService.html":{}}}],["localstorage.removeitem('token",{"_index":597,"title":{},"body":{"injectables/JwtService.html":{}}}],["localstorage.setitem('token",{"_index":596,"title":{},"body":{"injectables/JwtService.html":{}}}],["login",{"_index":366,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["login(user",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":205,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":779,"title":{},"body":{"components/TopbarComponent.html":{}}}],["m.authmodule",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.httpcodesmodule",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tournamentmodule",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usermodule",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["management/matches/:id",{"_index":1054,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["match",{"_index":665,"title":{"classes/Match.html":{}},"body":{"classes/Match.html":{},"classes/Tournament.html":{},"components/TournamentManagementMatchesComponent.html":{},"coverage.html":{}}}],["match.interface",{"_index":551,"title":{},"body":{"interfaces/ITournament.html":{}}}],["match.team_1.id",{"_index":1017,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["match.team_1.name",{"_index":1011,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["match.team_2.id",{"_index":1019,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["match.team_2.name",{"_index":1013,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["match.winner?.name",{"_index":1029,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches",{"_index":993,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["matches.component",{"_index":1045,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["matches.component.html",{"_index":995,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.scss",{"_index":994,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts",{"_index":986,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{},"coverage.html":{}}}],["matches.component.ts:20",{"_index":1003,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts:21",{"_index":997,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts:28",{"_index":999,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts:32",{"_index":1002,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts:42",{"_index":1001,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches.component.ts:72",{"_index":998,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["matches/tournament",{"_index":985,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{}}}],["matching",{"_index":56,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchs",{"_index":547,"title":{},"body":{"interfaces/ITournament.html":{},"classes/Tournament.html":{}}}],["maxnumberteams",{"_index":548,"title":{},"body":{"interfaces/ITournament.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{}}}],["member.name",{"_index":1224,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["messageconfig",{"_index":133,"title":{},"body":{"injectables/AlertService.html":{}}}],["messageconfig.text",{"_index":141,"title":{},"body":{"injectables/AlertService.html":{}}}],["messageconfig.title",{"_index":139,"title":{},"body":{"injectables/AlertService.html":{}}}],["metadata",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"interfaces/IApiService.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":1312,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalcreateteam",{"_index":1104,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["modalcreateteamref",{"_index":1105,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["modalelocreate",{"_index":810,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["modalelocreateref",{"_index":811,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["modalenterteam",{"_index":1106,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["modalenterteamref",{"_index":1107,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["modalmodule",{"_index":1044,"title":{},"body":{"modules/TournamentModule.html":{}}}],["modalmodule.forroot",{"_index":1046,"title":{},"body":{"modules/TournamentModule.html":{}}}],["modalref",{"_index":828,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["modalref.hide",{"_index":869,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["modalservice",{"_index":824,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["model",{"_index":691,"title":{},"body":{"classes/Properties.html":{}}}],["model/interfaces/user",{"_index":559,"title":{},"body":{"interfaces/IUserForRegister.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["model/models/user",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{},"classes/UserForRegister.html":{},"coverage.html":{}}}],["models/token",{"_index":594,"title":{},"body":{"injectables/JwtService.html":{}}}],["module",{"_index":232,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}},"body":{}}],["modules",{"_index":234,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":911,"title":{},"body":{"components/TournamentEditComponent.html":{},"dependencies.html":{}}}],["more",{"_index":1363,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":415,"title":{},"body":{"injectables/DatatableService.html":{}}}],["mude",{"_index":1098,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["multi",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["na",{"_index":1188,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navigate",{"_index":1328,"title":{},"body":{"index.html":{}}}],["need",{"_index":1356,"title":{},"body":{"index.html":{}}}],["nenhum",{"_index":411,"title":{},"body":{"injectables/DatatableService.html":{}}}],["nenhuma",{"_index":1217,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["new",{"_index":496,"title":{},"body":{"components/ForbiddenComponent.html":{},"injectables/JwtService.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"index.html":{}}}],["newrequest",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["newuser",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["next",{"_index":313,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(newrequest).pipe(catcherror(error",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(error",{"_index":473,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["ngselectmodule",{"_index":1042,"title":{},"body":{"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["ngx",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["ngxspinner",{"_index":72,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["ngxspinnercomponent",{"_index":207,"title":{"components/NgxSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxspinnermodule",{"_index":396,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["ngxspinnerservice",{"_index":70,"title":{},"body":{"injectables/AlertService.html":{},"modules/ComponentsModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["nome",{"_index":870,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["notfound",{"_index":512,"title":{},"body":{"modules/HttpCodesRoutingModule.html":{}}}],["notfoundcomponent",{"_index":209,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nova",{"_index":1190,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["novo",{"_index":971,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["null",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{},"components/LoginComponent.html":{},"components/UserGeneralComponent.html":{}}}],["number",{"_index":452,"title":{},"body":{"classes/Elo.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"classes/InfoGeneralUser.html":{},"classes/Match.html":{},"classes/Team.html":{},"classes/Token.html":{},"classes/Tournament.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{}}}],["number(raw_token.id",{"_index":604,"title":{},"body":{"injectables/JwtService.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":904,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["numero",{"_index":974,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["não",{"_index":131,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{}}}],["o",{"_index":147,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["obj",{"_index":447,"title":{},"body":{"classes/Datetime.html":{},"classes/Properties.html":{}}}],["obj.tostring().substring(0,16",{"_index":448,"title":{},"body":{"classes/Datetime.html":{}}}],["obj[prop",{"_index":700,"title":{},"body":{"classes/Properties.html":{}}}],["obj[prop].map(x",{"_index":701,"title":{},"body":{"classes/Properties.html":{}}}],["object",{"_index":524,"title":{},"body":{"interfaces/IApiService.html":{},"classes/Properties.html":{},"injectables/TournamentService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this.elos",{"_index":865,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["object.assign(this.teams",{"_index":1167,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["object.assign(this.tournament",{"_index":1006,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["object.assign(this.tournaments",{"_index":961,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["object.assign(this.user",{"_index":1165,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["observable",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IApiService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["ongoing",{"_index":571,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["ongoingtournaments",{"_index":566,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["oninit",{"_index":477,"title":{},"body":{"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["open",{"_index":570,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["openmodalcreateteam",{"_index":1117,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["openmodalelocreate",{"_index":817,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["openmodalenterteam",{"_index":1118,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["opentournaments",{"_index":567,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["ops",{"_index":140,"title":{},"body":{"injectables/AlertService.html":{},"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"classes/Datetime.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IApiService.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LoginComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["os",{"_index":928,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["ou",{"_index":1094,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["out",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1366,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1286,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":501,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/NotFoundComponent.html":{},"index.html":{}}}],["para",{"_index":733,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"classes/Datetime.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IApiService.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LoginComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["partida",{"_index":1009,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["partidas",{"_index":934,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["password",{"_index":554,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserForRegister.html":{}}}],["path",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["path:\"create",{"_index":1050,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["path:'list",{"_index":1048,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["pathmatch:'full",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pelo",{"_index":887,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["permite",{"_index":989,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["permitidas",{"_index":877,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["permitidos",{"_index":878,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["permitir",{"_index":930,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["pesquisar",{"_index":437,"title":{},"body":{"injectables/DatatableService.html":{}}}],["platform",{"_index":1353,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["por",{"_index":429,"title":{},"body":{"injectables/DatatableService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["position",{"_index":108,"title":{},"body":{"injectables/AlertService.html":{}}}],["possui",{"_index":731,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["processando",{"_index":434,"title":{},"body":{"injectables/DatatableService.html":{}}}],["processo",{"_index":148,"title":{},"body":{"injectables/AlertService.html":{}}}],["production",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1318,"title":{},"body":{"index.html":{}}}],["prop",{"_index":699,"title":{},"body":{"classes/Properties.html":{}}}],["properties",{"_index":165,"title":{"classes/Properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"components/ForbiddenComponent.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["properties.convertarraynumberinarrayobj(tournament",{"_index":857,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["properties.convertarrayobjinarraynumber(response",{"_index":921,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["prosseguir",{"_index":964,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["protected",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["provide",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{},"injectables/DatatableService.html":{},"injectables/JwtService.html":{}}}],["providers",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["página",{"_index":430,"title":{},"body":{"injectables/DatatableService.html":{}}}],["quantidade",{"_index":875,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["que",{"_index":931,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["queryparams",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{}}}],["question",{"_index":123,"title":{},"body":{"injectables/AlertService.html":{}}}],["raw_token",{"_index":601,"title":{},"body":{"injectables/JwtService.html":{}}}],["raw_token.name",{"_index":606,"title":{},"body":{"injectables/JwtService.html":{}}}],["raw_token.role",{"_index":608,"title":{},"body":{"injectables/JwtService.html":{}}}],["reactiveformsmodule",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["read",{"_index":458,"title":{},"body":{"injectables/EloService.html":{}}}],["readonly",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["realizada",{"_index":1183,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["redirecionado",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["redirectto",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto:\"list",{"_index":1047,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["redirectto:'/user",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1367,"title":{},"body":{"index.html":{}}}],["register",{"_index":367,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["register.component.html",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.interface",{"_index":1089,"title":{},"body":{"classes/UserForRegister.html":{},"injectables/UserService.html":{}}}],["register.interface.ts",{"_index":560,"title":{},"body":{"interfaces/IUserForRegister.html":{},"coverage.html":{}}}],["register.ts",{"_index":1083,"title":{},"body":{"classes/UserForRegister.html":{},"coverage.html":{}}}],["register.ts:5",{"_index":1086,"title":{},"body":{"classes/UserForRegister.html":{}}}],["register.ts:6",{"_index":1085,"title":{},"body":{"classes/UserForRegister.html":{}}}],["register.ts:7",{"_index":1087,"title":{},"body":{"classes/UserForRegister.html":{}}}],["register.ts:8",{"_index":1084,"title":{},"body":{"classes/UserForRegister.html":{}}}],["register/register.component",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["registercomponent",{"_index":211,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrar",{"_index":729,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registro",{"_index":412,"title":{},"body":{"injectables/DatatableService.html":{}}}],["registros",{"_index":419,"title":{},"body":{"injectables/DatatableService.html":{}}}],["reload",{"_index":1331,"title":{},"body":{"index.html":{}}}],["request",{"_index":316,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["request.clone",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reset",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["response.ongoingtournaments",{"_index":1200,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["response.opentournaments",{"_index":1201,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["response.wontournaments",{"_index":1199,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["responsável",{"_index":803,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["result.isconfirmed",{"_index":1015,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["resultados",{"_index":428,"title":{},"body":{"injectables/DatatableService.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["results",{"_index":55,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"classes/Datetime.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/JwtService.html":{},"classes/Properties.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"interfaces/IApiService.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"components/LoginComponent.html":{}}}],["rgba(0",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["rift",{"_index":747,"title":{},"body":{"components/SidebarComponent.html":{}}}],["role",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"interfaces/IUser.html":{},"components/SidebarComponent.html":{},"classes/Token.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{}}}],["root",{"_index":102,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/DatatableService.html":{},"injectables/JwtService.html":{}}}],["root'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["route",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{},"components/LoginComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["route.path",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{}}}],["routermodule",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":369,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["routes",{"_index":273,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpCodesRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routes/routing.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{}}}],["routing.module.ts",{"_index":365,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["run",{"_index":1325,"title":{},"body":{"index.html":{}}}],["running",{"_index":1344,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IApiService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["sair",{"_index":1179,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["salva",{"_index":115,"title":{},"body":{"injectables/AlertService.html":{}}}],["salvar",{"_index":881,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["saveelo",{"_index":818,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["saveresultmatch",{"_index":996,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["saveresultmatch(match",{"_index":1000,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["saveteam",{"_index":1119,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["savetournament",{"_index":819,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["scaffolding",{"_index":1335,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":1038,"title":{},"body":{"modules/TournamentModule.html":{}}}],["scrollx",{"_index":408,"title":{},"body":{"injectables/DatatableService.html":{}}}],["select",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["select.ng",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["select/ng",{"_index":1043,"title":{},"body":{"modules/TournamentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["selector",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["semptytable",{"_index":410,"title":{},"body":{"injectables/DatatableService.html":{}}}],["senhas",{"_index":726,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ser",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["serve",{"_index":1326,"title":{},"body":{"index.html":{}}}],["server",{"_index":1324,"title":{},"body":{"index.html":{}}}],["service.interface",{"_index":1069,"title":{},"body":{"injectables/TournamentService.html":{}}}],["service.interface.ts",{"_index":517,"title":{},"body":{"interfaces/IApiService.html":{},"coverage.html":{}}}],["service.interface.ts:4",{"_index":523,"title":{},"body":{"interfaces/IApiService.html":{}}}],["service.interface.ts:5",{"_index":531,"title":{},"body":{"interfaces/IApiService.html":{}}}],["service.interface.ts:6",{"_index":526,"title":{},"body":{"interfaces/IApiService.html":{}}}],["service.interface.ts:7",{"_index":527,"title":{},"body":{"interfaces/IApiService.html":{}}}],["service.interface.ts:8",{"_index":529,"title":{},"body":{"interfaces/IApiService.html":{}}}],["services/alert.service",{"_index":472,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["services/jwt.service",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{}}}],["setheaders",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["settimeout",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["settoken",{"_index":584,"title":{},"body":{"injectables/JwtService.html":{}}}],["settoken(token",{"_index":589,"title":{},"body":{"injectables/JwtService.html":{}}}],["seu",{"_index":1099,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["shadow",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/http",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":242,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showcancelbutton",{"_index":127,"title":{},"body":{"injectables/AlertService.html":{}}}],["showconfirmbutton",{"_index":111,"title":{},"body":{"injectables/AlertService.html":{}}}],["showdenybutton",{"_index":1010,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["sidebar",{"_index":740,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["sidebar.component.html",{"_index":742,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":741,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":621,"title":{},"body":{"modules/LayoutModule.html":{}}}],["sidebarcomponent",{"_index":213,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sim",{"_index":129,"title":{},"body":{"injectables/AlertService.html":{}}}],["sinfo",{"_index":414,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sinfoempty",{"_index":420,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sinfofiltered",{"_index":421,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sinfopostfix",{"_index":424,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sinfothousands",{"_index":425,"title":{},"body":{"injectables/DatatableService.html":{}}}],["slengthmenu",{"_index":426,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sloadingrecords",{"_index":431,"title":{},"body":{"injectables/DatatableService.html":{}}}],["sorte",{"_index":1187,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"modules/ComponentsModule.html":{},"injectables/DatatableService.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spinner",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{},"modules/ComponentsModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{},"dependencies.html":{}}}],["spinner'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["spinner.component",{"_index":395,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["spinner.component.html",{"_index":675,"title":{},"body":{"components/NgxSpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":674,"title":{},"body":{"components/NgxSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":673,"title":{},"body":{"components/NgxSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:12",{"_index":677,"title":{},"body":{"components/NgxSpinnerComponent.html":{}}}],["spinner.component.ts:8",{"_index":676,"title":{},"body":{"components/NgxSpinnerComponent.html":{}}}],["spinner/ngx",{"_index":394,"title":{},"body":{"modules/ComponentsModule.html":{},"components/NgxSpinnerComponent.html":{},"coverage.html":{}}}],["sprocessing",{"_index":433,"title":{},"body":{"injectables/DatatableService.html":{}}}],["src/.../app.module.ts",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../datatable.service.ts",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.ts",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/helpers/datetime",{"_index":912,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["src/app/core/helpers/datetime.ts",{"_index":441,"title":{},"body":{"classes/Datetime.html":{},"coverage.html":{}}}],["src/app/core/helpers/datetime.ts:2",{"_index":446,"title":{},"body":{"classes/Datetime.html":{}}}],["src/app/core/helpers/properties",{"_index":847,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["src/app/core/helpers/properties.ts",{"_index":686,"title":{},"body":{"classes/Properties.html":{},"coverage.html":{}}}],["src/app/core/helpers/properties.ts:13",{"_index":695,"title":{},"body":{"classes/Properties.html":{}}}],["src/app/core/helpers/properties.ts:3",{"_index":690,"title":{},"body":{"classes/Properties.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":307,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:15",{"_index":310,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:22",{"_index":315,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":468,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:14",{"_index":470,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:20",{"_index":471,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interfaces/api",{"_index":516,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{},"coverage.html":{}}}],["src/app/core/jquery/datatable.service",{"_index":953,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/core/jquery/datatable.service.ts",{"_index":398,"title":{},"body":{"injectables/DatatableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/jquery/datatable.service.ts:11",{"_index":404,"title":{},"body":{"injectables/DatatableService.html":{}}}],["src/app/core/jquery/datatable.service.ts:32",{"_index":402,"title":{},"body":{"injectables/DatatableService.html":{}}}],["src/app/core/jquery/datatable.service.ts:7",{"_index":401,"title":{},"body":{"injectables/DatatableService.html":{}}}],["src/app/core/models/token.ts",{"_index":770,"title":{},"body":{"classes/Token.html":{},"coverage.html":{}}}],["src/app/core/models/token.ts:4",{"_index":771,"title":{},"body":{"classes/Token.html":{}}}],["src/app/core/models/token.ts:5",{"_index":772,"title":{},"body":{"classes/Token.html":{}}}],["src/app/core/models/token.ts:6",{"_index":773,"title":{},"body":{"classes/Token.html":{}}}],["src/app/core/security/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/security/admin.guard.ts:12",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/security/admin.guard.ts:8",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/security/base.guard.ts",{"_index":384,"title":{},"body":{"guards/BaseGuard.html":{},"coverage.html":{}}}],["src/app/core/security/base.guard.ts:17",{"_index":385,"title":{},"body":{"guards/BaseGuard.html":{}}}],["src/app/core/security/base.guard.ts:21",{"_index":386,"title":{},"body":{"guards/BaseGuard.html":{}}}],["src/app/core/services/alert.service",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/core/services/alert.service.ts",{"_index":59,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/core/services/alert.service.ts:10",{"_index":71,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:14",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:26",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:38",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:50",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:60",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:70",{"_index":79,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:80",{"_index":75,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/alert.service.ts:93",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/core/services/jwt.service",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/core/services/jwt.service.ts",{"_index":580,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["src/app/core/services/jwt.service.ts:12",{"_index":588,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:16",{"_index":590,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:20",{"_index":587,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:24",{"_index":586,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/jwt.service.ts:8",{"_index":585,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/domain/enums/role",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"components/SidebarComponent.html":{}}}],["src/app/domain/enums/role.ts",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/domain/interfaces/elo.interface",{"_index":1156,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["src/app/domain/interfaces/elo.interface.ts",{"_index":532,"title":{},"body":{"interfaces/IElo.html":{},"coverage.html":{}}}],["src/app/domain/interfaces/match.interface",{"_index":1004,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["src/app/domain/interfaces/match.interface.ts",{"_index":534,"title":{},"body":{"interfaces/IMatch.html":{},"coverage.html":{}}}],["src/app/domain/interfaces/team.interface",{"_index":1157,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["src/app/domain/interfaces/team.interface.ts",{"_index":541,"title":{},"body":{"interfaces/ITeam.html":{},"coverage.html":{}}}],["src/app/domain/interfaces/tournament.interface",{"_index":913,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/domain/interfaces/tournament.interface.ts",{"_index":545,"title":{},"body":{"interfaces/ITournament.html":{},"coverage.html":{}}}],["src/app/domain/interfaces/user.interface",{"_index":1158,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["src/app/domain/interfaces/user.interface.ts",{"_index":552,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/domain/model",{"_index":563,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["src/app/domain/models/elo",{"_index":848,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/domain/models/elo.ts",{"_index":450,"title":{},"body":{"classes/Elo.html":{},"coverage.html":{}}}],["src/app/domain/models/elo.ts:2",{"_index":453,"title":{},"body":{"classes/Elo.html":{}}}],["src/app/domain/models/elo.ts:3",{"_index":454,"title":{},"body":{"classes/Elo.html":{}}}],["src/app/domain/models/match.ts",{"_index":666,"title":{},"body":{"classes/Match.html":{},"coverage.html":{}}}],["src/app/domain/models/match.ts:5",{"_index":667,"title":{},"body":{"classes/Match.html":{}}}],["src/app/domain/models/match.ts:6",{"_index":668,"title":{},"body":{"classes/Match.html":{}}}],["src/app/domain/models/match.ts:7",{"_index":669,"title":{},"body":{"classes/Match.html":{}}}],["src/app/domain/models/match.ts:8",{"_index":670,"title":{},"body":{"classes/Match.html":{}}}],["src/app/domain/models/team",{"_index":1005,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/domain/models/team.ts",{"_index":754,"title":{},"body":{"classes/Team.html":{},"coverage.html":{}}}],["src/app/domain/models/team.ts:5",{"_index":755,"title":{},"body":{"classes/Team.html":{}}}],["src/app/domain/models/team.ts:6",{"_index":756,"title":{},"body":{"classes/Team.html":{}}}],["src/app/domain/models/team.ts:7",{"_index":757,"title":{},"body":{"classes/Team.html":{}}}],["src/app/domain/models/tournament",{"_index":849,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["src/app/domain/models/tournament.ts",{"_index":789,"title":{},"body":{"classes/Tournament.html":{},"coverage.html":{}}}],["src/app/domain/models/tournament.ts:10",{"_index":792,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:11",{"_index":795,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:12",{"_index":791,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:13",{"_index":794,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:14",{"_index":790,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:15",{"_index":796,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:16",{"_index":793,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/tournament.ts:17",{"_index":797,"title":{},"body":{"classes/Tournament.html":{}}}],["src/app/domain/models/user",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{},"components/UserGeneralComponent.html":{}}}],["src/app/domain/models/user.ts",{"_index":1075,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/domain/models/user.ts:10",{"_index":1079,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:11",{"_index":1077,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:12",{"_index":1080,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:13",{"_index":1081,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:14",{"_index":1076,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:15",{"_index":1082,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/models/user.ts:9",{"_index":1078,"title":{},"body":{"classes/User.html":{}}}],["src/app/domain/services/auth.service",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/TournamentModule.html":{}}}],["src/app/domain/services/auth.service.ts",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/domain/services/auth.service.ts:11",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/domain/services/auth.service.ts:8",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/domain/services/elo.service",{"_index":850,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["src/app/domain/services/elo.service.ts",{"_index":456,"title":{},"body":{"injectables/EloService.html":{},"coverage.html":{}}}],["src/app/domain/services/elo.service.ts:11",{"_index":462,"title":{},"body":{"injectables/EloService.html":{}}}],["src/app/domain/services/elo.service.ts:15",{"_index":463,"title":{},"body":{"injectables/EloService.html":{}}}],["src/app/domain/services/elo.service.ts:8",{"_index":459,"title":{},"body":{"injectables/EloService.html":{}}}],["src/app/domain/services/team.service",{"_index":1159,"title":{},"body":{"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["src/app/domain/services/team.service.ts",{"_index":760,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/domain/services/team.service.ts:11",{"_index":764,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/domain/services/team.service.ts:15",{"_index":767,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/domain/services/team.service.ts:19",{"_index":766,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/domain/services/team.service.ts:8",{"_index":762,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/domain/services/tournament.service",{"_index":851,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["src/app/domain/services/tournament.service.ts",{"_index":1056,"title":{},"body":{"injectables/TournamentService.html":{},"coverage.html":{}}}],["src/app/domain/services/tournament.service.ts:10",{"_index":1058,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:13",{"_index":1059,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:16",{"_index":1067,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:19",{"_index":1060,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:22",{"_index":1065,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:25",{"_index":1066,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:29",{"_index":1062,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/tournament.service.ts:33",{"_index":1064,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/domain/services/user.service",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{}}}],["src/app/domain/services/user.service.ts",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/domain/services/user.service.ts:11",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/services/user.service.ts:14",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/services/user.service.ts:18",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/services/user.service.ts:22",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/services/user.service.ts:26",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/services/user.service.ts:30",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/domain/view",{"_index":558,"title":{},"body":{"interfaces/IUserForRegister.html":{},"components/RegisterComponent.html":{},"classes/UserForRegister.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":476,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts:12",{"_index":483,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/footer/footer.component.ts:8",{"_index":482,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/layout.component.ts",{"_index":609,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:12",{"_index":614,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:8",{"_index":613,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.module.ts",{"_index":618,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/app/layout/sidebar/sidebar.component.ts",{"_index":739,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layout/sidebar/sidebar.component.ts:11",{"_index":743,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layout/sidebar/sidebar.component.ts:14",{"_index":744,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layout/topbar/topbar.component.ts",{"_index":774,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/layout/topbar/topbar.component.ts:14",{"_index":780,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layout/topbar/topbar.component.ts:17",{"_index":782,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layout/topbar/topbar.component.ts:21",{"_index":781,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/routes/admin/tournament/tournament",{"_index":799,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{}}}],["src/app/routes/admin/tournament/tournament.module.ts",{"_index":1037,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/routes/auth/auth",{"_index":364,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/routes/auth/auth.module.ts",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/routes/auth/login/login.component.ts",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/routes/auth/login/login.component.ts:18",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/routes/auth/login/login.component.ts:20",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/routes/auth/login/login.component.ts:31",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/routes/auth/login/login.component.ts:35",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/routes/auth/login/login.component.ts:42",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/routes/auth/register/register.component.ts",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/routes/auth/register/register.component.ts:16",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/routes/auth/register/register.component.ts:25",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/routes/auth/register/register.component.ts:30",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/routes/auth/register/register.component.ts:39",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/routes/routing.module.ts",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/routes/user/user",{"_index":1090,"title":{},"body":{"components/UserGeneralComponent.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["src/app/routes/user/user.module.ts",{"_index":1233,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/shared/components/components.module.ts",{"_index":393,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/shared/components/ngx",{"_index":672,"title":{},"body":{"components/NgxSpinnerComponent.html":{},"coverage.html":{}}}],["src/app/shared/http",{"_index":488,"title":{},"body":{"components/ForbiddenComponent.html":{},"modules/HttpCodesModule.html":{},"modules/HttpCodesRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":737,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssearch",{"_index":436,"title":{},"body":{"injectables/DatatableService.html":{}}}],["started",{"_index":1317,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":442,"title":{},"body":{"classes/Datetime.html":{},"classes/Properties.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["stored",{"_index":1341,"title":{},"body":{"index.html":{}}}],["string",{"_index":74,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/Elo.html":{},"interfaces/IElo.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"injectables/JwtService.html":{},"classes/Properties.html":{},"classes/Team.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"classes/User.html":{},"classes/UserForRegister.html":{}}}],["styles",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["styleurls",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["sua",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{}}}],["success",{"_index":64,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(title",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{}}}],["successdelete",{"_index":65,"title":{},"body":{"injectables/AlertService.html":{}}}],["successdelete(entity",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{}}}],["successsave",{"_index":66,"title":{},"body":{"injectables/AlertService.html":{}}}],["successsave(entity",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{}}}],["successupdate",{"_index":67,"title":{},"body":{"injectables/AlertService.html":{}}}],["successupdate(entity",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{}}}],["sucesso",{"_index":118,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["summoners",{"_index":746,"title":{},"body":{"components/SidebarComponent.html":{}}}],["super(modalservice",{"_index":915,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["super.ngoninit",{"_index":916,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["support",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["swal",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["swal.fire",{"_index":107,"title":{},"body":{"injectables/AlertService.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["swal.fire(messageconfig",{"_index":149,"title":{},"body":{"injectables/AlertService.html":{}}}],["sweetalert2",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{},"components/TournamentManagementMatchesComponent.html":{},"dependencies.html":{}}}],["sweetalertoptions",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{}}}],["switch",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["szerorecords",{"_index":435,"title":{},"body":{"injectables/DatatableService.html":{}}}],["são",{"_index":727,"title":{},"body":{"components/RegisterComponent.html":{}}}],["t",{"_index":522,"title":{},"body":{"interfaces/IApiService.html":{}}}],["table",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["te",{"_index":1184,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["team",{"_index":555,"title":{"classes/Team.html":{}},"body":{"interfaces/IUser.html":{},"classes/Match.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Tournament.html":{},"components/TournamentManagementMatchesComponent.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["team.interface",{"_index":539,"title":{},"body":{"interfaces/IMatch.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{}}}],["team.name",{"_index":982,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["team_1",{"_index":535,"title":{},"body":{"interfaces/IMatch.html":{},"classes/Match.html":{}}}],["team_2",{"_index":536,"title":{},"body":{"interfaces/IMatch.html":{},"classes/Match.html":{}}}],["teams",{"_index":549,"title":{},"body":{"interfaces/ITournament.html":{},"classes/Tournament.html":{},"components/UserGeneralComponent.html":{}}}],["teamservice",{"_index":759,"title":{"injectables/TeamService.html":{}},"body":{"injectables/TeamService.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["tem",{"_index":125,"title":{},"body":{"injectables/AlertService.html":{}}}],["template",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["templateref",{"_index":838,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["templateurl",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["test",{"_index":1347,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1359,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1346,"title":{},"body":{"index.html":{}}}],["text",{"_index":76,"title":{},"body":{"injectables/AlertService.html":{}}}],["then((result",{"_index":1014,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["then(m",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["this.alertservice.confirm('deseja",{"_index":963,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.alertservice.httperror(error",{"_index":475,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.alertservice.success('bem",{"_index":1175,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.alertservice.success('deslogado",{"_index":787,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.alertservice.success('inscrição",{"_index":1196,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.alertservice.success('logado",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.alertservice.success('saida",{"_index":1182,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.alertservice.success('tudo",{"_index":956,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["this.alertservice.successdelete('torneio",{"_index":970,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["this.alertservice.successsave('equipe",{"_index":1172,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.alertservice.successsave('partida",{"_index":1024,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.alertservice.successsave('torneio",{"_index":859,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.alertservice.successsave('usuário",{"_index":725,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.alertservice.successupdate('torneio",{"_index":919,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["this.authservice.login(user).subscribe",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.closemodal(this.modalcreateteamref",{"_index":1170,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.closemodal(this.modalelocreateref",{"_index":863,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.closemodal(this.modalenterteamref",{"_index":1178,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.datatableservice.destroy",{"_index":1197,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.datatableservice.init",{"_index":962,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.eloservice.create(elo).subscribe",{"_index":861,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.eloservice.read().subscribe",{"_index":864,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.formbuilder.group",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.formcreateteam",{"_index":1162,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formcreateteam.reset",{"_index":1171,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formcreateteam.value",{"_index":1168,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formelocreate",{"_index":855,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.formelocreate.reset",{"_index":862,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.formelocreate.value",{"_index":860,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.formenterteam",{"_index":1163,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formenterteam.reset",{"_index":1177,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formenterteam.value",{"_index":1173,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.formregisteruser",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregisteruser.value",{"_index":723,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formtournamentcreate",{"_index":854,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.formtournamentcreate.get('date').setvalue(datetime.converttoinputdatetime(response.date",{"_index":923,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["this.formtournamentcreate.patchvalue(response",{"_index":922,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["this.formtournamentcreate.value",{"_index":856,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["this.getelos",{"_index":853,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.getinfogeneralforuser",{"_index":1161,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.getteams",{"_index":1205,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.gettoken",{"_index":598,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.gettournaments",{"_index":954,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.getuserbylogged",{"_index":1160,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.http.delete(`${this.api_url}/${id",{"_index":1071,"title":{},"body":{"injectables/TournamentService.html":{}}}],["this.http.get(`${this.api_url}/${id",{"_index":1072,"title":{},"body":{"injectables/TournamentService.html":{}}}],["this.http.get(`${this.api_url}/general",{"_index":1254,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.api_url}/logged",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.api_url",{"_index":467,"title":{},"body":{"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{}}}],["this.http.post(`${this.api_url}/enter",{"_index":769,"title":{},"body":{"injectables/TeamService.html":{},"injectables/TournamentService.html":{}}}],["this.http.post(`${this.api_url}/login",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.api_url",{"_index":466,"title":{},"body":{"injectables/EloService.html":{},"injectables/TeamService.html":{},"injectables/TournamentService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.api_url}/elo",{"_index":1252,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.api_url}/fillmatchs",{"_index":1074,"title":{},"body":{"injectables/TournamentService.html":{}}}],["this.http.put(`${this.api_url}/leaveteam",{"_index":1253,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.api_url",{"_index":1070,"title":{},"body":{"injectables/TournamentService.html":{}}}],["this.initformcreateteam",{"_index":1208,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.initformelocreate",{"_index":866,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.initformenterteam",{"_index":1204,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.initformregisteruser",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.initformtournamentcreate",{"_index":852,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.initloginform",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwtservice.decodetoken().name",{"_index":786,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.jwtservice.decodetoken().role",{"_index":745,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.jwtservice.destroytoken",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/TopbarComponent.html":{}}}],["this.jwtservice.gettoken",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.jwtservice.settoken(response['access_token",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalcreateteamref",{"_index":1209,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.modalelocreateref",{"_index":867,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.modalenterteamref",{"_index":1206,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.modalservice.show(this.modalcreateteam",{"_index":1210,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.modalservice.show(this.modalelocreate",{"_index":868,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.modalservice.show(this.modalenterteam",{"_index":1207,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.ngxspinner.hide",{"_index":105,"title":{},"body":{"injectables/AlertService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.ngxspinner.show",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.ongoingtournaments",{"_index":579,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["this.opentournaments",{"_index":578,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/BaseGuard.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/error/forbidden",{"_index":53,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate(['/forbidden",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.router.navigate(['/user",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.url",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.teamservice.create(team).subscribe",{"_index":1169,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.teamservice.enter(team).subscribe",{"_index":1174,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.teamservice.get().subscribe",{"_index":1166,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.tournament.matchs.length",{"_index":1021,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournament.matchs[index].winner",{"_index":1018,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournament.winner",{"_index":1022,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournamentgetbyid",{"_index":917,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournaments.splice(index",{"_index":968,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["this.tournamentservice.create(tournament).subscribe",{"_index":858,"title":{},"body":{"components/TournamentCreateComponent.html":{}}}],["this.tournamentservice.delete(id).subscribe",{"_index":967,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["this.tournamentservice.enter(tournament).subscribe",{"_index":1195,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.tournamentservice.fillmatchs(this.tournament).subscribe",{"_index":1025,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournamentservice.fillmatchs(tournament).subscribe",{"_index":955,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["this.tournamentservice.get().subscribe",{"_index":960,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["this.tournamentservice.getbyid(this.tournamentid).subscribe",{"_index":920,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournamentservice.update(this.tournament).subscribe",{"_index":1023,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["this.tournamentservice.update(tournament).subscribe",{"_index":918,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["this.username",{"_index":785,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.userservice.create(newuser).subscribe",{"_index":724,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getbylogged().subscribe",{"_index":1164,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.userservice.getgeneral().subscribe",{"_index":1198,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.userservice.leaveteam().subscribe",{"_index":1181,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.userservice.updateelo(elo).subscribe",{"_index":1203,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["this.wontournaments",{"_index":577,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["throwerror",{"_index":319,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["throwstmt",{"_index":783,"title":{},"body":{"components/TopbarComponent.html":{}}}],["time",{"_index":1096,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["timer",{"_index":112,"title":{},"body":{"injectables/AlertService.html":{}}}],["title",{"_index":80,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["titleactionpage",{"_index":812,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["todas",{"_index":927,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["token",{"_index":327,"title":{"classes/Token.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/JwtService.html":{},"classes/Token.html":{},"coverage.html":{}}}],["topbar",{"_index":775,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["topbar.component.html",{"_index":777,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":776,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar/topbar.component",{"_index":620,"title":{},"body":{"modules/LayoutModule.html":{}}}],["topbarcomponent",{"_index":215,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["torneio",{"_index":750,"title":{},"body":{"components/SidebarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["torneios",{"_index":929,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["tournament",{"_index":218,"title":{"classes/Tournament.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["tournament.date",{"_index":979,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["tournament.id",{"_index":977,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["tournament.maxnumberteams",{"_index":983,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["tournament.name",{"_index":978,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["tournamentcreatecomponent",{"_index":217,"title":{"components/TournamentCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentcreatecomponent:104",{"_index":897,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:23",{"_index":908,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:24",{"_index":907,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:26",{"_index":903,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:28",{"_index":909,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:29",{"_index":910,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:31",{"_index":906,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:40",{"_index":894,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:46",{"_index":895,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:56",{"_index":899,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:77",{"_index":901,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:91",{"_index":898,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamentcreatecomponent:99",{"_index":900,"title":{},"body":{"components/TournamentEditComponent.html":{}}}],["tournamenteditcomponent",{"_index":220,"title":{"components/TournamentEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentgetbyid",{"_index":891,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["tournamentid",{"_index":890,"title":{},"body":{"components/TournamentEditComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["tournamentlistcomponent",{"_index":222,"title":{"components/TournamentListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentmanagementmatchescomponent",{"_index":224,"title":{"components/TournamentManagementMatchesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentmodule",{"_index":1030,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentroutingmodule",{"_index":1036,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":941,"title":{},"body":{"components/TournamentListComponent.html":{},"components/UserGeneralComponent.html":{}}}],["tournamentservice",{"_index":822,"title":{"injectables/TournamentService.html":{}},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"modules/TournamentModule.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["tree",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["trocar",{"_index":1225,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["true",{"_index":54,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"guards/BaseGuard.html":{},"injectables/DatatableService.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/BaseGuard.html":{},"classes/Datetime.html":{},"classes/Elo.html":{},"injectables/EloService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IApiService.html":{},"interfaces/IElo.html":{},"interfaces/IMatch.html":{},"interfaces/ITeam.html":{},"interfaces/ITournament.html":{},"interfaces/IUser.html":{},"interfaces/IUserForRegister.html":{},"classes/InfoGeneralUser.html":{},"injectables/JwtService.html":{},"components/LoginComponent.html":{},"classes/Match.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/Token.html":{},"components/TopbarComponent.html":{},"classes/Tournament.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"classes/User.html":{},"classes/UserForRegister.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":693,"title":{},"body":{"classes/Properties.html":{}}}],["um",{"_index":987,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["uma",{"_index":1220,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["unit",{"_index":1345,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"injectables/AlertService.html":{}}}],["update",{"_index":520,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["update(object",{"_index":530,"title":{},"body":{"interfaces/IApiService.html":{},"injectables/TournamentService.html":{}}}],["updateelo",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["updateelo(elo",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{}}}],["urlsegment",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["urltree",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"guards/BaseGuard.html":{}}}],["use",{"_index":1337,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":228,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/Team.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"classes/User.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.interface",{"_index":543,"title":{},"body":{"interfaces/ITeam.html":{}}}],["user.team.name",{"_index":1222,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["user.ts",{"_index":565,"title":{},"body":{"classes/InfoGeneralUser.html":{},"coverage.html":{}}}],["user.ts:2",{"_index":575,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["user.ts:3",{"_index":574,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["user.ts:4",{"_index":572,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["userforregister",{"_index":717,"title":{"classes/UserForRegister.html":{}},"body":{"components/RegisterComponent.html":{},"classes/UserForRegister.html":{},"coverage.html":{}}}],["usergeneralcomponent",{"_index":227,"title":{"components/UserGeneralComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":1227,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":778,"title":{},"body":{"components/TopbarComponent.html":{}}}],["userroutingmodule",{"_index":1232,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":542,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["userservice",{"_index":352,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"components/RegisterComponent.html":{},"components/UserGeneralComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":1093,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["usuário",{"_index":932,"title":{},"body":{"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["v",{"_index":732,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vagas",{"_index":975,"title":{},"body":{"components/TournamentListComponent.html":{}}}],["valid",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["validators",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["validators.required",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{},"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["value",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EloService.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"injectables/TournamentService.html":{},"components/UserGeneralComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.isconfirmed",{"_index":1194,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatatableService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"injectables/JwtService.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["variable",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1380,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vencedor",{"_index":1007,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["version",{"_index":1321,"title":{},"body":{"index.html":{}}}],["via",{"_index":1349,"title":{},"body":{"index.html":{}}}],["view",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{}}}],["view/info",{"_index":564,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":845,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/UserGeneralComponent.html":{}}}],["viewchild('modalcreateteam",{"_index":1144,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["viewchild('modalelocreate",{"_index":840,"title":{},"body":{"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{}}}],["viewchild('modalenterteam",{"_index":1147,"title":{},"body":{"components/UserGeneralComponent.html":{}}}],["vindo",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{},"components/UserGeneralComponent.html":{}}}],["voc",{"_index":124,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/TopbarComponent.html":{},"components/UserGeneralComponent.html":{}}}],["void",{"_index":403,"title":{},"body":{"injectables/DatatableService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NgxSpinnerComponent.html":{},"components/NotFoundComponent.html":{},"classes/Properties.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/TournamentCreateComponent.html":{},"components/TournamentEditComponent.html":{},"components/TournamentListComponent.html":{},"components/TournamentManagementMatchesComponent.html":{},"components/UserGeneralComponent.html":{}}}],["warning",{"_index":68,"title":{},"body":{"injectables/AlertService.html":{}}}],["warning(title",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{}}}],["website",{"_index":486,"title":{},"body":{"components/FooterComponent.html":{}}}],["winner",{"_index":537,"title":{},"body":{"interfaces/IMatch.html":{},"interfaces/ITournament.html":{},"classes/Match.html":{},"classes/Tournament.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["winner.id",{"_index":1016,"title":{},"body":{"components/TournamentManagementMatchesComponent.html":{}}}],["won",{"_index":573,"title":{},"body":{"classes/InfoGeneralUser.html":{}}}],["wontournaments",{"_index":568,"title":{},"body":{"classes/InfoGeneralUser.html":{},"components/UserGeneralComponent.html":{}}}],["x",{"_index":703,"title":{},"body":{"classes/Properties.html":{},"components/TournamentManagementMatchesComponent.html":{}}}],["x.id",{"_index":704,"title":{},"body":{"classes/Properties.html":{}}}],["year",{"_index":493,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["zone.js",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/HttpCodesModule.html":{},"modules/LayoutModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/security/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/security/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/security/admin.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { CanLoad, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Role } from \"src/app/domain/enums/role\";\nimport { JwtService } from \"../services/jwt.service\";\n\n@Injectable()\nexport class AdminGuard implements CanLoad {\n\n  constructor(protected router: Router, protected jwtService: JwtService) {\n  }\n  canLoad(route: Route): boolean{\n    if(this.jwtService.getToken() == null){\n      this.router.navigate(['/auth/login'], { queryParams: { returnUrl: route.path } });\n      return false;\n    }\n    if(this.jwtService.decodeToken().role != Role.ADMIN){\n      this.router.navigate(['/error/forbidden']);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirm\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                httpError\n                            \n                            \n                                    Async\n                                success\n                            \n                            \n                                    Async\n                                successDelete\n                            \n                            \n                                    Async\n                                successSave\n                            \n                            \n                                    Async\n                                successUpdate\n                            \n                            \n                                    Async\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxSpinner: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/alert.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(title: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        httpError\n                        \n                    \n                \n            \n            \n                \n                    \n                    httpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        success\n                        \n                    \n                \n            \n            \n                \n                    \n                    success(title: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        successDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    successDelete(entity: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        successSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    successSave(entity: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        successUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    successUpdate(entity: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        warning\n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(title: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/alert.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal, { SweetAlertOptions } from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private ngxSpinner: NgxSpinnerService, private router: Router) { }\n\n  async success(title: string, text: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: title,\n      text: text,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  }\n\n  async successSave(entity: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Criação salva!',\n      text: `${entity} cadastrado(a) com sucesso!`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  }\n\n  async successUpdate(entity: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Alteração salva!',\n      text: `${entity} atualizado(a) com Sucesso!`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  }\n\n  async successDelete(entity: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Exclusão salva!',\n      text: `${entity} deletado(a) com sucesso!`,\n    });\n  }\n\n  async warning(title: string, text: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'warning',\n      title: title,\n      text: text,\n    });\n  }\n\n  async error(title: string, text: string) {\n    this.ngxSpinner.hide();\n    return await Swal.fire({\n      position: 'center',\n      icon: 'error',\n      title: title,\n      text: text,\n    });\n  }\n\n  async confirm(text: string) {\n    return await Swal.fire({\n      position: 'center',\n      icon: 'question',\n      title: 'Você tem certeza?',\n      text: text,\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Não',\n    });\n  }\n\n\n  async httpError(error: HttpErrorResponse) {\n    this.ngxSpinner.hide();\n    const messageConfig: any = {\n      position: 'center',\n      icon: 'error',\n      title: `Erro: ${error.status}`,\n      text: error.error.message || error.message,\n    };\n\n    if (error.status === 500) {\n      messageConfig.title = 'Ops...';\n      messageConfig.text = 'Algo de errado aconteceu durante o processo'\n    }\n\n    return await Swal.fire(messageConfig);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'desafio'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'desafio';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                .pointer{\n  cursor: pointer;\n}\nng-select.ng-invalid .ng-select-container {\n  border-color: #dc3545;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\n}\n\nng-select.ng-valid .ng-select-container {\n  border-color: #198754;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #ade6a8;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            LayoutModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './routes/routing.module';\nimport { AppComponent } from './app.component';\nimport { LayoutModule } from './layout/layout.module';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n];\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    LayoutModule,\n    SharedModule\n  ],\n  providers: [\n    httpInterceptorProviders,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from '../core/security/admin.guard';\nimport { BaseGuard } from '../core/security/base.guard';\nimport { Role } from '../domain/enums/role';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ForbiddenComponent } from '../shared/http-codes/forbidden/forbidden.component';\nimport { NotFoundComponent } from '../shared/http-codes/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path:'', pathMatch:'full', redirectTo:'/user'},\n  {\n    path: 'admin/tournament',\n    component: LayoutComponent,\n    loadChildren: () => \"import('./admin/tournament/tournament.module')\\\n      .then(m => m.TournamentModule)\"\n    ,\n    canLoad: [AdminGuard],\n  },\n  {\n    path: 'user',\n    component: LayoutComponent,\n    loadChildren: () => \"import('./user/user.module')\\\n      .then(m => m.UserModule)\"\n    ,\n    canLoad: [BaseGuard],\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module')\\\n      .then(m => m.AuthModule)\"\n  },\n  {\n    path: 'error',\n    component: LayoutComponent,\n    loadChildren: () => \"import('../shared/http-codes/http-codes.module')\\\n      .then(m => m.HttpCodesModule)\"\n  },\n  { path: '**', redirectTo: '/error/notfound' }\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  providers: [\n    BaseGuard,\n    AdminGuard\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/auth.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { JwtService } from '../services/jwt.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly router: Router,\n  ) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    } as any;\n\n    const token = this.jwtService.getToken();\n\n    if (token) headersConfig['Authorization'] = `Bearer ${token}`;\n\n    const newRequest = request.clone({ setHeaders: headersConfig });\n\n    return next.handle(newRequest).pipe(catchError(error => {\n      if (error instanceof HttpErrorResponse) {\n        switch (error.status) {\n          case 401:\n            this.jwtService.destroyToken();\n            this.router.navigate(['/auth/login'], { queryParams: { returnUrl: this.router.url } });\n            break;\n          case 403:\n            this.router.navigate(['/forbidden']);\n            break;\n        }\n      }\n      return throwError(error);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthService } from 'src/app/domain/services/auth.service';\nimport { RegisterComponent } from './register/register.component';\nimport { UserService } from 'src/app/domain/services/user.service';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AuthRoutingModule,\n    ],\n    providers: [\n        AuthService,\n        UserService\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n    ],\n    exports: [\n\n    ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component:RegisterComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n  ]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}/auth`\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from '../interfaces/user.interface';\n\n@Injectable()\nexport class AuthService {\n  private API_URL = `${environment.API_URL}/auth`\n  constructor(private http: HttpClient) { }\n\n  login(user: IUser) {\n    return this.http.post(`${this.API_URL}/login`, user);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/BaseGuard.html":{"url":"guards/BaseGuard.html","title":"guard - BaseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    BaseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/security/base.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/security/base.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/security/base.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    ActivatedRouteSnapshot,\n    Router,\n    RouterStateSnapshot,\n    CanLoad,\n    Route,\n    UrlSegment,\n    UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '../services/jwt.service';\n\n\n@Injectable()\nexport class BaseGuard implements CanLoad {\n\n    constructor(protected router: Router, protected jwtService: JwtService) {\n    }\n    canLoad(route: Route): boolean{\n        if(this.jwtService.getToken() == null){\n            this.router.navigate(['/auth/login'], { queryParams: { returnUrl: route.path } });\n            return false;\n        }\n        return true;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nNgxSpinnerComponent\n\nNgxSpinnerComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nNgxSpinnerComponent->ComponentsModule\n\n\n\n\n\nNgxSpinnerComponent \n\nNgxSpinnerComponent \n\nNgxSpinnerComponent  -->\n\nComponentsModule->NgxSpinnerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxSpinnerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxSpinnerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgxSpinnerComponent } from './ngx-spinner/ngx-spinner.component';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\n\n\n\n@NgModule({\n  declarations: [\n    NgxSpinnerComponent\n  ],\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    RouterModule,\n  ],\n  exports: [\n    NgxSpinnerComponent\n  ],\n  providers:[\n    NgxSpinnerService\n  ]\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatatableService.html":{"url":"injectables/DatatableService.html","title":"injectable - DatatableService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatatableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/jquery/datatable.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/jquery/datatable.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/jquery/datatable.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/jquery/datatable.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\ndeclare var $: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatatableService {\n\n  constructor() { }\n\n  init() {\n    $(document).ready(function () {\n      $('#dataTable').DataTable({\n        \"scrollX\": true,\n        \"language\": {\n          \"sEmptyTable\": \"Nenhum registro encontrado\",\n          \"sInfo\": \"Mostrando de _START_ até _END_ de _TOTAL_ registros\",\n          \"sInfoEmpty\": \"Mostrando 0 até 0 de 0 registros\",\n          \"sInfoFiltered\": \"(Filtrados de _MAX_ registros)\",\n          \"sInfoPostFix\": \"\",\n          \"sInfoThousands\": \".\",\n          \"sLengthMenu\": \"_MENU_ resultados por página\",\n          \"sLoadingRecords\": \"Carregando...\",\n          \"sProcessing\": \"Processando...\",\n          \"sZeroRecords\": \"Nenhum registro encontrado\",\n          \"sSearch\": \"Pesquisar\",\n        }\n      });\n    });\n  }\n\n  destroy() {\n    $(document).ready(function () {\n      $('#dataTable').DataTable().destroy();\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datetime.html":{"url":"classes/Datetime.html","title":"class - Datetime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datetime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/helpers/Datetime.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertToInputDateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertToInputDateTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToInputDateTime(obj: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/helpers/Datetime.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Datetime {\n  static convertToInputDateTime(obj: Date) {\n    return obj.toString().substring(0,16);\n    \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elo.html":{"url":"classes/Elo.html","title":"class - Elo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/elo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/elo.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/elo.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Elo {\n  id: number;\n  name: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EloService.html":{"url":"injectables/EloService.html","title":"injectable - EloService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EloService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/elo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/elo.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(elo: IElo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/elo.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elo\n                                    \n                                                IElo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/elo.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}/elos`\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/elo.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IElo } from '../interfaces/elo.interface';\n\n@Injectable()\nexport class EloService {\n  private API_URL = `${environment.API_URL}/elos`\n  constructor(private http: HttpClient) { }\n\n  create(elo: IElo) {\n    return this.http.post(this.API_URL, elo);\n  }\n\n  read(){\n    return this.http.get(this.API_URL)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AlertService } from '../services/alert.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private readonly alertService: AlertService,\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(catchError(error => {\n      if(error instanceof HttpErrorResponse) {\n        this.alertService.httpError(error);\n      }\n      return throwError(error);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Copyright &copy; Your Website 2021\n        \n    \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Copyright © Your Website 2021            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/http-codes/forbidden/forbidden.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n            \n                styleUrls\n                ./forbidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/http-codes/forbidden/forbidden.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/http-codes/forbidden/forbidden.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/http-codes/forbidden/forbidden.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  year = new Date().getFullYear();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  403\n  Forbidden\n  Ops...\n  &larr; Back to home page\n\n    \n\n    \n                \n                    ./forbidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  403  Forbidden  Ops...  ← Back to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpCodesModule.html":{"url":"modules/HttpCodesModule.html","title":"module - HttpCodesModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpCodesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpCodesModule\n\n\n\ncluster_HttpCodesModule_imports\n\n\n\ncluster_HttpCodesModule_exports\n\n\n\ncluster_HttpCodesModule_declarations\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\n\n\nHttpCodesModule\n\nHttpCodesModule\n\nHttpCodesModule -->\n\nForbiddenComponent->HttpCodesModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nHttpCodesModule -->\n\nNotFoundComponent->HttpCodesModule\n\n\n\n\n\nForbiddenComponent \n\nForbiddenComponent \n\nForbiddenComponent  -->\n\nHttpCodesModule->ForbiddenComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nHttpCodesModule->NotFoundComponent \n\n\n\n\n\nHttpCodesRoutingModule\n\nHttpCodesRoutingModule\n\nHttpCodesModule -->\n\nHttpCodesRoutingModule->HttpCodesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/http-codes/http-codes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForbiddenComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HttpCodesRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForbiddenComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpCodesRoutingModule } from './http-codes.routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    NotFoundComponent,\n    ForbiddenComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    HttpCodesRoutingModule\n  ],\n  exports: [\n    NotFoundComponent,\n    ForbiddenComponent,\n  ],\n})\nexport class HttpCodesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpCodesRoutingModule.html":{"url":"modules/HttpCodesRoutingModule.html","title":"module - HttpCodesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpCodesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/http-codes/http-codes.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\nconst routes: Routes = [\n  { path: 'forbidden', component: ForbiddenComponent},\n  { path: 'notfound', component: NotFoundComponent},\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers:[\n  ]\n})\nexport class HttpCodesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiService.html":{"url":"interfaces/IApiService.html","title":"interface - IApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/api-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(object: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interfaces/api-service.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interfaces/api-service.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interfaces/api-service.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interfaces/api-service.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(object: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interfaces/api-service.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IApiService {\n  create(object: T): Observable;\n  update(object: T): Observable;\n  delete(id: number): Observable;\n  get(): Observable>;\n  getById(id: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElo.html":{"url":"interfaces/IElo.html","title":"interface - IElo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IElo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/interfaces/elo.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IElo{\n  id: number;\n  name: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMatch.html":{"url":"interfaces/IMatch.html","title":"interface - IMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/interfaces/match.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            team_1\n                                        \n                                \n                                \n                                        \n                                            team_2\n                                        \n                                \n                                \n                                        \n                                            winner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team_1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team_1:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team_2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team_2:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winner:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITeam } from \"./team.interface\";\n\nexport interface IMatch {\n  id:number;\n  team_1: ITeam;\n  team_2: ITeam;\n  winner: ITeam;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeam.html":{"url":"interfaces/ITeam.html","title":"interface - ITeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/interfaces/team.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         IUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from \"./user.interface\";\n\nexport interface ITeam {\n  id: number;\n  name: string;\n  users: IUser[];\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITournament.html":{"url":"interfaces/ITournament.html","title":"interface - ITournament","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITournament\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/interfaces/tournament.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowedElos\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            matchs\n                                        \n                                \n                                \n                                        \n                                            maxNumberTeams\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            teams\n                                        \n                                \n                                \n                                        \n                                            winner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowedElos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedElos:         IElo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchs:         IMatch[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMatch[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxNumberTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxNumberTeams:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teams:         ITeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winner:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IElo } from \"./elo.interface\";\nimport { IMatch } from \"./match.interface\";\nimport { ITeam } from \"./team.interface\";\n\nexport interface ITournament {\n  id: number;\n  name: string;\n  date: Date;\n  maxNumberTeams: number;\n  allowedElos: IElo[];\n  teams: ITeam[];\n  matchs: IMatch[];\n  winner: ITeam;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            elo\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            team\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elo:         IElo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:         ITeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../enums/role\";\nimport { IElo } from \"./elo.interface\";\nimport { ITeam } from \"./team.interface\";\n\nexport interface IUser {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  role: Role;\n  elo: IElo;\n  team: ITeam;\n  \n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserForRegister.html":{"url":"interfaces/IUserForRegister.html","title":"interface - IUserForRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserForRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/view-to-model/interfaces/user-for-register.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUserForRegister {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InfoGeneralUser.html":{"url":"classes/InfoGeneralUser.html","title":"class - InfoGeneralUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InfoGeneralUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/model-to-view/info-general-user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onGoingTournaments\n                            \n                            \n                                openTournaments\n                            \n                            \n                                wonTournaments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(won, open, onGoing)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/model-to-view/info-general-user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        won\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        open\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onGoing\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        onGoingTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/model-to-view/info-general-user.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/model-to-view/info-general-user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wonTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/model-to-view/info-general-user.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InfoGeneralUser{\n  wonTournaments: number;\n  openTournaments: number;\n  onGoingTournaments: number;\n\n  constructor(won,open,onGoing){\n    this.wonTournaments = won;\n    this.openTournaments = open;\n    this.onGoingTournaments = onGoing;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeToken\n                            \n                            \n                                destroyToken\n                            \n                            \n                                getToken\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/jwt.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyToken\n                        \n                    \n                \n            \n            \n                \ndestroyToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport jwtDecode from 'jwt-decode';\nimport { Token } from '../models/token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor() { }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  setToken(token: string) {\n    return localStorage.setItem('token', token);\n  }\n\n  destroyToken() {\n    return localStorage.removeItem('token');\n  }\n\n  decodeToken(): Token {\n    const token = this.getToken();\n    var decodedToken = new Token();\n\n    if(token) {\n      const raw_token = jwtDecode(token) as any;\n\n      decodedToken.id = Number(raw_token.id);\n      decodedToken.name = raw_token.name;\n      decodedToken.role = raw_token.role;\n    }\n\n    return decodedToken;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n        \n        \n            \n            \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nLayoutModule -->\n\nSidebarComponent->LayoutModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nLayoutModule -->\n\nTopbarComponent->LayoutModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nLayoutModule->FooterComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nLayoutModule->SidebarComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nLayoutModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer/footer.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { LayoutComponent } from './layout.component';\n\n\n\n\n@NgModule({\n\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule\n    ],\n    declarations: [\n        SidebarComponent,\n        TopbarComponent,\n        FooterComponent,\n        LayoutComponent,\n    ],\n    exports: [\n        SidebarComponent,\n        TopbarComponent,\n        FooterComponent,\n        LayoutComponent,\n    ],\n    providers: [\n\n    ]\n})\nexport class LayoutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initLoginForm\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthService, formBuilder: FormBuilder, ngxSpinner: NgxSpinnerService, alertService: AlertService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initLoginForm\n                        \n                    \n                \n            \n            \n                \ninitLoginForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/login/login.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/login/login.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/auth/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.route.snapshot.queryParams['returnUrl']\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/auth/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { JwtService } from 'src/app/core/services/jwt.service';\nimport { User } from 'src/app/domain/models/user';\nimport { AuthService } from 'src/app/domain/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  returnUrl = this.route.snapshot.queryParams['returnUrl'];\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private ngxSpinner: NgxSpinnerService,\n    private alertService: AlertService,\n    private jwtService: JwtService\n  ) { }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  initLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      email: [],\n      password: [],\n    })\n  }\n\n  login() {\n    this.ngxSpinner.show();\n    let user = this.loginForm.value as User;\n\n    this.authService.login(user).subscribe(\n      (response) => {\n        this.alertService.success('Logado com Sucesso', 'você será redirecionado em breve!');\n        this.jwtService.setToken(response['access_token']);\n        if(this.returnUrl == null){\n          setTimeout(() => { this.router.navigate(['/user']); }, 1501);\n        }\n        else{\n          setTimeout(() => { this.router.navigate([this.returnUrl]); }, 1501);\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n    \n\n      \n\n        \n          \n            \n            \n              \n              \n                \n                  \n                    Bem vindo Invocador!\n                  \n                  \n                    \n                      \n                    \n                    \n                      \n                    \n                    \n                      Login\n                    \n                  \n                  \n                  \n                    Crie sua conta!\n                  \n                \n              \n            \n          \n        \n\n      \n\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            Bem vindo Invocador!                                                                                                                                                                                                          Login                                                                                              Crie sua conta!                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Match.html":{"url":"classes/Match.html","title":"class - Match","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Match\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/match.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMatch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                team_1\n                            \n                            \n                                team_2\n                            \n                            \n                                winner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/match.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/match.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/match.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        winner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/match.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMatch } from \"../interfaces/match.interface\";\nimport { Team } from \"./team\";\n\nexport class Match implements IMatch {\n  id: number;\n  team_1: Team;\n  team_2: Team;\n  winner: Team;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxSpinnerComponent.html":{"url":"components/NgxSpinnerComponent.html","title":"component - NgxSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgxSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/ngx-spinner/ngx-spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ngx-spinner\n            \n\n            \n                styleUrls\n                ./ngx-spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ngx-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/ngx-spinner/ngx-spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/ngx-spinner/ngx-spinner.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ngx-spinner',\n  templateUrl: './ngx-spinner.component.html',\n  styleUrls: ['./ngx-spinner.component.scss']\n})\nexport class NgxSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Loading...\n\n    \n\n    \n                \n                    ./ngx-spinner.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/http-codes/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/http-codes/not-found/not-found.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/http-codes/not-found/not-found.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  404\n  Not Found\n  Ops...\n  &larr; Back to home page\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Not Found  Ops...  ← Back to home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Properties.html":{"url":"classes/Properties.html","title":"class - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Properties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/helpers/Properties.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertArrayNumberInArrayObj\n                            \n                            \n                                    Static\n                                convertArrayObjInArrayNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertArrayNumberInArrayObj\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertArrayNumberInArrayObj(obj: object, properties: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/helpers/Properties.ts:3\n                \n            \n\n\n            \n                \n                    model accepted by typeorm\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    properties\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertArrayObjInArrayNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertArrayObjInArrayNumber(obj: object, properties: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/helpers/Properties.ts:13\n                \n            \n\n\n            \n                \n                    model accepted by angular form\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    properties\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Properties{\n  /**model accepted by typeorm */\n  static convertArrayNumberInArrayObj(obj: object, properties: string[]){\n    for(let prop of properties){\n      obj[prop] = obj[prop].map(x => {\n        let auxAnyForConvert: any = {id: x}\n        return auxAnyForConvert;\n      })\n    }\n    \n  }\n  /**model accepted by angular form */\n  static convertArrayObjInArrayNumber(obj: object, properties: string[]){\n    for(let prop of properties){\n      obj[prop] = obj[prop].map(x => x.id);\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/auth/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formRegisterUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initFormRegisterUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, ngxSpinner: NgxSpinnerService, alertService: AlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/auth/register/register.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initFormRegisterUser\n                        \n                    \n                \n            \n            \n                \ninitFormRegisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/register/register.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/register/register.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/auth/register/register.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formRegisterUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/auth/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { UserService } from 'src/app/domain/services/user.service';\nimport { UserForRegister } from 'src/app/domain/view-to-model/models/user-for-register';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  formRegisterUser: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private userService: UserService,\n    private ngxSpinner: NgxSpinnerService,\n    private alertService: AlertService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormRegisterUser();\n  }\n\n\n  initFormRegisterUser() {\n    this.formRegisterUser = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    })\n  }\n\n  registerUser() {\n    let newUser = this.formRegisterUser.value as UserForRegister;\n    this.userService.create(newUser).subscribe(\n      (response) => {\n        this.alertService.successSave('Usuário');\n        setTimeout(() => {\n          this.router.navigate(['/auth/login']);\n        }, 1501);\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        \n        \n          \n          \n            \n              \n                Crie sua Conta\n              \n              \n                \n                  \n                    \n                  \n                \n                \n                  \n                \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    As senhas não são iguais\n                  \n                \n                \n                  Registrar Conta\n                \n              \n              \n              \n                Já possui conta? vá para o Login!\n              \n            \n          \n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Crie sua Conta                                                                                                                                                                                                                                                                                                                                            As senhas não são iguais                                                                    Registrar Conta                                                                          Já possui conta? vá para o Login!                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nHttpCodesModule\n\nHttpCodesModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nHttpCodesModule->SharedModule\n\n\n\n\n\nHttpCodesModule \n\nHttpCodesModule \n\nHttpCodesModule  -->\n\nSharedModule->HttpCodesModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HttpCodesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpCodesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ComponentsModule } from './components/components.module';\n\nimport { HttpCodesModule } from './http-codes/http-codes.module';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    HttpCodesModule,\n    ComponentsModule\n  ],\n  exports: [\n    HttpCodesModule,\n    ComponentsModule\n  ],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/sidebar/sidebar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/sidebar/sidebar.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Default value : this.jwtService.decodeToken().role\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/sidebar/sidebar.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { JwtService } from 'src/app/core/services/jwt.service';\nimport { Role } from 'src/app/domain/enums/role';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  role: Role = this.jwtService.decodeToken().role;\n  constructor(private jwtService: JwtService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            \n                \n                    \n                \n            \n            \n                Summoners Rift\n            \n          \n    \n\n    \n    \n\n    \n    \n        \n            \n            Dashboard\n    \n\n    \n    \n\n    \n    \n        Admin\n    \n\n    \n    \n        \n            \n            Torneio\n        \n        \n            \n                Funcionalidades\n                Adicionar\n                Consultar\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        Summoners Rift                                                                          Dashboard                            Admin                                            Torneio                                            Funcionalidades                Adicionar                Consultar                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/team.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITeam\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/team.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/team.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/team.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ITeam } from \"../interfaces/team.interface\";\nimport { User } from \"./user\";\n\nexport class Team implements ITeam{\n  id: number;\n  name: string;\n  users: User[];\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/team.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                enter\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/team.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(team: ITeam)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/team.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enter\n                        \n                    \n                \n            \n            \n                \nenter(team: ITeam)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/team.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                                ITeam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/team.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}/teams`\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/team.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ITeam } from '../interfaces/team.interface';\n\n@Injectable()\nexport class TeamService {\n  private API_URL = `${environment.API_URL}/teams`\n  constructor(private http: HttpClient) { }\n\n  create(team: ITeam) {\n    return this.http.post(this.API_URL, team);\n  }\n\n  get() {\n    return this.http.get(this.API_URL);\n  }\n\n  enter(team: ITeam){\n    return this.http.post(`${this.API_URL}/enter`, team)\n  }\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/token.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/token.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/token.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/models/token.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../../domain/enums/role\";\n\nexport class Token{\n  id: number;\n  name: string;\n  role: Role;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/topbar/topbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, alertService: AlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/topbar/topbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/topbar/topbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/topbar/topbar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/topbar/topbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ThrowStmt } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { JwtService } from 'src/app/core/services/jwt.service';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss']\n})\nexport class TopbarComponent implements OnInit {\n\n  username: string;\n  constructor(private jwtService: JwtService, private alertService: AlertService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.username = this.jwtService.decodeToken().name;\n  }\n\n  logout(){\n    this.jwtService.destroyToken();\n    this.alertService.success('Deslogado com Sucesso!', 'você será redirecionado em breve.')\n    setTimeout(() => {\n      this.router.navigate(['/auth/login']);\n    }, 1600);\n  }\n\n}\n\n    \n\n    \n          \n\n    \n    \n\n\n\n        \n        \n            \n                {{username}}\n                \n            \n            \n            \n                \n                    \n                    Logout\n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{username}}                                                                                                            Logout                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tournament.html":{"url":"classes/Tournament.html","title":"class - Tournament","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tournament\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/tournament.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITournament\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowedElos\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                matchs\n                            \n                            \n                                maxNumberTeams\n                            \n                            \n                                name\n                            \n                            \n                                teams\n                            \n                            \n                                winner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowedElos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Elo[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Match[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxNumberTeams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        winner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITeam\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/tournament.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IElo } from \"../interfaces/elo.interface\";\nimport { IMatch } from \"../interfaces/match.interface\";\nimport { ITeam } from \"../interfaces/team.interface\";\nimport { ITournament } from \"../interfaces/tournament.interface\";\nimport { Elo } from \"./elo\";\nimport { Match } from \"./match\";\nimport { Team } from \"./team\";\n\nexport class Tournament implements ITournament{\n  id: number;\n  name: string;\n  date: Date;\n  maxNumberTeams: number;\n  allowedElos: Elo[];\n  teams: Team[];\n  matchs: Match[];\n  winner: ITeam;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentCreateComponent.html":{"url":"components/TournamentCreateComponent.html","title":"component - TournamentCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TournamentCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        É Responsável por Criar o torneio\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament-create\n            \n\n            \n                styleUrls\n                ./tournament-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tournament-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elos\n                            \n                            \n                                formEloCreate\n                            \n                            \n                                formTournamentCreate\n                            \n                            \n                                modalEloCreate\n                            \n                            \n                                modalEloCreateRef\n                            \n                            \n                                titleActionPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getElos\n                            \n                            \n                                initFormEloCreate\n                            \n                            \n                                initFormTournamentCreate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModalEloCreate\n                            \n                            \n                                saveElo\n                            \n                            \n                                saveTournament\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, tournamentService: TournamentService, formBuilder: FormBuilder, eloService: EloService, ngxSpinner: NgxSpinnerService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eloService\n                                                  \n                                                        \n                                                                        EloService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(modalRef: BsModalRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalRef\n                                    \n                                            BsModalRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElos\n                        \n                    \n                \n            \n            \n                \ngetElos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormEloCreate\n                        \n                    \n                \n            \n            \n                \ninitFormEloCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormTournamentCreate\n                        \n                    \n                \n            \n            \n                \ninitFormTournamentCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEloCreate\n                        \n                    \n                \n            \n            \n                \nopenModalEloCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveElo\n                        \n                    \n                \n            \n            \n                \nsaveElo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTournament\n                        \n                    \n                \n            \n            \n                \nsaveTournament()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Elo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formEloCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formTournamentCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEloCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalEloCreate', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEloCreateRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleActionPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Cadastro'\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Properties } from 'src/app/core/helpers/Properties';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { Elo } from 'src/app/domain/models/elo';\nimport { Tournament } from 'src/app/domain/models/tournament';\nimport { EloService } from 'src/app/domain/services/elo.service';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\n  /**\n * É Responsável por Criar o torneio\n */\n@Component({\n  selector: 'app-tournament-create',\n  templateUrl: './tournament-create.component.html',\n  styleUrls: ['./tournament-create.component.scss'],\n})\n\nexport class TournamentCreateComponent implements OnInit {\n\n  formTournamentCreate: FormGroup;\n  formEloCreate: FormGroup;\n\n  titleActionPage: string = 'Cadastro';\n\n  @ViewChild('modalEloCreate', { static: false }) modalEloCreate: TemplateRef;\n  modalEloCreateRef: BsModalRef;\n\n  elos: Elo[] = [];\n\n  constructor(protected modalService: BsModalService,\n    protected tournamentService: TournamentService,\n    protected formBuilder: FormBuilder,\n    protected eloService: EloService,\n    protected ngxSpinner: NgxSpinnerService,\n    protected alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormTournamentCreate();\n    this.getElos();\n  }\n\n  initFormTournamentCreate() {\n    this.formTournamentCreate = this.formBuilder.group({\n      id: [],\n      name: [],\n      date: [],\n      maxNumberTeams: [],\n      allowedElos: [[], Validators.required],\n    })\n  }\n\n  initFormEloCreate() {\n    this.formEloCreate = this.formBuilder.group({\n      name: []\n    })\n  }\n\n  saveTournament() {\n    this.ngxSpinner.show();\n\n    let tournament = this.formTournamentCreate.value as Tournament;\n\n    Properties.convertArrayNumberInArrayObj(tournament, ['allowedElos']);\n\n    this.tournamentService.create(tournament).subscribe(\n      (response) => {\n        this.alertService.successSave('Torneio');\n        this.ngxSpinner.hide();\n      }\n    )\n  }\n\n  saveElo() {\n    this.ngxSpinner.show();\n    let elo = this.formEloCreate.value as Elo;\n\n    this.eloService.create(elo).subscribe(\n      (response) => {\n        this.getElos();\n        this.ngxSpinner.hide();\n        this.formEloCreate.reset();\n        this.closeModal(this.modalEloCreateRef);\n      }\n    )\n  }\n\n  getElos() {\n    this.eloService.read().subscribe(\n      (response: Elo[]) => {\n        Object.assign(this.elos, response)\n      }\n    )\n  }\n\n  openModalEloCreate() {\n    this.initFormEloCreate();\n    this.modalEloCreateRef = this.modalService.show(this.modalEloCreate);\n  }\n\n  closeModal(modalRef: BsModalRef) {\n    modalRef.hide();\n  }\n\n\n}\n\n    \n\n    \n        Torneio\n\n\n\n  \n    {{titleActionPage}}\n  \n  \n    \n      \n        \n          \n            Nome\n            \n          \n        \n        \n          \n            Data e Hora de início\n            \n          \n        \n        \n          \n            Quantidade de Equipes Permitidas\n            \n          \n        \n\n        \n          Elos Permitidos\n          \n            {{elo.name}}\n          \n\n        \n        \n          \n            \n          \n        \n\n        \n          \n            \n              \n            \n            Cancelar\n          \n          \n            \n              \n            \n            Salvar\n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Cadastrar Elo\n        ×\n      \n\n      \n        \n          \n            Nome\n            \n          \n        \n      \n\n      \n        Fechar\n        Salvar\n      \n    \n  \n  \n\n    \n\n    \n                \n                    ./tournament-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Torneio      {{titleActionPage}}                                            Nome                                                            Data e Hora de início                                                            Quantidade de Equipes Permitidas                                                Elos Permitidos                      {{elo.name}}                                                                                                                                      Cancelar                                                                      Salvar                                                  Cadastrar Elo        ×                                          Nome                                                  Fechar        Salvar              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentEditComponent.html":{"url":"components/TournamentEditComponent.html","title":"component - TournamentEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TournamentEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/admin/tournament/tournament-edit/tournament-edit.component.ts\n\n\n\n    \n        Description\n    \n    \n        É Responsável por Editar o torneio pelo ID\n\n    \n\n    \n        Extends\n    \n    \n                TournamentCreateComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament-edit\n            \n\n            \n                styleUrls\n                ../tournament-create/tournament-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../tournament-create/tournament-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titleActionPage\n                            \n                            \n                                tournamentId\n                            \n                            \n                                elos\n                            \n                            \n                                formEloCreate\n                            \n                            \n                                formTournamentCreate\n                            \n                            \n                                modalEloCreate\n                            \n                            \n                                modalEloCreateRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveTournament\n                            \n                            \n                                tournamentGetById\n                            \n                            \n                                closeModal\n                            \n                            \n                                getElos\n                            \n                            \n                                initFormEloCreate\n                            \n                            \n                                initFormTournamentCreate\n                            \n                            \n                                openModalEloCreate\n                            \n                            \n                                saveElo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, tournamentService: TournamentService, formBuilder: FormBuilder, eloService: EloService, ngxSpinner: NgxSpinnerService, alertService: AlertService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/admin/tournament/tournament-edit/tournament-edit.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eloService\n                                                  \n                                                        \n                                                                        EloService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTournament\n                        \n                    \n                \n            \n            \n                \nsaveTournament()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournamentGetById\n                        \n                    \n                \n            \n            \n                \ntournamentGetById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-edit/tournament-edit.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(modalRef: BsModalRef)\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalRef\n                                    \n                                            BsModalRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElos\n                        \n                    \n                \n            \n            \n                \ngetElos()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormEloCreate\n                        \n                    \n                \n            \n            \n                \ninitFormEloCreate()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormTournamentCreate\n                        \n                    \n                \n            \n            \n                \ninitFormTournamentCreate()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEloCreate\n                        \n                    \n                \n            \n            \n                \nopenModalEloCreate()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveElo\n                        \n                    \n                \n            \n            \n                \nsaveElo()\n                \n            \n\n\n            \n                \n                    Inherited from         TournamentCreateComponent\n\n                \n            \n            \n                \n                        Defined in         TournamentCreateComponent:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        titleActionPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Edição'\n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournamentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number(this.route.snapshot.paramMap.get('id'))\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-edit/tournament-edit.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Elo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formEloCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formTournamentCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEloCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalEloCreate', {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEloCreateRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                        \n                            \n                                Inherited from         TournamentCreateComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         TournamentCreateComponent:29\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Datetime } from 'src/app/core/helpers/Datetime';\nimport { Properties } from 'src/app/core/helpers/Properties';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { ITournament } from 'src/app/domain/interfaces/tournament.interface';\nimport { Tournament } from 'src/app/domain/models/tournament';\nimport { EloService } from 'src/app/domain/services/elo.service';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\nimport { TournamentCreateComponent } from '../tournament-create/tournament-create.component';\n  /**\n * É Responsável por Editar o torneio pelo ID\n */\n@Component({\n  selector: 'app-tournament-edit',\n  templateUrl: '../tournament-create/tournament-create.component.html',\n  styleUrls: ['../tournament-create/tournament-create.component.scss']\n})\nexport class TournamentEditComponent extends TournamentCreateComponent implements OnInit {\n  tournamentId: number = Number(this.route.snapshot.paramMap.get('id'));\n\n  titleActionPage: string = 'Edição';\n  \n\n\n  constructor(protected modalService: BsModalService,\n    protected tournamentService: TournamentService,\n    protected formBuilder: FormBuilder,\n    protected eloService: EloService,\n    protected ngxSpinner: NgxSpinnerService,\n    protected alertService: AlertService,\n    private route: ActivatedRoute) {\n    super(modalService, tournamentService, formBuilder, eloService, ngxSpinner, alertService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.tournamentGetById();\n  }\n\n\n  saveTournament(){\n    this.ngxSpinner.show();\n    let tournament = this.formTournamentCreate.value as Tournament;\n    Properties.convertArrayNumberInArrayObj(tournament, ['allowedElos']);\n    this.tournamentService.update(tournament).subscribe(\n      (response) =>{\n        this.ngxSpinner.hide();\n        this.alertService.successUpdate('Torneio');\n      }\n    )\n  }\n\n\n\n  tournamentGetById(){\n    this.tournamentService.getById(this.tournamentId).subscribe(\n      (response: ITournament) =>{\n\n        Properties.convertArrayObjInArrayNumber(response, ['allowedElos']);\n\n        this.formTournamentCreate.patchValue(response);\n\n        this.formTournamentCreate.get('date').setValue(Datetime.convertToInputDateTime(response.date));\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        Torneio\n\n\n\n  \n    {{titleActionPage}}\n  \n  \n    \n      \n        \n          \n            Nome\n            \n          \n        \n        \n          \n            Data e Hora de início\n            \n          \n        \n        \n          \n            Quantidade de Equipes Permitidas\n            \n          \n        \n\n        \n          Elos Permitidos\n          \n            {{elo.name}}\n          \n\n        \n        \n          \n            \n          \n        \n\n        \n          \n            \n              \n            \n            Cancelar\n          \n          \n            \n              \n            \n            Salvar\n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Cadastrar Elo\n        ×\n      \n\n      \n        \n          \n            Nome\n            \n          \n        \n      \n\n      \n        Fechar\n        Salvar\n      \n    \n  \n  \n\n    \n\n    \n                \n                    ../tournament-create/tournament-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Torneio      {{titleActionPage}}                                            Nome                                                            Data e Hora de início                                                            Quantidade de Equipes Permitidas                                                Elos Permitidos                      {{elo.name}}                                                                                                                                      Cancelar                                                                      Salvar                                                  Cadastrar Elo        ×                                          Nome                                                  Fechar        Salvar              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentListComponent.html":{"url":"components/TournamentListComponent.html","title":"component - TournamentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TournamentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        É Responsável por listar todas os torneios e permitir que o usuário admin, gere as Partidas, gerencie as partidas, edite o torneio e exclua o torneio!\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament-list\n            \n\n            \n                styleUrls\n                ./tournament-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tournament-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTournament\n                            \n                            \n                                generateMatchsTournaments\n                            \n                            \n                                getTournaments\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tournamentService: TournamentService, datatableService: DatatableService, ngxSpinner: NgxSpinnerService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datatableService\n                                                  \n                                                        \n                                                                        DatatableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTournament\n                        \n                    \n                \n            \n            \n                \ndeleteTournament(id: number, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateMatchsTournaments\n                        \n                    \n                \n            \n            \n                \ngenerateMatchsTournaments(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTournaments\n                        \n                    \n                \n            \n            \n                \ngetTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITournament[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DatatableService } from 'src/app/core/jquery/datatable.service';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { ITournament } from 'src/app/domain/interfaces/tournament.interface';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\n  /**\n * É Responsável por listar todas os torneios e permitir que o usuário admin, gere as Partidas, gerencie as partidas, edite o torneio e exclua o torneio!\n */\n@Component({\n  selector: 'app-tournament-list',\n  templateUrl: './tournament-list.component.html',\n  styleUrls: ['./tournament-list.component.scss']\n})\nexport class TournamentListComponent implements OnInit {\n\n  tournaments: ITournament[] = [];\n\n  constructor(\n    private tournamentService: TournamentService,\n    private datatableService: DatatableService,\n    private ngxSpinner: NgxSpinnerService,\n    private alertService: AlertService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getTournaments();\n  }\n\n\n  generateMatchsTournaments(tournament: ITournament){\n    this.tournamentService.fillMatchs(tournament).subscribe(\n      (response) =>{\n        this.alertService.success('Tudo certo!', 'as partidas foram geradas com sucesso');\n      }\n    )\n  }\n\n\n  getTournaments() {\n    this.ngxSpinner.show();\n    this.tournamentService.get().subscribe(\n      (response: ITournament[]) =>{\n        Object.assign(this.tournaments, response);\n        this.datatableService.init();\n      }\n    )\n  }\n\n\n  deleteTournament(id: number, index: number){\n    this.alertService.confirm('Deseja prosseguir com a exclusão?').then(\n      value => {\n        if(value.isConfirmed == true){\n          this.tournamentService.delete(id).subscribe(\n            (response) =>{\n              this.tournaments.splice(index, 1);\n              this.alertService.successDelete('Torneio');\n            }\n          )\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    Torneio\n  \n  \n    \n      Novo Torneio\n    \n  \n\n\n\n\n\n  \n    Lista de Torneios\n  \n  \n    \n      \n        \n          \n            Id\n            Nome\n            Data\n            Elos Permitidos\n            Competidores\n            Numero de Vagas\n            Ações\n          \n        \n        \n          \n            #{{tournament.id}}\n            {{tournament.name}}\n            {{tournament.date | date:'dd/MM/yyyy h:mm a'}}\n            \n              {{elo.name}}, \n            \n            \n              {{team.name}}, \n            \n            \n              {{tournament.maxNumberTeams}}\n            \n            \n              \n              \n              \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Torneio              Novo Torneio            Lista de Torneios                                            Id            Nome            Data            Elos Permitidos            Competidores            Numero de Vagas            Ações                                                #{{tournament.id}}            {{tournament.name}}            {{tournament.date | date:\\'dd/MM/yyyy h:mm a\\'}}                          {{elo.name}},                                       {{team.name}},                                       {{tournament.maxNumberTeams}}                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentManagementMatchesComponent.html":{"url":"components/TournamentManagementMatchesComponent.html","title":"component - TournamentManagementMatchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TournamentManagementMatchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts\n\n\n\n    \n        Description\n    \n    \n        É Responsável por listar todas as partidas de um torneio especifico e permite que o usuário admin de os resultados das partidas e avançe a etapa do torneio\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament-management-matches\n            \n\n            \n                styleUrls\n                ./tournament-management-matches.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tournament-management-matches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateMatchsTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveResultMatch\n                            \n                            \n                                tournamentGetById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tournamentService: TournamentService, route: ActivatedRoute, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateMatchsTournaments\n                        \n                    \n                \n            \n            \n                \ngenerateMatchsTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveResultMatch\n                        \n                    \n                \n            \n            \n                \nsaveResultMatch(match: IMatch, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                                IMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournamentGetById\n                        \n                    \n                \n            \n            \n                \ntournamentGetById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tournament\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITournament\n\n                    \n                \n                \n                    \n                        Default value : new Tournament()\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournamentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number(this.route.snapshot.paramMap.get('id'))\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { IMatch } from 'src/app/domain/interfaces/match.interface';\nimport { ITournament } from 'src/app/domain/interfaces/tournament.interface';\nimport { Team } from 'src/app/domain/models/team';\nimport { Tournament } from 'src/app/domain/models/tournament';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\nimport Swal from 'sweetalert2';\n  /**\n * É Responsável por listar todas as partidas de um torneio especifico e permite que o usuário admin de os resultados das partidas e avançe a etapa do torneio\n */\n@Component({\n  selector: 'app-tournament-management-matches',\n  templateUrl: './tournament-management-matches.component.html',\n  styleUrls: ['./tournament-management-matches.component.scss']\n})\nexport class TournamentManagementMatchesComponent implements OnInit {\n\n  tournament: ITournament = new Tournament();\n  tournamentId: number = Number(this.route.snapshot.paramMap.get('id'));\n\n  constructor(\n    private tournamentService: TournamentService,\n     private route: ActivatedRoute,\n     private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.tournamentGetById()\n  }\n\n  tournamentGetById(){\n    this.tournamentService.getById(this.tournamentId).subscribe(\n      (response: ITournament) =>{\n        Object.assign(this.tournament, response);\n      }\n    )\n  }\n\n  \n\n  saveResultMatch(match: IMatch, index: number){\n    Swal.fire({\n      title: 'Vencedor da Partida',\n      showDenyButton: true,\n      confirmButtonText: match.team_1.name,\n      denyButtonText: match.team_2.name,\n    }).then((result) => {\n      let winner = new Team();\n      if (result.isConfirmed) {\n        winner.id = match.team_1.id;\n        this.tournament.matchs[index].winner = winner;\n        \n      } else {\n        winner.id = match.team_2.id;\n        this.tournament.matchs[index].winner = winner;\n      }\n      \n      if(index == this.tournament.matchs.length - 1){\n        this.tournament.winner = winner;\n      }\n\n      this.tournamentService.update(this.tournament).subscribe(\n        (response) =>{\n          this.alertService.successSave('Partida');\n          this.tournamentGetById();\n        }\n      )\n    })\n  }\n\n  generateMatchsTournaments(){\n    this.tournamentService.fillMatchs(this.tournament).subscribe(\n      (response) =>{\n        this.alertService.success('Tudo certo!', 'as partidas foram geradas com sucesso');\n      }\n    )\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    Partidas\n  \n  \n    \n    \n    \n      Avançar Etapa do Torneio\n    \n  \n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                     Partida {{i+1}}\n                     Final\n                  \n                  \n                    {{match.team_1.name}} x {{match.team_2.name}}\n\n                  \n                  \n                    Vencedor: {{match.winner?.name}}\n                  \n                  \n                    \n                      \n                    \n                  \n\n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament-management-matches.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Partidas                      Avançar Etapa do Torneio                                                                                                                                         Partida {{i+1}}                     Final                                                        {{match.team_1.name}} x {{match.team_2.name}}                                                        Vencedor: {{match.winner?.name}}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentManagementMatchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_exports\n\n\n\ncluster_TournamentModule_providers\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentCreateComponent\n\nTournamentCreateComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentCreateComponent->TournamentModule\n\n\n\n\n\nTournamentEditComponent\n\nTournamentEditComponent\n\nTournamentModule -->\n\nTournamentEditComponent->TournamentModule\n\n\n\n\n\nTournamentListComponent\n\nTournamentListComponent\n\nTournamentModule -->\n\nTournamentListComponent->TournamentModule\n\n\n\n\n\nTournamentManagementMatchesComponent\n\nTournamentManagementMatchesComponent\n\nTournamentModule -->\n\nTournamentManagementMatchesComponent->TournamentModule\n\n\n\n\n\nTournamentCreateComponent \n\nTournamentCreateComponent \n\nTournamentCreateComponent  -->\n\nTournamentModule->TournamentCreateComponent \n\n\n\n\n\nTournamentEditComponent \n\nTournamentEditComponent \n\nTournamentEditComponent  -->\n\nTournamentModule->TournamentEditComponent \n\n\n\n\n\nTournamentListComponent \n\nTournamentListComponent \n\nTournamentListComponent  -->\n\nTournamentModule->TournamentListComponent \n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nTournamentModule -->\n\nAuthService->TournamentModule\n\n\n\n\n\nEloService\n\nEloService\n\nTournamentModule -->\n\nEloService->TournamentModule\n\n\n\n\n\nTournamentService\n\nTournamentService\n\nTournamentModule -->\n\nTournamentService->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/admin/tournament/tournament.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentCreateComponent\n                        \n                        \n                            TournamentEditComponent\n                        \n                        \n                            TournamentListComponent\n                        \n                        \n                            TournamentManagementMatchesComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            EloService\n                        \n                        \n                            TournamentService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TournamentCreateComponent\n                        \n                        \n                            TournamentEditComponent\n                        \n                        \n                            TournamentListComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthService } from 'src/app/domain/services/auth.service';\nimport { TournamentRoutingModule } from './tournament-routing.module';\nimport { TournamentListComponent } from './tournament-list/tournament-list.component';\nimport { TournamentCreateComponent } from './tournament-create/tournament-create.component';\nimport { TournamentEditComponent } from './tournament-edit/tournament-edit.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsModalService, ModalModule } from 'ngx-bootstrap/modal';\nimport { EloService } from 'src/app/domain/services/elo.service';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\nimport { TournamentManagementMatchesComponent } from './tournament-management-matches/tournament-management-matches.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        TournamentRoutingModule,\n        NgSelectModule,\n        ModalModule.forRoot(),\n    ],\n    providers: [\n        AuthService,\n        BsModalService,\n        EloService,\n        TournamentService\n    ],\n    declarations: [\n        TournamentListComponent,\n        TournamentCreateComponent,\n        TournamentEditComponent,\n        TournamentManagementMatchesComponent,\n    ],\n    exports: [\n        TournamentListComponent,\n        TournamentCreateComponent,\n        TournamentEditComponent\n    ],\n    schemas:[\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/admin/tournament/tournament-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentCreateComponent } from './tournament-create/tournament-create.component';\nimport { TournamentEditComponent } from './tournament-edit/tournament-edit.component';\nimport { TournamentListComponent } from './tournament-list/tournament-list.component';\nimport { TournamentManagementMatchesComponent } from './tournament-management-matches/tournament-management-matches.component';\n\n\n\n\nconst routes: Routes = [\n  { path:'', pathMatch:'full', redirectTo:\"list\" },\n  { path:'list', component:TournamentListComponent },\n  { path:\"create\", component:TournamentCreateComponent},\n  { path: \"edit/:id\", component:TournamentEditComponent},\n  { path: \"management/matches/:id\", component:TournamentManagementMatchesComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n  ]\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentService.html":{"url":"injectables/TournamentService.html","title":"injectable - TournamentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/tournament.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                enter\n                            \n                            \n                                fillMatchs\n                            \n                            \n                                get\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/tournament.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(object: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enter\n                        \n                    \n                \n            \n            \n                \nenter(object: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fillMatchs\n                        \n                    \n                \n            \n            \n                \nfillMatchs(object: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(object: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/tournament.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}/tournaments`\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/tournament.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IApiService } from 'src/app/core/interfaces/api-service.interface';\nimport { environment } from 'src/environments/environment';\nimport { ITournament } from '../interfaces/tournament.interface';\n\n@Injectable()\nexport class TournamentService implements IApiService{\n  private API_URL = `${environment.API_URL}/tournaments`\n  constructor(private http: HttpClient) { }\n  \n  create(object: ITournament): Observable {\n    return this.http.post(this.API_URL, object);\n  }\n  update(object: ITournament): Observable {\n    return this.http.put(this.API_URL, object);\n  }\n  delete(id: number): Observable {\n    return this.http.delete(`${this.API_URL}/${id}`);\n  }\n  get(): Observable {\n    return this.http.get(this.API_URL);\n  }\n  getById(id: number): Observable {\n    return this.http.get(`${this.API_URL}/${id}`);\n  }\n\n  enter(object: ITournament):Observable{\n    return this.http.post(`${this.API_URL}/enter`, object);\n  }\n\n  fillMatchs(object: ITournament):Observable{\n    return this.http.put(`${this.API_URL}/fillMatchs`, object);\n  }\n  \n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elo\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Elo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/models/user.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../enums/role\";\nimport { IElo } from \"../interfaces/elo.interface\";\nimport { ITeam } from \"../interfaces/team.interface\";\nimport { IUser } from \"../interfaces/user.interface\";\nimport { Elo } from \"./elo\";\nimport { Team } from \"./team\";\n\nexport class User implements IUser {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  role: Role;\n  elo: Elo;\n  team: Team;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserForRegister.html":{"url":"classes/UserForRegister.html","title":"class - UserForRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserForRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/view-to-model/models/user-for-register.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUserForRegister\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/view-to-model/models/user-for-register.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/view-to-model/models/user-for-register.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/view-to-model/models/user-for-register.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/view-to-model/models/user-for-register.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUserForRegister } from '../interfaces/user-for-register.interface';\n\nexport class UserForRegister implements IUserForRegister{\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserGeneralComponent.html":{"url":"components/UserGeneralComponent.html","title":"component - UserGeneralComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserGeneralComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/user/user-general/user-general.component.ts\n\n\n\n    \n        Description\n    \n    \n        É Responsável por permitir que o usuario crie ou deixe o time, entre em um torneio, mude seu elo.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-general\n            \n\n            \n                styleUrls\n                ./user-general.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-general.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elo\n                            \n                            \n                                elos\n                            \n                            \n                                formCreateTeam\n                            \n                            \n                                formEnterTeam\n                            \n                            \n                                modalCreateTeam\n                            \n                            \n                                modalCreateTeamRef\n                            \n                            \n                                modalEnterTeam\n                            \n                            \n                                modalEnterTeamRef\n                            \n                            \n                                onGoingTournaments\n                            \n                            \n                                openTournaments\n                            \n                            \n                                teams\n                            \n                            \n                                tournaments\n                            \n                            \n                                user\n                            \n                            \n                                wonTournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                editElo\n                            \n                            \n                                enterTeam\n                            \n                            \n                                enterTournament\n                            \n                            \n                                getElos\n                            \n                            \n                                getInfoGeneralForUser\n                            \n                            \n                                getTeams\n                            \n                            \n                                getTournaments\n                            \n                            \n                                getUserByLogged\n                            \n                            \n                                initFormCreateTeam\n                            \n                            \n                                initFormEnterTeam\n                            \n                            \n                                leaveTeam\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModalCreateTeam\n                            \n                            \n                                openModalEnterTeam\n                            \n                            \n                                saveTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, tournamentService: TournamentService, formBuilder: FormBuilder, modalService: BsModalService, teamService: TeamService, ngxSpinner: NgxSpinnerService, alertService: AlertService, datatableService: DatatableService, eloService: EloService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxSpinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datatableService\n                                                  \n                                                        \n                                                                        DatatableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eloService\n                                                  \n                                                        \n                                                                        EloService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(modalRef: BsModalRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalRef\n                                    \n                                            BsModalRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editElo\n                        \n                    \n                \n            \n            \n                \neditElo(event: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enterTeam\n                        \n                    \n                \n            \n            \n                \nenterTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enterTournament\n                        \n                    \n                \n            \n            \n                \nenterTournament(tournament: ITournament)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                ITournament\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElos\n                        \n                    \n                \n            \n            \n                \ngetElos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfoGeneralForUser\n                        \n                    \n                \n            \n            \n                \ngetInfoGeneralForUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeams\n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTournaments\n                        \n                    \n                \n            \n            \n                \ngetTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByLogged\n                        \n                    \n                \n            \n            \n                \ngetUserByLogged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormCreateTeam\n                        \n                    \n                \n            \n            \n                \ninitFormCreateTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFormEnterTeam\n                        \n                    \n                \n            \n            \n                \ninitFormEnterTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leaveTeam\n                        \n                    \n                \n            \n            \n                \nleaveTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalCreateTeam\n                        \n                    \n                \n            \n            \n                \nopenModalCreateTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEnterTeam\n                        \n                    \n                \n            \n            \n                \nopenModalEnterTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTeam\n                        \n                    \n                \n            \n            \n                \nsaveTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/user/user-general/user-general.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IElo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formCreateTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formEnterTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalCreateTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalCreateTeam', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalCreateTeamRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEnterTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalEnterTeam', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalEnterTeamRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoingTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITeam[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITournament[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wonTournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/user/user-general/user-general.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DatatableService } from 'src/app/core/jquery/datatable.service';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { IElo } from 'src/app/domain/interfaces/elo.interface';\nimport { ITeam } from 'src/app/domain/interfaces/team.interface';\nimport { ITournament } from 'src/app/domain/interfaces/tournament.interface';\nimport { IUser } from 'src/app/domain/interfaces/user.interface';\nimport { InfoGeneralUser } from 'src/app/domain/model-to-view/info-general-user';\nimport { Elo } from 'src/app/domain/models/elo';\nimport { Team } from 'src/app/domain/models/team';\nimport { User } from 'src/app/domain/models/user';\nimport { EloService } from 'src/app/domain/services/elo.service';\nimport { TeamService } from 'src/app/domain/services/team.service';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\nimport { UserService } from 'src/app/domain/services/user.service';\n  /**\n * É Responsável por permitir que o usuario crie ou deixe o time, entre em um torneio, mude seu elo.\n */\n@Component({\n  selector: 'app-user-general',\n  templateUrl: './user-general.component.html',\n  styleUrls: ['./user-general.component.scss']\n})\nexport class UserGeneralComponent implements OnInit {\n\n  wonTournaments: number = 0;\n  openTournaments: number = 0;\n  onGoingTournaments: number = 0;\n\n  user: IUser = new User();\n  teams: ITeam[] = [];\n  tournaments: ITournament[] = [];\n  elos: IElo[] = [];\n\n  elo: number;\n\n\n  @ViewChild('modalCreateTeam', { static: false }) modalCreateTeam: TemplateRef;\n  modalCreateTeamRef: BsModalRef;\n\n  formCreateTeam: FormGroup;\n\n  @ViewChild('modalEnterTeam', { static: false }) modalEnterTeam: TemplateRef;\n  modalEnterTeamRef: BsModalRef;\n\n  formEnterTeam: FormGroup;\n\n\n  constructor(private userService: UserService,\n    private tournamentService: TournamentService,\n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    private teamService: TeamService,\n    private ngxSpinner: NgxSpinnerService,\n    private alertService: AlertService,\n    private datatableService: DatatableService,\n    private eloService: EloService) { }\n\n  ngOnInit(): void {\n    this.getUserByLogged();\n    this.getTournaments();\n    this.getElos();\n    this.getInfoGeneralForUser();\n  }\n\n  initFormCreateTeam() {\n    this.formCreateTeam = this.formBuilder.group({\n      name: [],\n    })\n  }\n  initFormEnterTeam() {\n    this.formEnterTeam = this.formBuilder.group({\n      id: [null, Validators.required],\n    })\n  }\n\n  getUserByLogged() {\n    this.userService.getByLogged().subscribe(\n      (response: IUser) => {\n        Object.assign(this.user, response)\n      }\n    )\n  }\n\n  getTeams() {\n    this.ngxSpinner.show();\n    this.teamService.get().subscribe(\n      (response: ITeam[]) => {\n        Object.assign(this.teams, response);\n      }\n    )\n  }\n\n  saveTeam() {\n    this.ngxSpinner.show();\n    let team = this.formCreateTeam.value as Team;\n    this.teamService.create(team).subscribe(\n      (response) => {\n        this.closeModal(this.modalCreateTeamRef);\n        this.formCreateTeam.reset();\n        this.ngxSpinner.hide();\n        this.alertService.successSave('Equipe');\n        this.getUserByLogged();\n      }\n    )\n  }\n\n  getTournaments() {\n    this.ngxSpinner.show();\n    this.tournamentService.get().subscribe(\n      (response: ITournament[]) => {\n        Object.assign(this.tournaments, response);\n        this.datatableService.init();\n      }\n    )\n  }\n\n  enterTeam() {\n    this.ngxSpinner.show();\n    let team = this.formEnterTeam.value as Team;\n    this.teamService.enter(team).subscribe(\n      (response) => {\n        this.alertService.success('Bem vindo ao time', '');\n        this.formEnterTeam.reset();\n        this.closeModal(this.modalEnterTeamRef);\n        this.ngxSpinner.hide();\n        this.getUserByLogged();\n      }\n    )\n  }\n\n  leaveTeam() {\n    this.ngxSpinner.show();\n    this.alertService.confirm('deseja sair da equipe?').then(\n      (value) => {\n        this.userService.leaveTeam().subscribe(\n          (response) => {\n            this.alertService.success('Saida Realizada com Sucesso!', 'te desejamos boa sorte na sua futura nova equipe!');\n            this.getUserByLogged();\n          }\n        )\n      }\n    )\n\n  }\n\n  enterTournament(tournament: ITournament) {\n    this.ngxSpinner.show();\n    this.alertService.confirm('deseja entrar no torneio cujo nome é ' + tournament.name + '?').then(\n      (value) => {\n        if (value.isConfirmed) {\n          this.tournamentService.enter(tournament).subscribe(\n            (response) => {\n              this.alertService.success('Inscrição Realizada', 'Boa sorte!!!');\n              this.datatableService.destroy();\n              this.getTournaments();\n            }\n          )\n        }\n      }\n    )\n  }\n\n  getInfoGeneralForUser(){\n    this.userService.getGeneral().subscribe(\n      (response: InfoGeneralUser) =>{\n        this.wonTournaments = response.wonTournaments;\n        this.onGoingTournaments = response.onGoingTournaments;\n        this.openTournaments = response.openTournaments;\n      }\n    )\n  }\n\n  editElo(event: number) {\n    this.ngxSpinner.show();\n    let elo = new Elo();\n    elo.id = event;\n    this.userService.updateElo(elo).subscribe(\n      (response) => {\n        this.ngxSpinner.hide();\n      }\n    )\n\n\n  }\n\n  getElos() {\n    this.ngxSpinner.show();\n    this.eloService.read().subscribe(\n      (response: IElo[]) => {\n        Object.assign(this.elos, response);\n        this.ngxSpinner.hide();\n      }\n    )\n  }\n\n\n  openModalEnterTeam() {\n    this.initFormEnterTeam();\n    this.getTeams();\n    this.modalEnterTeamRef = this.modalService.show(this.modalEnterTeam);\n  }\n\n\n  openModalCreateTeam() {\n    this.initFormCreateTeam();\n\n    this.modalCreateTeamRef = this.modalService.show(this.modalCreateTeam);\n  }\n\n  closeModal(modalRef: BsModalRef) {\n    modalRef.hide();\n  }\n\n\n}\n\n    \n\n    \n        \n    Geral\n\n\n    \n        \n            \n                \n                    \n                        \n                            Torneios Ganhos\n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                        \n                            Torneios Abertos\n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                        \n                            Torneios Em Andamento\n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            \n                Elo\n            \n            \n                \n                    \n                        \n                            Seu Elo Atual\n                            \n                                {{elo.name}}\n                            \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                Equipe\n            \n            \n                \n                    \n                        \n                            Você não está em nenhuma equipe.\n                            \n                            Clique aqui para\n                                criar\n                            ou\n                            aqui para entrar em uma já\n                                existente\n\n                        \n                    \n\n                    \n                        \n                            Nome: {{user.team.name}}\n                            \n                            Integrantes: {{member.name}}, \n                            \n                            \n                             Clique aqui para trocar\n                                de equipe\n                            ou\n                            aqui para sair da equipe\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                Lista de Torneios\n            \n            \n                \n                    \n                        \n                            \n                                Id\n                                Nome\n                                Data\n                                Elos Permitidos\n                                Competidores\n                                Ações\n                            \n                        \n                        \n                            \n                                #{{tournament.id}}\n                                {{tournament.name}}\n                                {{tournament.date | date:'dd/MM/yyyy h:mm a'}}\n                                \n                                    {{elo.name}}, \n                                \n                                \n                                    {{team.name}}, \n                                \n                                \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n    \n        \n            \n                Cadastrar Time\n                ×\n            \n\n            \n                \n                    \n                        Nome\n                        \n                    \n                \n            \n\n            \n                Fechar\n                Salvar\n            \n        \n    \n    \n\n\n\n    \n        \n            \n                Escolha um Time\n                ×\n            \n\n            \n                \n                    \n                        Nome\n                        \n                            {{team.name}}\n                        \n                    \n                \n            \n\n            \n                Fechar\n                Entrar\n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./user-general.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Geral                                                                                                                Torneios Ganhos                                                                                                                                                                                                                                                                    Torneios Abertos                                                                                                                                                                                                                                                                    Torneios Em Andamento                                                                                                                                                                                            Elo                                                                                                                Seu Elo Atual                                                            {{elo.name}}                                                                                                                                                        Equipe                                                                                                                Você não está em nenhuma equipe.                                                        Clique aqui para                                criar                            ou                            aqui para entrar em uma já                                existente                                                                                                                    Nome: {{user.team.name}}                                                        Integrantes: {{member.name}},                                                                                      Clique aqui para trocar                                de equipe                            ou                            aqui para sair da equipe                                                                                                                            Lista de Torneios                                                                                                                                                Id                                Nome                                Data                                Elos Permitidos                                Competidores                                Ações                                                                                                                                        #{{tournament.id}}                                {{tournament.name}}                                {{tournament.date | date:\\'dd/MM/yyyy h:mm a\\'}}                                                                    {{elo.name}},                                                                                                     {{team.name}},                                                                                                                                                                                                                                                                                             Cadastrar Time                ×                                                                                    Nome                                                                                                    Fechar                Salvar                                                                    Escolha um Time                ×                                                                                    Nome                                                    {{team.name}}                                                                                                    Fechar                Entrar                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NgxSpinnerComponent', 'selector': 'app-ngx-spinner'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TournamentCreateComponent', 'selector': 'app-tournament-create'},{'name': 'TournamentEditComponent', 'selector': 'app-tournament-edit'},{'name': 'TournamentListComponent', 'selector': 'app-tournament-list'},{'name': 'TournamentManagementMatchesComponent', 'selector': 'app-tournament-management-matches'},{'name': 'UserGeneralComponent', 'selector': 'app-user-general'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserGeneralComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserGeneralComponent\n\nUserGeneralComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserGeneralComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\nEloService\n\nEloService\n\nUserModule -->\n\nEloService->UserModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nUserModule -->\n\nTeamService->UserModule\n\n\n\n\n\nTournamentService\n\nTournamentService\n\nUserModule -->\n\nTournamentService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserGeneralComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EloService\n                        \n                        \n                            TeamService\n                        \n                        \n                            TournamentService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/domain/services/user.service';\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserGeneralComponent } from './user-general/user-general.component';\nimport { CountUpModule } from 'ngx-countup';\nimport { TournamentService } from 'src/app/domain/services/tournament.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { TeamService } from 'src/app/domain/services/team.service';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EloService } from 'src/app/domain/services/elo.service';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        UserRoutingModule,\n        CountUpModule,\n        NgSelectModule\n    ],\n    providers: [\n        UserService,\n        TournamentService,\n        BsModalService,\n        TeamService,\n        EloService\n    ],\n    declarations: [\n\n    \n    UserGeneralComponent\n  ],\n    exports: [\n\n    ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserGeneralComponent } from './user-general/user-general.component';\n\n\n\n\nconst routes: Routes = [\n   { path: '', component: UserGeneralComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n  ]\n})\nexport class UserRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getByLogged\n                            \n                            \n                                getGeneral\n                            \n                            \n                                leaveTeam\n                            \n                            \n                                updateElo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: IUserForRegister)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserForRegister\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByLogged\n                        \n                    \n                \n            \n            \n                \ngetByLogged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGeneral\n                        \n                    \n                \n            \n            \n                \ngetGeneral()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/user.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leaveTeam\n                        \n                    \n                \n            \n            \n                \nleaveTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateElo\n                        \n                    \n                \n            \n            \n                \nupdateElo(elo: IElo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/domain/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elo\n                                    \n                                                IElo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}/users`\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IElo } from '../interfaces/elo.interface';\nimport { IUser } from '../interfaces/user.interface';\nimport { IUserForRegister } from '../view-to-model/interfaces/user-for-register.interface';\n\n@Injectable()\nexport class UserService {\n  private API_URL = `${environment.API_URL}/users`\n  constructor(private http: HttpClient) { }\n\n  create(user: IUserForRegister) {\n    return this.http.post(this.API_URL, user);\n  }\n\n  getByLogged(): Observable {\n    return this.http.get(`${this.API_URL}/logged`);\n  }\n\n  updateElo(elo: IElo){\n    return this.http.put(`${this.API_URL}/elo`, elo);\n  }\n\n  leaveTeam(){\n    return this.http.put(`${this.API_URL}/leaveTeam`, {})\n  }\n\n  getGeneral(){\n    return this.http.get(`${this.API_URL}/general`)\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/helpers/Datetime.ts\n            \n            class\n            Datetime\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/helpers/Properties.ts\n            \n            class\n            Properties\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/api-service.interface.ts\n            \n            interface\n            IApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/jquery/datatable.service.ts\n            \n            injectable\n            DatatableService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/jquery/datatable.service.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/token.ts\n            \n            class\n            Token\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/security/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/security/base.guard.ts\n            \n            guard\n            BaseGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/interfaces/elo.interface.ts\n            \n            interface\n            IElo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/interfaces/match.interface.ts\n            \n            interface\n            IMatch\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/interfaces/team.interface.ts\n            \n            interface\n            ITeam\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/interfaces/tournament.interface.ts\n            \n            interface\n            ITournament\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/domain/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/domain/model-to-view/info-general-user.ts\n            \n            class\n            InfoGeneralUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/models/elo.ts\n            \n            class\n            Elo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/models/match.ts\n            \n            class\n            Match\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/models/team.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/models/tournament.ts\n            \n            class\n            Tournament\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/domain/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/domain/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/services/elo.service.ts\n            \n            injectable\n            EloService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/services/tournament.service.ts\n            \n            injectable\n            TournamentService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/domain/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/domain/view-to-model/interfaces/user-for-register.interface.ts\n            \n            interface\n            IUserForRegister\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/domain/view-to-model/models/user-for-register.ts\n            \n            class\n            UserForRegister\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/routes/admin/tournament/tournament-create/tournament-create.component.ts\n            \n            component\n            TournamentCreateComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/routes/admin/tournament/tournament-edit/tournament-edit.component.ts\n            \n            component\n            TournamentEditComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/routes/admin/tournament/tournament-list/tournament-list.component.ts\n            \n            component\n            TournamentListComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/routes/admin/tournament/tournament-management-matches/tournament-management-matches.component.ts\n            \n            component\n            TournamentManagementMatchesComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/routes/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/routes/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/routes/user/user-general/user-general.component.ts\n            \n            component\n            UserGeneralComponent\n            \n                3 %\n                (1/32)\n            \n        \n        \n            \n                \n                src/app/shared/components/ngx-spinner/ngx-spinner.component.ts\n            \n            component\n            NgxSpinnerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/http-codes/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/http-codes/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @fortawesome/fontawesome-free : ^5.15.4\n        \n            @ng-select/ng-select : ^8.1.1\n        \n            bootstrap : ^4.5.3\n        \n            datatables.net : ^1.10.25\n        \n            datatables.net-bs4 : 1.10.24\n        \n            jquery : ^3.6.0\n        \n            jwt-decode : ^3.1.2\n        \n            moment : ^2.29.1\n        \n            ngx-bootstrap : ^7.1.0\n        \n            ngx-countup : ^7.3.3\n        \n            ngx-spinner : ^12.0.0\n        \n            rxjs : ~6.6.0\n        \n            sweetalert2 : ^11.2.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/domain/enums/role.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDesafio\nThis project was generated with Angular CLI version 12.2.13.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpCodesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpCodesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_HttpCodesModule\n\n\n\ncluster_HttpCodesModule_declarations\n\n\n\ncluster_HttpCodesModule_imports\n\n\n\ncluster_HttpCodesModule_exports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\ncluster_TournamentModule_exports\n\n\n\ncluster_TournamentModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nLayoutModule->FooterComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nLayoutModule->SidebarComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nLayoutModule->TopbarComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHttpCodesModule \n\nHttpCodesModule \n\nHttpCodesModule  -->\n\nSharedModule->HttpCodesModule \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nAuthService->TournamentModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nNgxSpinnerComponent\n\nNgxSpinnerComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nNgxSpinnerComponent->ComponentsModule\n\n\n\n\n\nNgxSpinnerComponent \n\nNgxSpinnerComponent \n\nNgxSpinnerComponent  -->\n\nComponentsModule->NgxSpinnerComponent \n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\n\n\nHttpCodesModule\n\nHttpCodesModule\n\nHttpCodesModule -->\n\nForbiddenComponent->HttpCodesModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nHttpCodesModule -->\n\nNotFoundComponent->HttpCodesModule\n\n\n\nSharedModule -->\n\nHttpCodesModule->SharedModule\n\n\n\n\n\nForbiddenComponent \n\nForbiddenComponent \n\nForbiddenComponent  -->\n\nHttpCodesModule->ForbiddenComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nHttpCodesModule->NotFoundComponent \n\n\n\n\n\nHttpCodesRoutingModule\n\nHttpCodesRoutingModule\n\nHttpCodesModule -->\n\nHttpCodesRoutingModule->HttpCodesModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nLayoutModule -->\n\nSidebarComponent->LayoutModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nLayoutModule -->\n\nTopbarComponent->LayoutModule\n\n\n\n\n\nTournamentCreateComponent\n\nTournamentCreateComponent\n\nTournamentModule -->\n\nTournamentCreateComponent->TournamentModule\n\n\n\n\n\nTournamentEditComponent\n\nTournamentEditComponent\n\nTournamentModule -->\n\nTournamentEditComponent->TournamentModule\n\n\n\n\n\nTournamentListComponent\n\nTournamentListComponent\n\nTournamentModule -->\n\nTournamentListComponent->TournamentModule\n\n\n\n\n\nTournamentManagementMatchesComponent\n\nTournamentManagementMatchesComponent\n\nTournamentModule -->\n\nTournamentManagementMatchesComponent->TournamentModule\n\n\n\n\n\nTournamentCreateComponent \n\nTournamentCreateComponent \n\nTournamentCreateComponent  -->\n\nTournamentModule->TournamentCreateComponent \n\n\n\n\n\nTournamentEditComponent \n\nTournamentEditComponent \n\nTournamentEditComponent  -->\n\nTournamentModule->TournamentEditComponent \n\n\n\n\n\nTournamentListComponent \n\nTournamentListComponent \n\nTournamentListComponent  -->\n\nTournamentModule->TournamentListComponent \n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\nEloService\n\nEloService\n\nTournamentModule -->\n\nEloService->TournamentModule\n\n\n\nUserModule -->\n\nEloService->UserModule\n\n\n\n\n\nTournamentService\n\nTournamentService\n\nTournamentModule -->\n\nTournamentService->TournamentModule\n\n\n\nUserModule -->\n\nTournamentService->UserModule\n\n\n\n\n\nUserGeneralComponent\n\nUserGeneralComponent\n\nUserModule -->\n\nUserGeneralComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nUserModule -->\n\nTeamService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../datatable.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/jquery/datatable.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        $\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  API_URL: 'http://localhost:3000/api/v1',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpInterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
